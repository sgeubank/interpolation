(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    807444,      14605]
NotebookOptionsPosition[    801354,      14484]
NotebookOutlinePosition[    801708,      14500]
CellTagsIndexPosition[    801665,      14497]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Given", " ", 
     RowBox[{"either", ":", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "1", ")"}], " ", "a", " ", "degree"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], " ", "coef"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"or", "\[IndentingNewLine]", 
      RowBox[{"(", "2", ")"}], " ", "n", " ", "uniformly"}], "-", 
     RowBox[{"spaced", " ", "data", " ", "points", " ", 
      RowBox[{"in", " ", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"display", " ", "m_L"}], "-", 
     RowBox[{"term", " ", "left", " ", "and", " ", "m_R"}], "-", 
     RowBox[{
     "term", " ", "right", " ", "Taylor", " ", "series", " ", 
      "approximations"}]}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "various", " ", "order"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], " ", "Bernstein", " ", 
      "approximations", " ", "that", " ", "match", " ", "the", " ", 
      "derivatives", " ", 
      RowBox[{"exactly", ".", " ", "Assuming"}], " ", "that", " ", "all", " ",
       "the", " ", "Bernstein", " ", "coefficients", " ", "are", " ", "non"}],
      "-", 
     RowBox[{
      RowBox[{"negative", ".", "\[IndentingNewLine]", "exhibit"}], " ", 
      "bounds", " ", "on", " ", "the", " ", "Bernstein", " ", 
      "approximations", " ", "under", " ", "the", " ", "assumption", " ", 
      "that", " ", "the", " ", "function", " ", "is", " ", "either", " ", 
      "normed", " ", "or", " ", 
      RowBox[{"monotonic", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"messageNB", " ", "=", " ", 
      RowBox[{
       RowBox[{"Notebooks", "[", "\"\<Messages\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetOptions", "[", 
      RowBox[{"messageNB", ",", 
       RowBox[{"PrintPrecision", "\[Rule]", "4"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"range0", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eval", "=", 
      RowBox[{"eval", "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"recomputeTaylor", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"recomputeCoefs", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"msg", " ", "=", 
      RowBox[{"\"\<\\nEval \>\"", "<>", 
       RowBox[{"TextString", "[", "eval", "]"}], "<>", "\"\<\\n\>\""}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"numPts", "\[NotEqual]", "oldNumPts"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nchanged n to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "numPts", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mpair", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"numPts", ",", "leftM"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"1", ",", 
             RowBox[{"numPts", "+", "1", "-", "rightM"}]}], "]"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"oldMpair", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ";", "        ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "trigger", " ", "recomputation", " ", "of", " ", "everything", " ", 
          "that", " ", "depends", " ", "on", " ", "leftM", " ", "or", " ", 
          "rightM"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"d2b", "=", 
         RowBox[{
          RowBox[{"dataToBezierMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", "numPts"}], "]"}], "//", 
          "N"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d2t", "=", 
         RowBox[{
          RowBox[{"dataToTaylorMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", "numPts"}], "]"}], "//", 
          "N"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2b", "=", 
         RowBox[{
          RowBox[{"taylorToBezierMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", " ", "numPts"}], "]"}], "//", 
          "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"funcChanged", " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{"numPts", " ", "\[NotEqual]", " ", "oldNumPts"}], ")"}]}], 
       ",", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "function", " ", "values", " ", "and", " ", "everything", " ", "that",
          " ", "depends", " ", "on", " ", "them", " ", "have", " ", 
         "changed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"numPts", "\[Equal]", "oldNumPts"}], ",", 
          RowBox[{"msg", "=", 
           RowBox[{"msg", "<>", "\"\<\\nfunction changed\>\""}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"vals", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"func", "[", 
             RowBox[{"k", "/", 
              RowBox[{"(", 
               RowBox[{"numPts", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", 
              RowBox[{"numPts", "-", "1"}]}], "}"}]}], "]"}], "//", "N"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"msg", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nNew vals: \>\"", "<>", 
          RowBox[{"TextString", "[", "vals", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldNumPts", "=", "numPts"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"oldMatchName", " ", "\[NotEqual]", " ", 
        RowBox[{"matchName", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "function", " ", "values", " ", "are", " ", "the", " ", "same"}], 
         ",", " ", 
         RowBox[{
         "but", " ", "everything", " ", "else", " ", "may", " ", "change"}]}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{
         "msg", " ", "<>", " ", "\"\<\\nchanged from \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "oldMatchName", "]"}], " ", "<>", " ", 
          "\"\< to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", 
           RowBox[{"matchName", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"matchData", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"matchName", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "==", "\"\<data\>\""}], ")"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"oldMatchName", " ", "=", " ", 
         RowBox[{"matchName", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"recomputeTaylor", " ", "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mpair", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", 
          RowBox[{"oldMpair", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "update", " ", "Taylor", " ", "coefficients", " ", "on", " ", "the", 
         " ", "left"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeCoefs", "=", " ", "True"}], ";", 
        "                                                        ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "trigger", " ", "recomputation", " ", "of", " ", "Bernstein", " ", 
          "coefficients"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"!", " ", "funcChanged"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"oldMpair", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"msg", "=", " ", 
              RowBox[{
              "msg", " ", "<>", "\"\<\\nchanged leftm from \>\"", " ", "<>", 
               " ", 
               RowBox[{"TextString", "[", "leftM", "]"}], "<>", 
               "\"\< to \>\"", "<>", 
               RowBox[{"TextString", "[", 
                RowBox[{"mpair", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], "]"}], ";", " ",
            "\[IndentingNewLine]", 
           RowBox[{"leftM", "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldMpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d2tLeft", "=", 
            RowBox[{
             RowBox[{"dataToTaylorMatrix", "[", 
              RowBox[{
               RowBox[{"numPts", "-", "1"}], ",", "leftM"}], "]"}], "//", 
             "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"matchData", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alpha", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d2tLeft", ".", 
                 RowBox[{"vals", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "leftM"}], "]"}], "]"}]}], ")"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"numPts", "-", "leftM"}]}], "]"}]}], "}"}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alpha", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isDiscrete", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"d2t", ".", "vals"}], "//", "N"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"SeriesCoefficient", "[", 
                  RowBox[{
                   RowBox[{"Refine", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{
                    RowBox[{"func", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "numPts"}], "}"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numPts"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nnew alpha \>\"", "<>", 
          RowBox[{"TextString", "[", "alpha", "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"recomputeTaylor", " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mpair", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "\[NotEqual]", 
          RowBox[{"oldMpair", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", "           ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "update", " ", "Taylor", " ", "coefficients", " ", "on", " ", "the", 
         " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeCoefs", " ", "=", " ", "True"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"!", " ", "funcChanged"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"oldMpair", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"msg", "=", " ", 
              RowBox[{
              "msg", " ", "<>", "\"\<\\nchanged rightm from \>\"", " ", "<>", 
               " ", 
               RowBox[{"TextString", "[", "rightM", "]"}], " ", "<>", " ", 
               "\"\< to \>\"", " ", "<>", 
               RowBox[{"TextString", "[", 
                RowBox[{"numPts", "+", "1", "-", 
                 RowBox[{"mpair", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rightM", "=", 
            RowBox[{"numPts", "+", "1", "-", 
             RowBox[{"mpair", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldMpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d2tRight", "=", 
            RowBox[{
             RowBox[{"dataToTaylorMatrix", "[", 
              RowBox[{
               RowBox[{"numPts", "-", "1"}], ",", "rightM"}], "]"}], "//", 
             "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"matchData", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alphabar", "=", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"d2tRight", ".", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ";;", 
                    RowBox[{"-", "rightM"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ")"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"numPts", "-", "rightM"}]}], "]"}]}], "}"}], "]"}], 
             "//", "N"}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alphabar", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isDiscrete", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"d2t", ".", 
                RowBox[{"Reverse", "[", "vals", "]"}]}], "//", "N"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"SeriesCoefficient", "[", 
                  RowBox[{
                   RowBox[{"Refine", "[", 
                    RowBox[{
                    RowBox[{"Series", "[", 
                    RowBox[{
                    RowBox[{"func", "[", 
                    RowBox[{"1", "-", "y"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "0", ",", "numPts"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"0", "<", "y", "<", "1"}]}], "]"}], ",", 
                   RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numPts"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nnew alpha bar \>\"", "<>", 
          RowBox[{"TextString", "[", "alphabar", "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"funcChanged", " ", "=", " ", "False"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"recomputeCoefs", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"coefs", " ", "=", " ", 
         RowBox[{
          RowBox[{"buildBezierCoefs", "[", 
           RowBox[{
           "leftM", ",", "rightM", ",", "numPts", ",", " ", "t2b", ",", 
            "alpha", ",", "alphabar", ",", "d2b", ",", "vals", ",", 
            "matchData", ",", "isMonotonic", ",", "isDiscrete"}], "]"}], "//",
           "N"}]}], ";", 
        RowBox[{"taylors", "=", 
         RowBox[{
          RowBox[{"buildTaylorCoefs", "[", 
           RowBox[{
           "leftM", ",", "rightM", ",", "numPts", ",", "d2t", ",", "alpha", 
            ",", "alphabar", ",", "vals", ",", "matchData", ",", 
            "isMonotonic", ",", "isDiscrete"}], "]"}], "//", "N"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"msg", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nNew Bezier coefficients: \>\"", "<>", 
          RowBox[{"TextString", "[", 
           RowBox[{"coefs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"recomputeCoefs", " ", "=", " ", "False"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plot1", "=", 
         RowBox[{"buildTaylorPlot", "[", 
          RowBox[{
          "leftM", ",", "rightM", ",", "vals", ",", "func", ",", "alpha", ",",
            "alphabar", ",", "taylors", ",", "isMonotonic", ",", "d2t"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"plot2", "=", 
         RowBox[{"buildBezierPlot", "[", 
          RowBox[{
          "leftM", ",", "rightM", ",", "vals", ",", "func", ",", " ", "coefs",
            ",", "matchData", ",", "isMonotonic"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "msg"}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2tLeft: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2tLeft", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2tRight: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2tRight", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nt2b: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "t2b", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2b: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2b", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2t: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2t", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nvals: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "vals", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nalpha: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "alpha", "]"}], "]"}], "]"}], "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nalphabar: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "alphabar", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\ncoefs: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "coefs", "]"}], "]"}], "]"}], "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\ntaylors: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "taylors", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"oldWhichPlot", "\[NotEqual]", "whichPlot"}], ",", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "trigger", " ", "update", " ", "of", " ", "the", " ", "func", " ", 
         "variable", " ", "itself", " ", "in", " ", "appropriate", " ", 
         "Switch", " ", "case", " ", "below"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"funcChanged", " ", "=", " ", "True"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{
         "msg", " ", "<>", " ", "\"\<\\nchanged from \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "oldWhichPlot", "]"}], " ", "<>", " ", 
          "\"\< to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "whichPlot", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"isMonotonic", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"whichPlot", " ", "\[Equal]", "\"\<monotonic\>\""}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"oldWhichPlot", " ", "=", " ", "whichPlot"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"funcName", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\"\<binomial\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", 
             "\"\<\\nchanged func to binomial from \>\"", " ", "<>", " ", 
             "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mBinom", " ", "=", "oldMBinom"}], ";", " ", 
           RowBox[{"numPts", "=", 
            RowBox[{"mBinom", "+", "1"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", " ", "=", " ", "\"\<binomial\>\""}], ";", 
           " ", 
           RowBox[{"oldMatchName", "=", "\"\<data\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"pBinom", ",", "oldPBinom"}], "]"}], "!=", "pBinom"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{"msg", " ", "<>", " ", "\"\<\\nchanged p to \>\"", "<>", 
             RowBox[{"TextString", "[", "pBinom", "]"}], "<>", 
             "\"\< from \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "oldPBinom", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldPBinom", "=", "pBinom"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mBinom", ",", "oldMBinom"}], "]"}], "\[NotEqual]", 
           "mBinom"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{"msg", " ", "<>", " ", "\"\<\\nchanged m to \>\"", "<>", 
             RowBox[{"TextString", "[", "mBinom", "]"}], "<>", 
             "\"\< from \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "oldMBinom", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numPts", "=", 
            RowBox[{"mBinom", "+", "1"}]}], ";", 
           RowBox[{"oldMBinom", "=", "mBinom"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"biases", "=", 
            RowBox[{"binom", "[", 
             RowBox[{"mBinom", ",", "pBinom"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"msg", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", "\"\<\\n (m,p) \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "mBinom", "]"}], " ", "<>", " ", 
             "\"\< \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "pBinom", "]"}], " ", "<>", " ", 
             "\"\< new biases \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "biases", "]"}]}]}], ";", 
           RowBox[{"func", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
              RowBox[{"discreteDensity", "[", "biases", "]"}], ",", 
              RowBox[{"discreteCumul", "[", "biases", "]"}]}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\"\<network reliability\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", " ", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", "  ", "<>", " ", 
             "\"\<\\nchanged func to network reliability from \>\"", " ", "<>",
              " ", "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mReliable", " ", "=", "oldmReliable"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{
           "oldFuncName", " ", "=", " ", "\"\<network reliability\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<derivatives\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"lenReliable", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "bReliable"}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"lenReliable", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"bReliable", "=", 
            RowBox[{"lenReliable", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"lenReliable", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "aReliable"}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"lenReliable", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"aReliable", "=", 
            RowBox[{"lenReliable", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mReliable", ",", "oldmReliable"}], "]"}], "\[NotEqual]", 
           "mReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldmReliable", "=", "mReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"lorderReliable", ",", "oldLorder"}], "]"}], 
           "\[NotEqual]", "lorderReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
            RowBox[{"Switch", "[", 
             RowBox[{"lorderReliable", ",", "0", ",", "1", ",", 
              RowBox[{"mReliable", "+", "1"}], ",", "numPts", ",", "_", ",", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], 
                RowBox[{"(", "lorderReliable", ")"}]}]}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"rorderReliable", ",", "oldRorder"}], "]"}], 
           "\[NotEqual]", "rorderReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
            RowBox[{"numPts", "+", "1", "-", 
             RowBox[{"Switch", "[", 
              RowBox[{"rorderReliable", ",", "0", ",", "1", ",", "n", ",", 
               RowBox[{"1", "+", 
                RowBox[{"bReliable", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"aReliable", "-", "1"}], ")"}], "^", 
                  "mReliable"}]}]}], ",", " ", "_", ",", 
               RowBox[{"mReliable", "+", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"Log2", "[", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"rorderReliable", "/", "bReliable"}], "]"}], "]"}],
                  "]"}]}]}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numPts", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"bReliable", " ", "+", " ", "2", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], " ", "mReliable"}]}],
               ",", " ", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], " ", 
                "mReliable"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"func", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
              RowBox[{"toyDensity", "[", 
               RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}], 
               "]"}], ",", 
              RowBox[{"toyCumul", "[", 
               RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}], 
               "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", "||", 
           RowBox[{"oldLorder", "\[NotEqual]", "lorderReliable"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"exact", " ", "up", " ", "to", " ", "order"}], " ", "=", 
            " ", 
            RowBox[{
             RowBox[{
             "smallest", " ", "number", " ", "of", " ", "edges", " ", "in", 
              " ", "any", " ", "union", " ", "of", " ", "lorder"}], "+", 
             RowBox[{"1", " ", "struts"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
            RowBox[{"Switch", "[", 
             RowBox[{"lorderReliable", ",", "0", ",", "1", ",", 
              RowBox[{"mReliable", "+", "1"}], ",", "numPts", ",", "_", ",", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], 
                RowBox[{"(", "lorderReliable", ")"}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"oldLorder", "=", "lorderReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", 
           RowBox[{"oldRorder", "\[NotEqual]", "rorderReliable"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"exact", " ", "up", " ", "to", " ", "order"}], " ", "=", 
            " ", 
            RowBox[{
             RowBox[{
             "smallest", " ", "number", " ", "of", " ", "edges", " ", "in", 
              " ", "any", " ", "union", " ", "of", " ", "rorder"}], "+", 
             RowBox[{"1", " ", "cuts"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"oldRorder", "=", "rorderReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<pole\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "\[IndentingNewLine]",
           " ", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", "\"\<\\nchanged func to pole from \>\"", 
             " ", "<>", " ", "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mPole", " ", "=", "oldMPole"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numPts", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"mPole", "+", "1"}], ",", "mPole"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ptPole", "=", "oldPtPole"}], ";", "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", " ", "=", " ", "\"\<pole\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<data\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"ptPole", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"oldPtPole", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[NotEqual]", 
           RowBox[{"ptPole", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldPtPole", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"ptPole", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"ptPole", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"oldPtPole", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "\[NotEqual]", 
           RowBox[{"ptPole", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldPtPole", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"ptPole", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mPole", ",", "oldMPole"}], "]"}], "\[NotEqual]", 
           "mPole"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"numPts", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"mPole", "+", "1"}], ",", "mPole"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"oldMPole", "=", "mPole"}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{"func", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
             RowBox[{"poleDensity", "[", 
              RowBox[{
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"poleCumul", "[", 
              RowBox[{
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<Ising\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mIsing", " ", "=", " ", "oldMIsing"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"hFracIsing", "=", "oldHFracIsing"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", "=", "\"\<Ising\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<derivatives\>\""}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", " ", 
           RowBox[{
            RowBox[{"ControlActive", "[", 
             RowBox[{"hFracIsing", ",", "oldHFracIsing"}], "]"}], 
            "\[NotEqual]", "hFracIsing"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldHFracIsing", "=", "hFracIsing"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", " ", 
           RowBox[{
            RowBox[{"ControlActive", "[", 
             RowBox[{"mIsing", ",", "oldMIsing"}], "]"}], "\[NotEqual]", 
            "mIsing"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldMIsing", "=", "mIsing"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numPts", "=", 
            RowBox[{
             RowBox[{"Denominator", "[", 
              RowBox[{"Rationalize", "[", "hFracIsing", "]"}], "]"}], 
             "mIsing"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"isMonotonic", ",", 
             RowBox[{"numPts", " ", "=", " ", 
              RowBox[{"numPts", "+", "1"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "dosIsing", "]"}], "<", "mIsing"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"dosIsing", "=", 
              RowBox[{"isingDoS1D", "[", 
               RowBox[{"mIsing", ",", "dosIsing"}], "]"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
             "density", " ", "of", " ", "states", " ", "rule", " ", "table"}],
              "*)"}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"NotebookWrite", "[", 
            RowBox[{"messageNB", ",", "\"\<\\ndos: \>\""}], "]"}], ";", 
           RowBox[{"NotebookWrite", "[", 
            RowBox[{"messageNB", ",", 
             RowBox[{"Cell", "[", 
              RowBox[{"BoxData", "[", 
               RowBox[{"ToBoxes", "[", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"dosIsing", "[", 
                  RowBox[{"[", "mIsing", "]"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"func", "=", 
            RowBox[{"ising1D", "[", 
             RowBox[{
              RowBox[{"dosIsing", "[", 
               RowBox[{"[", "mIsing", "]"}], "]"}], ",", "hFracIsing", ",", 
              "isMonotonic"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"EventHandler", "[", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"selectTaylorPlots", "[", 
                 RowBox[{
                 "plot1", ",", "show", ",", "numPts", ",", "leftM", ",", 
                  "rightM"}], "]"}], ",", 
                RowBox[{"AxesOrigin", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "range"}], "}"}]}], 
                ",", 
                RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"selectBezierPlots", "[", 
                 RowBox[{
                 "plot2", ",", "show", ",", "numPts", ",", "leftM", ",", 
                  "rightM"}], "]"}], ",", 
                RowBox[{"AxesOrigin", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "range"}], "}"}]}], 
                ",", 
                RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}]}], "}"}], 
            "]"}], "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Spacings", "\[Rule]", "5"}]}], "]"}]}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{"range0", "=", "range"}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"\"\<MouseDragged\>\"", "\[RuleDelayed]", 
            RowBox[{"(*", "pan", "*)"}], 
            RowBox[{"(", 
             RowBox[{"range", "=", 
              RowBox[{"range0", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ref", "-", 
                  RowBox[{
                  "MousePosition", "[", "\"\<GraphicsImageScaled\>\"", 
                   "]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"range0", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{"range0", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}]}], 
             ")"}]}], ","}], "*)"}], 
         RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
          RowBox[{"Which", "[", 
           RowBox[{"(*", 
            RowBox[{"zoom", " ", "in"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CurrentValue", "[", "\"\<AltKey\>\"", "]"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Cmnd", " ", "on", " ", "OS", " ", "X"}], "*)"}], 
            RowBox[{"range", "=", 
             RowBox[{"range", " ", "fac"}]}], ",", 
            RowBox[{"(*", 
             RowBox[{"zoom", " ", "out"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"CurrentValue", "[", "\"\<ShiftKey\>\"", "]"}], ",", 
            RowBox[{"range", "=", 
             RowBox[{"range", "/", "fac"}]}]}], "]"}]}]}], "}"}], ",", 
       RowBox[{"PassEventsDown", "\[Rule]", "True"}]}], "\[IndentingNewLine]",
       "]"}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Number of coefficients known: left \>\"", ",", " ", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"mpair", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mpair", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], ",", "\"\<\>\""}], "}"}], ",", 
          "1", ",", "numPts", ",", "1", ",", 
          RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Paired\>\"", "}"}]}], ",", 
          RowBox[{"Enabled", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"funcName", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
             "\"\<network reliability\>\""}], ")"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"numPts", "+", "1", "-", 
         RowBox[{"mpair", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\"\< right\>\""}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "uncomment", " ", "to", " ", "include", " ", "a", " ", "table", " ", 
        "of", " ", "condition", " ", "numbers", " ", "for", " ", "each", " ", 
        "matrix", " ", 
        RowBox[{"(", "expensive", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Spacer", "[", "20", "]"}], ",", " ", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Log10 of condition numbers of transformations: \>\"", ",", 
              "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\>\"", ",", "\"\<data to Taylor\>\"", ",", 
              "\"\<data to Bezier\>\"", ",", "\"\<Taylor to Bezier\>\""}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<left\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", "d2tLeft", "]"}]}], "]"}], "]"}],
                "]"}], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"d2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"t2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<right\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", "d2tRight", "]"}]}], "]"}], 
                "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"d2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "rightM"}], ",", 
                    RowBox[{"1", ";;", "rightM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"t2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}],
           ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "*)"}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"matchName", ",", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<data\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<data\>\"", "]"}]}], "]"}], ",", 
        "\"\<Estimate function based on exact \>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<data\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<data\>\"", "]"}]}], "]"}], ",", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<derivatives\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<derivatives\>\"", "]"}]}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "whichPlot", ",", "\"\<normed\>\"", ",", 
        "\"\<Estimate normed function or its monotonic integral?\>\""}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<normed\>\"", ",", "\"\<monotonic\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"show", ",", 
        RowBox[{"{", "selections", "}"}], ",", 
        "\"\<interpolations to show:\>\""}], "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{
          RowBox[{"selections", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"ttips", "[", 
           RowBox[{"selectionNames", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"ControlType", "\[Rule]", "CheckboxBar"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"funcName", ",", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<binomial\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<binomial\>\"", "]"}]}], "]"}], ",", 
        "\"\<function to approximate:\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<binomial\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<binomial\>\"", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<pole\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<pole\>\"", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<network reliability\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<network reliability\>\"", "]"}]}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<Ising\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<Ising\>\"", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "[", 
     RowBox[{
      RowBox[{"Panel", "[", "\[IndentingNewLine]", 
       RowBox[{"Switch", "[", 
        RowBox[{
         RowBox[{"funcName", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
         "\"\<pole\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", "50", "]"}], ",", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"ptPole", ",", "oldPtPole", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "40", "]"}], ",", 
                    "\"\<position of pole in complex plane\>\""}], "}"}], 
                    "]"}]}], "}"}], ",", "0.01", ",", "1", ",", 
                    RowBox[{"ControlType", "\[Rule]", "Slider2D"}], ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "mPole", ",", "oldMPole", ",", 
                    "\"\<number of samples\>\""}], "}"}], ",", "2", ",", 
                    "100", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}]}],
                 "}"}], "]"}], ",", "\"\<pole parameters\>\"", ",", "Top", 
              ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "50", "]"}]}], "}"}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\"\<binomial\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", "150", "]"}], ",", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"pBinom", ",", "oldPBinom", ",", "\"\<p\>\""}], 
                    "}"}], ",", "0.01", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mBinom", ",", "oldMBinom", ",", "\"\<N\>\""}], 
                    "}"}], ",", "2", ",", "50", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}], "]"}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
              "\"\<binomial parameters\>\"", ",", "Top", ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "150", "]"}]}], "}"}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\"\<network reliability\>\"", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Spacer", "[", "20", "]"}], ",", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"Row", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Column", "[", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "mReliable", ",", "oldmReliable", ",", 
                    "\"\<number of long parallel paths\>\""}], "}"}], ",", 
                    "2", ",", "20", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], 
                    ",", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"lenReliable", ",", 
                    RowBox[{"{", 
                    RowBox[{"bReliable", ",", "aReliable"}], "}"}], ",", 
                    "\"\<length of short and long paths\>\""}], "}"}], ",", 
                    "2", ",", "20", ",", "1", ",", 
                    RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
                    RowBox[{"MinIntervalSize", "\[Rule]", "1"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], 
                    "}"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<consider unions of \>\"", ",", "lorderReliable", ",",
                     "\[IndentingNewLine]", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "lorderReliable", ",", "oldLorder", ",", " ", 
                    "\"\< strut(s)\>\""}], "}"}], ",", "0", ",", 
                    RowBox[{"numStruts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<consider unions of \>\"", ",", 
                    RowBox[{"Dynamic", "[", "rorderReliable", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "rorderReliable", ",", "oldRorder", ",", " ", 
                    "\"\< cut(s)\>\""}], "}"}], ",", "0", ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"20", ",", 
                    RowBox[{"numCuts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}]}], "]"}], ",", "1"}], "}"}], "]"}]}], "}"}], "]"}],
                     ","}], "\[IndentingNewLine]", "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Spacer", "[", "40", "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Column", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<toy network\>\"", ",", "\[IndentingNewLine]", 
                    RowBox[{"Dynamic", "[", 
                    RowBox[{"Magnify", "[", 
                    RowBox[{
                    RowBox[{"drawToy", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], ",", "2"}], "]"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Total of \>\"", " ", "<>", 
                    RowBox[{"TextString", "[", 
                    RowBox[{"numStruts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], "]"}], "<>", "\"\< struts and \>\"", "<>", 
                    RowBox[{"TextString", "[", 
                    RowBox[{"numCuts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], "]"}], " ", "<>", " ", "\"\< cuts\>\""}], "}"}], 
                    "]"}]}], "}"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
               "]"}], ",", "\[IndentingNewLine]", 
              "\"\<network reliability parameters\>\"", ",", "Top", ",", " ", 
              RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "50", "]"}]}], "}"}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", "\"\<Ising\>\"", ",", "\[IndentingNewLine]", 
         RowBox[{"Row", "[", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Spacer", "[", "50", "]"}], ",", 
            RowBox[{"Panel", "[", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "hFracIsing", ",", "oldHFracIsing", ",", 
                    "\"\<ratio of internal to total field J/(H+|J|)\>\""}], 
                    "}"}], ",", 
                    RowBox[{"-", "1"}], ",", "1", ",", "0.01", ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "isingRange", ",", "oldIsingRange", ",", 
                    "\"\<ferromagnetic\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<ferromagnetic\>\"", ",", "\"\<antiferromagnetic\>\"",
                     ",", "\"\<both\>\""}], "}"}]}], "}"}], "]"}], ","}], 
                  "*)"}], "\[IndentingNewLine]", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"mIsing", ",", "oldMIsing", ",", "\"\<N\>\""}], 
                    "}"}], ",", "1", ",", "50", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                   "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 "\"\<x in plots is 1-exp[-2(H+|J|)/(kT)]\>\""}], "}"}], 
               "]"}], ",", "\[IndentingNewLine]", "\"\<Ising parameters\>\"", 
              ",", "Top", ",", 
              RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "50", "]"}]}], "\[IndentingNewLine]", 
           "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Row", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Spacer", "[", "300", "]"}], ",", 
          "\"\<(shift-click scales plots down, ctrl-click scales up)\>\"", 
          ",", 
          RowBox[{"Spacer", "[", "20", "]"}]}], "}"}], ",", 
        RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Current", " ", "state", " ", "of", " ", "common", " ", "parameters", 
      " ", "and", " ", "cached", " ", "values", " ", "to", " ", "detect", " ",
       "exactly", " ", "what", " ", "changed", " ", "to", " ", "minimize", 
      " ", "computation"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numPts", ",", "5"}], "}"}], ",", "None"}], "}"}], ",", 
    "                         ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldNumPts", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mpair", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                 ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMpair", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"func", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", "1"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldFuncName", ",", "\"\<none\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", "       ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Function"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"isMonotonic", ",", " ", "False"}], "}"}], ",", "None"}], 
     "}"}], ",", "   ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldWhichPlot", ",", "\"\<normed\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Boolean"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"matchData", ",", " ", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "          ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMatchName", ",", "\"\<data\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", "      ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Boolean"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"show", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], ",", 
    "                         ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "save", " ", 
      "state", " ", "for", " ", "this", " ", "one"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "parameters", " ", "specific", " ", "to", " ", "particular", " ", 
      "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mBinom", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMBinom", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pBinom", ",", "0.5"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldPBinom", ",", "0.5"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mPole", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMPole", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ptPole", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldPtPole", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mReliable", ",", "2"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldmReliable", ",", "2"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lenReliable", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aReliable", ",", "3"}], "}"}], ",", " ", "None"}], "}"}], ",",
     " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bReliable", ",", "2"}], "}"}], ",", " ", "None"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"lenReliable", " ", "is", " ", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lorderReliable", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rorderReliable", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldLorder", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldRorder", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mIsing", ",", " ", "4"}], "}"}], ",", " ", "None"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMIsing", ",", "3"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hFracIsing", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldHFracIsing", ",", " ", "0.5"}], "}"}], ",", "None"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Not", " ", "visible", " ", "in", " ", "interface"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"isDiscrete", ",", " ", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "                            ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "is", " ", "the", " ", "current", " ", "function", " ", "inherently", 
      " ", "discrete", " ", "or", " ", 
      RowBox[{"continuous", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"leftM", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rightM", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"mPair", " ", "is", " ", 
      RowBox[{"{", 
       RowBox[{"leftm", ",", " ", 
        RowBox[{"NumPts", "+", "1", " ", "-", " ", "rightM"}]}], "}"}]}], " ",
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Matrices", " ", "transforming", " ", "\[IndentingNewLine]", "leftM", 
       " ", "data", " ", "to", " ", "leftM", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", "\[IndentingNewLine]", " ", 
      RowBox[{
      "rightM", " ", "data", " ", "to", " ", "rightM", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", "\[IndentingNewLine]", " ", 
      RowBox[{
      "numPts", " ", "data", " ", "to", " ", "numPts", " ", "Bernstein", " ", 
       "coefficients"}], ";", "\[IndentingNewLine]", " ", 
      RowBox[{
      "numPts", " ", "data", " ", "to", " ", "numPts", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", 
      RowBox[{
      "and", "\[IndentingNewLine]", "numPts", " ", "Taylor", " ", 
       "coefficients", " ", "to", " ", "numPts", " ", "Bernstein", " ", 
       "coefficients"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2tLeft", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2tRight", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2b", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2t", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t2b", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vals", ",", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", "4"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                                        ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "function", " ", "values", " ", "at", " ", "numPts", " ", "equally"}], 
      "-", 
      RowBox[{"spaced", " ", "x"}], "-", "values"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"alpha", ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"alphabar", ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", "None"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "all", " ", "numPts", " ", "Taylor", " ", "series", " ", "coefficients",
        " ", "at", " ", "x"}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", "x"}], "=", "1"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"coefs", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                                                   ", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"taylors", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                       ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"all", " ", "numPts", " ", "Bernstein", " ", "coefficients"}], 
      ",", 
      RowBox[{
      "one", " ", "List", " ", "for", " ", "each", " ", "possible", " ", 
       "interpolation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Temporary", " ", "variables", " ", "that", " ", "determine", " ", 
      "what", " ", "needs", " ", "to", " ", "be", " ", "recomputed"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"funcChanged", ",", "True"}], "}"}], ",", "None"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"recomputeCoefs", ",", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"recomputeTaylor", ",", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Debugging", " ", "messages"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"msg", ",", "\"\<\>\""}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"some", " ", "pre"}], "-", 
      RowBox[{"computed", " ", "tables"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"biases", ",", 
        RowBox[{"binom", "[", 
         RowBox[{"4", ",", "0.5"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",",
     "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "values", " ", "of", " ", "a", " ", "binomial", " ", "distribution"}], 
      ",", " ", 
      RowBox[{"so", " ", "I", " ", 
       RowBox[{"don", "'"}], "t", " ", "have", " ", "to", " ", "call", " ", 
       "Binomial", " ", "every", " ", "time"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dosIsing", ",", 
        RowBox[{"isingDoS1D", "[", 
         RowBox[{"4", ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "exact", " ", "density", " ", "of", " ", "states", " ", "for", " ", "a",
        " ", "1"}], "-", 
      RowBox[{"D", " ", "Ising", " ", "model"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", "visualization", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plot1", ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plot2", ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "cache", " ", "the", " ", "plots", " ", "including", " ", "all", " ", 
      "the", " ", "interpolations"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"range", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", "1"}], "}"}]}], "}"}], ",", "None"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fac", ",", 
        RowBox[{"2", "/", "3"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Initialization", "\[RuleDelayed]", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"discreteDensity", "[", "biases", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tmp", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dosIsing", "=", 
        RowBox[{"isingDoS1D", "[", 
         RowBox[{"4", ",", "tmp"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
      "funcName", ",", "whichPlot", ",", "matchName", ",", "mpair", ",", 
       "numPts", ",", "show", ",", "func", ",", "pBinom", ",", "mPole", ",", 
       "mBinom", ",", 
       RowBox[{"(*", " ", 
        RowBox[{"mEnsemble", ",", " ", "numBins", ","}], " ", "*)"}], " ", 
       "mReliable", ",", "mIsing", ",", "ptPole", ",", "funcChanged", ",", 
       "lenReliable", ",", "lorderReliable", ",", "rorderReliable", ",", 
       "aReliable", ",", "bReliable", ",", "hFracIsing", ",", "range"}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.738393920518058*^9, 3.738393948210528*^9}, 
   3.738394007897456*^9, {3.738394075270763*^9, 3.738394099902006*^9}, {
   3.738394144209393*^9, 3.7383942353855553`*^9}, 3.738394737004208*^9, {
   3.738394849602111*^9, 3.738394933669758*^9}, {3.738394969518997*^9, 
   3.738394995790154*^9}, {3.738395135102264*^9, 3.7383951965184507`*^9}, {
   3.738395274180026*^9, 3.7383953227225657`*^9}, {3.738395365048705*^9, 
   3.73839539423917*^9}, {3.738395430365643*^9, 3.738395442479225*^9}, {
   3.738402479138516*^9, 3.7384025141349287`*^9}, {3.738402573698937*^9, 
   3.7384026484459667`*^9}, {3.738402678869507*^9, 3.7384027892998543`*^9}, {
   3.738402819536195*^9, 3.7384032555788918`*^9}, {3.738403299780388*^9, 
   3.7384033167795057`*^9}, {3.738403350392351*^9, 3.7384035059370537`*^9}, {
   3.73840354792566*^9, 3.738403605488063*^9}, {3.738403664916753*^9, 
   3.738403677222744*^9}, {3.738403721419393*^9, 3.738403846138195*^9}, {
   3.7384038837838163`*^9, 3.738403886018195*^9}, {3.738403954075437*^9, 
   3.7384039542203827`*^9}, {3.738404135600189*^9, 3.7384042338901377`*^9}, {
   3.73840426860417*^9, 3.738404268997485*^9}, {3.738404413702075*^9, 
   3.7384044243547792`*^9}, {3.738404476811944*^9, 3.738404478161545*^9}, {
   3.73840453593426*^9, 3.73840455822473*^9}, {3.738404592114633*^9, 
   3.73840460272012*^9}, {3.738404639656123*^9, 3.738404648380766*^9}, {
   3.738404777786894*^9, 3.738404796668247*^9}, {3.7384048493393373`*^9, 
   3.7384048555400667`*^9}, {3.7384049632258377`*^9, 
   3.7384050020870743`*^9}, {3.738405042346532*^9, 3.738405050227776*^9}, {
   3.738405091150793*^9, 3.738405105025086*^9}, {3.738405139137663*^9, 
   3.738405139620138*^9}, {3.7384051849480267`*^9, 3.7384051900679398`*^9}, {
   3.738405311392645*^9, 3.738405312093958*^9}, 3.738405369756156*^9, {
   3.7384054073321123`*^9, 3.7384054136213503`*^9}, {3.738405451509445*^9, 
   3.738405461394862*^9}, {3.738405514115324*^9, 3.738405523117524*^9}, {
   3.738405650805464*^9, 3.7384057295565243`*^9}, 3.738405841126998*^9, {
   3.738405946796929*^9, 3.738405954257945*^9}, {3.738406027462982*^9, 
   3.738406084483848*^9}, {3.73840612380186*^9, 3.7384061417964363`*^9}, {
   3.738406178429982*^9, 3.7384062062805*^9}, {3.738406247794858*^9, 
   3.7384063470722847`*^9}, {3.7384063965767527`*^9, 3.738406424207717*^9}, {
   3.738406512698633*^9, 3.73840660290737*^9}, {3.738406633301406*^9, 
   3.73840666337291*^9}, 3.7384068295667133`*^9, {3.738407222623528*^9, 
   3.7384073401693087`*^9}, 3.738407370241708*^9, {3.7384074471177053`*^9, 
   3.738407451610314*^9}, {3.738407525766396*^9, 3.73840754429991*^9}, {
   3.738407655767576*^9, 3.738407778982389*^9}, {3.738407809739491*^9, 
   3.738407810456977*^9}, {3.738407865794011*^9, 3.7384078891206217`*^9}, {
   3.738408633269781*^9, 3.738408675424871*^9}, {3.738408752015463*^9, 
   3.738408818679058*^9}, {3.738408852625046*^9, 3.738408926650309*^9}, {
   3.738409069314024*^9, 3.7384091294899693`*^9}, {3.738409163083316*^9, 
   3.738409259263289*^9}, {3.738409393077001*^9, 3.738409396039784*^9}, {
   3.738409537196699*^9, 3.73840957598693*^9}, {3.738409652942072*^9, 
   3.7384097458094063`*^9}, {3.738409785249728*^9, 3.738409843606824*^9}, {
   3.7384098787739563`*^9, 3.738409879608303*^9}, {3.738409932129282*^9, 
   3.738409997698493*^9}, {3.738410062615913*^9, 3.738410104628665*^9}, {
   3.738410217516584*^9, 3.738410226334524*^9}, 3.738410278663039*^9, {
   3.738410368329689*^9, 3.7384104102040052`*^9}, {3.738410468116069*^9, 
   3.738410491478509*^9}, {3.7384105486601057`*^9, 3.738410601292083*^9}, {
   3.7384106372300797`*^9, 3.738410681985692*^9}, {3.738410749802992*^9, 
   3.7384108128645372`*^9}, {3.738410958116321*^9, 3.7384109853327713`*^9}, {
   3.738411037161559*^9, 3.738411042222527*^9}, {3.738411162460593*^9, 
   3.738411226883543*^9}, {3.738411322231944*^9, 3.7384113362662163`*^9}, {
   3.738411385477351*^9, 3.738411410535849*^9}, {3.738411456455303*^9, 
   3.7384114576385307`*^9}, 3.738411554690963*^9, {3.738411682823183*^9, 
   3.738411706708893*^9}, {3.738412642560034*^9, 3.73841265430777*^9}, {
   3.738412810716589*^9, 3.738412912876191*^9}, {3.738412943733728*^9, 
   3.7384129633914413`*^9}, {3.738413003314558*^9, 3.7384130475243673`*^9}, 
   3.738413173065028*^9, {3.738413278866436*^9, 3.738413310572729*^9}, {
   3.738413374377047*^9, 3.7384134448622932`*^9}, {3.738413491851619*^9, 
   3.738413492429778*^9}, {3.738413535700869*^9, 3.738413561629837*^9}, {
   3.738413600029949*^9, 3.7384136948629417`*^9}, {3.738413735579855*^9, 
   3.738413765467114*^9}, {3.738413804306488*^9, 3.738413821259377*^9}, {
   3.738413853745181*^9, 3.7384139154747887`*^9}, 3.738413945645226*^9, {
   3.73841406636329*^9, 3.738414067794088*^9}, {3.7384141334609747`*^9, 
   3.73841413456973*^9}, {3.7384142247406473`*^9, 3.738414224889114*^9}, {
   3.738414356164442*^9, 3.738414379870479*^9}, {3.738414414289407*^9, 
   3.7384144774106216`*^9}, 3.738414534441214*^9, {3.738414591826014*^9, 
   3.738414607285438*^9}, {3.738414665952416*^9, 3.7384146934944353`*^9}, {
   3.73841560977759*^9, 3.7384157191440907`*^9}, {3.73841583692409*^9, 
   3.738415856591886*^9}, {3.738415951508398*^9, 3.738416139463077*^9}, {
   3.738416186296935*^9, 3.738416188069662*^9}, 3.738416231095037*^9, {
   3.7384162638699408`*^9, 3.73841640847849*^9}, 3.7384164631579847`*^9, 
   3.7384165039578753`*^9, {3.7384165721579514`*^9, 3.738416583195717*^9}, {
   3.7384166987492332`*^9, 3.738416704895255*^9}, {3.738416739927155*^9, 
   3.738416829357044*^9}, {3.738416871808425*^9, 3.738417034932252*^9}, {
   3.738417100883584*^9, 3.7384171798604116`*^9}, {3.738417263036433*^9, 
   3.738417263275158*^9}, {3.7384173424139433`*^9, 3.738417342567102*^9}, {
   3.738417546085198*^9, 3.738417548355446*^9}, {3.7384176078115597`*^9, 
   3.738417609836141*^9}, 3.738417697071864*^9, {3.738422180351613*^9, 
   3.738422183585075*^9}, {3.738422214170108*^9, 3.7384223592694798`*^9}, {
   3.7384224205528307`*^9, 3.73842243529918*^9}, {3.7384238742096148`*^9, 
   3.738423911337962*^9}, {3.738425879230006*^9, 3.7384259804896727`*^9}, {
   3.738426024883731*^9, 3.738426069314196*^9}, {3.7384261274152*^9, 
   3.738426132026361*^9}, {3.738426223045022*^9, 3.7384262870579033`*^9}, {
   3.7384264442756567`*^9, 3.738426459461586*^9}, {3.738426492339243*^9, 
   3.738426535901862*^9}, {3.738426574522691*^9, 3.738426607710289*^9}, {
   3.738426657865937*^9, 3.73842666542645*^9}, {3.738426782198936*^9, 
   3.738426783344432*^9}, {3.738426839567546*^9, 3.738426880396579*^9}, {
   3.738426946368696*^9, 3.738426948405961*^9}, {3.7384269948626947`*^9, 
   3.738426997015975*^9}, {3.7384271613925123`*^9, 3.738427199744048*^9}, {
   3.738427239233193*^9, 3.738427254715766*^9}, 3.738427335609646*^9, {
   3.738427527117495*^9, 3.73842752827258*^9}, {3.738427606284389*^9, 
   3.7384276123122253`*^9}, {3.738427759222746*^9, 3.7384277639303837`*^9}, {
   3.738427812828279*^9, 3.738427813944092*^9}, {3.7384313320590553`*^9, 
   3.738431369396173*^9}, {3.738431416462831*^9, 3.738431421277596*^9}, {
   3.738431478962708*^9, 3.7384314812789288`*^9}, {3.73843154551921*^9, 
   3.738431567809299*^9}, {3.738431943474498*^9, 3.7384323226245823`*^9}, {
   3.7384323788254957`*^9, 3.7384323952120323`*^9}, 3.7384324362928877`*^9, {
   3.738432484879917*^9, 3.738432526896204*^9}, {3.738432565376668*^9, 
   3.738432667669455*^9}, {3.738432733527947*^9, 3.738432734393485*^9}, {
   3.738432840042963*^9, 3.738432840374942*^9}, {3.738432878814886*^9, 
   3.7384328863399477`*^9}, {3.738432941229113*^9, 3.738432957300559*^9}, {
   3.738451797880897*^9, 3.738451908549374*^9}, {3.7384519635484056`*^9, 
   3.7384520030615463`*^9}, {3.738452199227064*^9, 3.738452309466371*^9}, 
   3.7384523713270073`*^9, {3.73845245388698*^9, 3.738452467410321*^9}, {
   3.738452511023596*^9, 3.73845261608918*^9}, {3.738452697023785*^9, 
   3.738452738614799*^9}, {3.73845282270149*^9, 3.738452868591297*^9}, {
   3.738452912107636*^9, 3.738452913107452*^9}, {3.738453011228602*^9, 
   3.738453021916107*^9}, {3.738453120002236*^9, 3.7384531575426817`*^9}, 
   3.738453212084485*^9, {3.738453249754706*^9, 3.738453250752853*^9}, {
   3.738453293554914*^9, 3.738453311395249*^9}, {3.738453370789806*^9, 
   3.738453371293312*^9}, {3.738453418208577*^9, 3.738453418942794*^9}, {
   3.738453484600039*^9, 3.738453583256612*^9}, {3.738453642919828*^9, 
   3.738453659063342*^9}, {3.738453690534418*^9, 3.738453709028612*^9}, {
   3.7384537466803703`*^9, 3.738453819157939*^9}, {3.738453901710284*^9, 
   3.7384539171889133`*^9}, {3.738453992444309*^9, 3.7384539954780397`*^9}, {
   3.738454198804967*^9, 3.738454206698786*^9}, {3.7384543448525763`*^9, 
   3.7384543734710617`*^9}, {3.738454510788723*^9, 3.73845452744112*^9}, {
   3.738454688347486*^9, 3.738454692607045*^9}, 3.738454941188923*^9, {
   3.738455089125272*^9, 3.738455096312545*^9}, {3.7384551463487577`*^9, 
   3.7384551507307253`*^9}, {3.738455229040916*^9, 3.738455269202651*^9}, {
   3.7384776754494953`*^9, 3.738477688497273*^9}, {3.738477796922585*^9, 
   3.738477797173972*^9}, {3.738477845132038*^9, 3.738477845346788*^9}, {
   3.7384782504848337`*^9, 3.7384782531535597`*^9}, {3.738478426062964*^9, 
   3.738478426226398*^9}, {3.738478469947493*^9, 3.738478550206373*^9}, {
   3.738478595638919*^9, 3.738478598351486*^9}, {3.7384786446012707`*^9, 
   3.738478663139735*^9}, {3.738478725538097*^9, 3.738478725644021*^9}, {
   3.7384788358460712`*^9, 3.738478839152225*^9}, {3.738478871370516*^9, 
   3.738478874268433*^9}, {3.7384789288625097`*^9, 3.7384789411369057`*^9}, {
   3.738478992025208*^9, 3.738478995960455*^9}, {3.738479035950376*^9, 
   3.738479039046558*^9}, {3.738479112206423*^9, 3.738479116539459*^9}, {
   3.738479302054319*^9, 3.7384793023455067`*^9}, {3.738479406126381*^9, 
   3.7384795013024178`*^9}, {3.738479549617778*^9, 3.7384795661458883`*^9}, {
   3.738479611813922*^9, 3.738479632904668*^9}, {3.738479805261047*^9, 
   3.738479850501856*^9}, {3.738479882189168*^9, 3.738479895817441*^9}, {
   3.738480932896592*^9, 3.73848095818834*^9}, {3.73848099473905*^9, 
   3.738481012531817*^9}, {3.7384810756867857`*^9, 3.738481084651853*^9}, {
   3.7384840263795*^9, 3.738484070158834*^9}, {3.7384841013899937`*^9, 
   3.738484275357253*^9}, {3.738484461585033*^9, 3.738484500481049*^9}, {
   3.738484595096655*^9, 3.73848460097431*^9}, {3.738486652134901*^9, 
   3.738486703979101*^9}, {3.738486834863269*^9, 3.738486911416848*^9}, {
   3.7384869581288033`*^9, 3.7384869930759363`*^9}, {3.738487025239409*^9, 
   3.738487129857512*^9}, {3.738487174981251*^9, 3.7384873204700937`*^9}, {
   3.7384873552418747`*^9, 3.738487364843025*^9}, {3.7384875175872917`*^9, 
   3.7384875248909597`*^9}, 3.7384875670394163`*^9, {3.7384876105474987`*^9, 
   3.73848762113701*^9}, {3.738487666620626*^9, 3.738487706097748*^9}, {
   3.738487737978443*^9, 3.738487830137911*^9}, {3.738487913070405*^9, 
   3.738487932225005*^9}, {3.738488664180875*^9, 3.7384886656087418`*^9}, {
   3.738488802749132*^9, 3.738488803885852*^9}, {3.738489472480747*^9, 
   3.738489478849229*^9}, {3.738489965296183*^9, 3.738490007068256*^9}, {
   3.7384900393739233`*^9, 3.738490054567491*^9}, {3.738519327290003*^9, 
   3.7385193617490053`*^9}, {3.73853214336554*^9, 3.7385321438547792`*^9}, {
   3.738532176156818*^9, 3.7385321801485453`*^9}, {3.7385339523082857`*^9, 
   3.738533975312323*^9}, {3.738607277354204*^9, 3.738607280726183*^9}, {
   3.738607405638122*^9, 3.738607413925082*^9}, {3.738607444319923*^9, 
   3.738607515166926*^9}, 3.738607752567379*^9, {3.7386078634390297`*^9, 
   3.738607869677635*^9}, 3.73860808167908*^9, {3.738608194452281*^9, 
   3.738608200375949*^9}, {3.738608389257429*^9, 3.738608391870439*^9}, {
   3.738608480027628*^9, 3.738608484456995*^9}, {3.738608621679859*^9, 
   3.7386086622911587`*^9}, {3.738608716708396*^9, 3.7386087719532337`*^9}, {
   3.738608842934346*^9, 3.738608857174502*^9}, {3.7386088938665648`*^9, 
   3.7386088958789043`*^9}, {3.738610235847197*^9, 3.7386102391803703`*^9}, {
   3.738611386261561*^9, 3.738611439233672*^9}, {3.738611561305614*^9, 
   3.7386116289918747`*^9}, 3.738615151900031*^9, 3.738615186104361*^9, {
   3.7386153136241827`*^9, 3.7386153562298107`*^9}, {3.738615424633582*^9, 
   3.73861543458499*^9}, 3.738615604361781*^9, {3.738615729730483*^9, 
   3.738615739147355*^9}, {3.7386158639404697`*^9, 3.7386158676049137`*^9}, {
   3.738615925224798*^9, 3.7386159362728863`*^9}, {3.738616005461708*^9, 
   3.7386160293700237`*^9}, {3.7386160782879047`*^9, 
   3.7386160814481153`*^9}, {3.738616195925934*^9, 3.738616289013256*^9}, {
   3.738616372870098*^9, 3.7386166146967163`*^9}, {3.738616670325205*^9, 
   3.738616737060443*^9}, {3.738616768336899*^9, 3.738616937907*^9}, {
   3.738616970980505*^9, 3.73861702381604*^9}, {3.7386170771493473`*^9, 
   3.73861716643423*^9}, {3.7386173700695887`*^9, 3.738617372485165*^9}, {
   3.738617479119038*^9, 3.738617554732418*^9}, 3.73861762733141*^9, {
   3.7386176664264793`*^9, 3.7386177664255457`*^9}, {3.738617814760077*^9, 
   3.73861801970765*^9}, {3.738618075018063*^9, 3.738618256386119*^9}, {
   3.738618322691862*^9, 3.738618353191609*^9}, {3.738618429131723*^9, 
   3.738618462736312*^9}, {3.738618523388382*^9, 3.7386185733806877`*^9}, {
   3.738618605263248*^9, 3.7386186298886757`*^9}, {3.738741638993992*^9, 
   3.738741647959371*^9}, {3.738741807353346*^9, 3.738741840171764*^9}, {
   3.738741880351491*^9, 3.738741898699026*^9}, {3.738741941127293*^9, 
   3.738741943664093*^9}, 3.738742040590733*^9, 3.7387421070973682`*^9, {
   3.7387421470248127`*^9, 3.7387421474285994`*^9}, {3.738742257581174*^9, 
   3.738742263946693*^9}, {3.738742328025968*^9, 3.7387423284971952`*^9}, {
   3.738742498354747*^9, 3.738742516523333*^9}, {3.738742643916554*^9, 
   3.738742644566064*^9}, {3.7387426902928953`*^9, 3.738742712488504*^9}, {
   3.738742995522382*^9, 3.7387430985147743`*^9}, {3.738743194855735*^9, 
   3.7387431954780827`*^9}, {3.7387432312681293`*^9, 3.738743259632053*^9}, {
   3.738743307216187*^9, 3.7387433222541237`*^9}, {3.7387433688930817`*^9, 
   3.738743374365366*^9}, {3.7387434080260973`*^9, 3.7387434209134417`*^9}, {
   3.738743488214871*^9, 3.738743492325246*^9}, {3.738743540561079*^9, 
   3.7387435991020737`*^9}, {3.738743639096537*^9, 3.738743643141548*^9}, {
   3.738749093491644*^9, 3.738749108437558*^9}, {3.7387491586354933`*^9, 
   3.73874917189925*^9}, {3.738749384036838*^9, 3.7387494222280617`*^9}, {
   3.73874950856066*^9, 3.7387495232089663`*^9}, {3.738749588990992*^9, 
   3.738749657776081*^9}, {3.738749724163274*^9, 3.7387497356906652`*^9}, 
   3.738749821549478*^9, {3.738749919910469*^9, 3.738749922923296*^9}, {
   3.738749955933284*^9, 3.738749959292552*^9}, {3.7387501451355257`*^9, 
   3.73875017124677*^9}, {3.738750680996821*^9, 3.7387506901238194`*^9}, 
   3.738750733779086*^9, {3.738750789844202*^9, 3.738750823174122*^9}, {
   3.7387508601660633`*^9, 3.738750862187642*^9}, 3.7387509815233183`*^9, {
   3.73875102334813*^9, 3.738751023739702*^9}, {3.73875107206986*^9, 
   3.738751073232809*^9}, {3.738751242106234*^9, 3.73875125178156*^9}, {
   3.738751327598448*^9, 3.738751328241392*^9}, {3.738751375158022*^9, 
   3.73875137627941*^9}, {3.738751511532819*^9, 3.738751511685553*^9}, {
   3.738751545565668*^9, 3.738751572509263*^9}, 3.73875168558799*^9, {
   3.738751716175538*^9, 3.738751799313065*^9}, {3.7387623504129744`*^9, 
   3.738762359458847*^9}, {3.7387624030408087`*^9, 3.738762404613221*^9}, {
   3.738762442701817*^9, 3.738762473387034*^9}, {3.738764422497333*^9, 
   3.7387645528559437`*^9}, {3.738764590429123*^9, 3.7387646382923193`*^9}, {
   3.7387647615165443`*^9, 3.7387648104819117`*^9}, {3.738764855076174*^9, 
   3.7387648776311502`*^9}, {3.738764952882194*^9, 3.738764975644174*^9}, {
   3.738765023565857*^9, 3.738765066008937*^9}, {3.738765119199271*^9, 
   3.738765175825122*^9}, 3.738765219585937*^9, {3.7387652756749287`*^9, 
   3.738765512311966*^9}, {3.738765568825347*^9, 3.738765591960919*^9}, {
   3.738765678994137*^9, 3.73876568641302*^9}, {3.7387657570523*^9, 
   3.738765768278811*^9}, {3.738765911282323*^9, 3.7387659230981493`*^9}, {
   3.738765995659019*^9, 3.738766002155998*^9}, {3.7387660482431793`*^9, 
   3.738766078480517*^9}, {3.738766134882597*^9, 3.738766182621971*^9}, {
   3.738766214958363*^9, 3.738766224289041*^9}, 3.738766403421681*^9, {
   3.738766474688467*^9, 3.738766483195841*^9}, {3.738766522286285*^9, 
   3.738766535937895*^9}, {3.7387665959969883`*^9, 3.738766610870261*^9}, {
   3.738766926792172*^9, 3.738766985774934*^9}, 3.738767175772821*^9, 
   3.738767385672844*^9, {3.7387674785572443`*^9, 3.738767503525914*^9}, 
   3.7387675340325127`*^9, {3.7387675914324408`*^9, 3.73876759233594*^9}, {
   3.738767633504578*^9, 3.738767675265744*^9}, 3.738767708244155*^9, {
   3.738767745595388*^9, 3.738767783236541*^9}, 3.7387678419456472`*^9, {
   3.738767929037356*^9, 3.738767955651713*^9}, {3.738768078628813*^9, 
   3.738768085948893*^9}, {3.738768154422385*^9, 3.738768174162594*^9}, {
   3.73876829022138*^9, 3.738768297065364*^9}, {3.738768372585956*^9, 
   3.7387683921186323`*^9}, 3.738768431335752*^9, {3.738768507975168*^9, 
   3.738768511463605*^9}, {3.738768651090515*^9, 3.7387686545866747`*^9}, 
   3.7387687860917683`*^9, 3.7387688195877657`*^9, {3.738768897162836*^9, 
   3.7387689003116503`*^9}, {3.7387689367429237`*^9, 3.73876895383813*^9}, {
   3.738769215263215*^9, 3.738769218797434*^9}, {3.738769360195347*^9, 
   3.738769416638832*^9}, {3.7387694749197817`*^9, 3.738769475363442*^9}, {
   3.738769636132937*^9, 3.73876963773948*^9}, {3.738769831544426*^9, 
   3.7387698326388893`*^9}, {3.738770063768667*^9, 3.738770121241465*^9}, {
   3.738770156538609*^9, 3.738770183452572*^9}, {3.738770359577539*^9, 
   3.738770359734214*^9}, {3.7387706554573097`*^9, 3.738770686862585*^9}, {
   3.7387707275441513`*^9, 3.738770739478737*^9}, {3.7387708108315*^9, 
   3.7387708257255917`*^9}, {3.738770937477149*^9, 3.7387709448489923`*^9}, {
   3.7387713654504766`*^9, 3.738771370226837*^9}, {3.738771578680173*^9, 
   3.738771608258882*^9}, {3.738771752280249*^9, 3.738771828908629*^9}, {
   3.7387721430295*^9, 3.738772175031931*^9}, {3.738772300920906*^9, 
   3.7387723187704067`*^9}, 3.73877244256551*^9, {3.7387724836813383`*^9, 
   3.738772508709833*^9}, 3.738772583813628*^9, {3.738791954362837*^9, 
   3.738792032736804*^9}, {3.738792396971574*^9, 3.73879239884625*^9}, {
   3.738792454710219*^9, 3.738792543065591*^9}, {3.738792577891651*^9, 
   3.738792588712141*^9}, {3.738792643106104*^9, 3.738792649158922*^9}, {
   3.7387927441970263`*^9, 3.738792748732596*^9}, {3.738793283662642*^9, 
   3.7387932960769587`*^9}, {3.738793723590908*^9, 3.738793724227602*^9}, {
   3.738793877631813*^9, 3.738793889731263*^9}, {3.7387946289618807`*^9, 
   3.738794647775107*^9}, {3.738795065415328*^9, 3.738795071830431*^9}, 
   3.738795205296348*^9, {3.738829485497353*^9, 3.738829503246881*^9}, {
   3.73882978762918*^9, 3.738829821400423*^9}, 3.738829982821677*^9, {
   3.738830039038262*^9, 3.738830039202095*^9}, {3.738830236234009*^9, 
   3.738830242455716*^9}, 3.738830309701069*^9, {3.7388305473973217`*^9, 
   3.738830643822131*^9}, {3.738830741332889*^9, 3.738830746341839*^9}, {
   3.738830831452565*^9, 3.738830831970916*^9}, {3.7388309425993643`*^9, 
   3.738830958047255*^9}, {3.738831033602034*^9, 3.73883107235741*^9}, {
   3.738831137721637*^9, 3.738831141317719*^9}, {3.7388312075806723`*^9, 
   3.738831212762022*^9}, {3.738831256837509*^9, 3.738831346972026*^9}, {
   3.738831491160335*^9, 3.738831509729311*^9}, {3.7388315521910954`*^9, 
   3.73883156026248*^9}, {3.7388317016924257`*^9, 3.73883172584159*^9}, {
   3.7388319197176523`*^9, 3.738831922156641*^9}, {3.738846441228586*^9, 
   3.738846480705472*^9}, {3.738846553619742*^9, 3.738846558273345*^9}, {
   3.738846597580432*^9, 3.738846611445265*^9}, {3.7388466480726433`*^9, 
   3.738846660204591*^9}, {3.738875290537776*^9, 3.7388754135684137`*^9}, {
   3.738875445807912*^9, 3.738875485111691*^9}, {3.738875651506669*^9, 
   3.73887569146876*^9}, {3.7388757791878*^9, 3.738875799969309*^9}, {
   3.738876063897723*^9, 3.738876064678912*^9}, {3.73887617225807*^9, 
   3.73887618234341*^9}, {3.738876222085025*^9, 3.738876225922727*^9}, {
   3.738876262510729*^9, 3.738876274588832*^9}, {3.73887682547302*^9, 
   3.738876957159829*^9}, {3.738877002384069*^9, 3.738877049594859*^9}, {
   3.73891346801973*^9, 3.738913536942829*^9}, {3.738913600724674*^9, 
   3.738913612522814*^9}, {3.738913684763611*^9, 3.738913699074482*^9}, {
   3.7389138628921003`*^9, 3.738913871601902*^9}, {3.738914064945086*^9, 
   3.738914070906419*^9}, {3.7389143646887217`*^9, 3.738914367637288*^9}, {
   3.738914406511488*^9, 3.7389144067109756`*^9}, {3.7389144401314783`*^9, 
   3.738914445088682*^9}, {3.738914477370779*^9, 3.7389145737311773`*^9}, {
   3.7389146648203173`*^9, 3.738914666528111*^9}, {3.73891473083814*^9, 
   3.7389147318444147`*^9}, {3.738914778459511*^9, 3.738914793820608*^9}, {
   3.73891483558344*^9, 3.738914867524173*^9}, {3.738915071096382*^9, 
   3.738915095705462*^9}, {3.73891538692457*^9, 3.7389154341274567`*^9}, {
   3.738915503411091*^9, 3.73891564261982*^9}, {3.738915796397036*^9, 
   3.738915827489193*^9}, {3.7389160113065987`*^9, 3.738916090063417*^9}, {
   3.738916136558572*^9, 3.738916154687324*^9}, {3.738916209597468*^9, 
   3.738916319390355*^9}, {3.738916422560835*^9, 3.738916485569109*^9}, 
   3.7389166201167593`*^9, {3.738916919640758*^9, 3.738916964294869*^9}, {
   3.7389170067454557`*^9, 3.738917025904704*^9}, {3.738917119709693*^9, 
   3.738917158749345*^9}, {3.7389264425585337`*^9, 3.738926449606715*^9}, {
   3.738926504333744*^9, 3.738926516256175*^9}, {3.738926718547559*^9, 
   3.738926739384549*^9}, {3.738926781697081*^9, 3.7389267854311857`*^9}, {
   3.738927127155895*^9, 3.7389272208430023`*^9}, {3.738927286629673*^9, 
   3.7389272950485697`*^9}, {3.7389273362960978`*^9, 3.738927395236786*^9}, {
   3.73893233871408*^9, 3.738932404215469*^9}, {3.738932469699033*^9, 
   3.73893253896218*^9}, {3.7389325964091578`*^9, 3.7389326177737494`*^9}, {
   3.738932658587242*^9, 3.7389326613650227`*^9}, {3.738932742250753*^9, 
   3.7389328343841743`*^9}, {3.738932916905102*^9, 3.73893292167378*^9}, {
   3.73893316912691*^9, 3.738933173142583*^9}, 3.73893324949617*^9, {
   3.7389332894620113`*^9, 3.738933302504477*^9}, {3.738933373644425*^9, 
   3.7389333908079033`*^9}, {3.738933841670547*^9, 3.738933842091681*^9}, {
   3.7389339198744926`*^9, 3.738934009109042*^9}, {3.738934416697815*^9, 
   3.738934452105788*^9}, {3.738934552694956*^9, 3.738934558679364*^9}, {
   3.738934759087006*^9, 3.738934759674239*^9}, {3.738934888035878*^9, 
   3.738934896264423*^9}, {3.738935077860718*^9, 3.738935081676704*^9}, {
   3.738935225627809*^9, 3.7389353766796827`*^9}, {3.7389356056459084`*^9, 
   3.738935626592306*^9}, {3.738935911176392*^9, 3.7389359234759083`*^9}, {
   3.738940694086644*^9, 3.7389407502304296`*^9}, {3.738940788838798*^9, 
   3.738940789059342*^9}, 3.7389408882777243`*^9, {3.738942167441038*^9, 
   3.738942328514233*^9}, {3.738942401918082*^9, 3.7389424578990088`*^9}, {
   3.7389426059911613`*^9, 3.738942634238789*^9}, {3.7389431608557053`*^9, 
   3.7389431894039087`*^9}, {3.7389432574995604`*^9, 
   3.7389432876220837`*^9}, {3.738944114788392*^9, 3.738944125212673*^9}, 
   3.73894439419943*^9, 3.738944434189828*^9, {3.7389447784677277`*^9, 
   3.738944970193748*^9}, {3.738945000817965*^9, 3.738945016367292*^9}, {
   3.738951464565645*^9, 3.738951512504287*^9}, {3.7389515442543173`*^9, 
   3.7389515465392513`*^9}, 3.738951593128862*^9, {3.738951646374352*^9, 
   3.738951715546365*^9}, {3.7389517742885237`*^9, 3.738951787099111*^9}, {
   3.7389518592902822`*^9, 3.738951859859028*^9}, 3.7389519122355537`*^9, {
   3.738964445535211*^9, 3.738964468661585*^9}, {3.738964636257964*^9, 
   3.738964645569668*^9}, {3.738964702881341*^9, 3.7389647110002317`*^9}, {
   3.7389647874017763`*^9, 3.7389647905783253`*^9}, {3.738964919600309*^9, 
   3.738964929592999*^9}, 3.7390100883332243`*^9, {3.7390102195793333`*^9, 
   3.739010315453779*^9}, {3.739010605828866*^9, 3.739010612369484*^9}, {
   3.7390107039778957`*^9, 3.739010726188929*^9}, {3.739010914881133*^9, 
   3.739010918965355*^9}, {3.739011002984357*^9, 3.739011173734325*^9}, {
   3.739011242459186*^9, 3.739011287236137*^9}, {3.739011324308804*^9, 
   3.7390113765110483`*^9}, {3.739011418534902*^9, 3.739011465647213*^9}, 
   3.7390115015018377`*^9, {3.7390115599096203`*^9, 3.739011560063078*^9}, {
   3.73901165190128*^9, 3.739011725121222*^9}, {3.7390123183150177`*^9, 
   3.7390123212240973`*^9}, {3.739012425501706*^9, 3.7390124399255543`*^9}, {
   3.739012552373519*^9, 3.7390125922427197`*^9}, {3.739012918643611*^9, 
   3.7390129234715014`*^9}, {3.739013594952523*^9, 3.739013617225202*^9}, {
   3.739013655693543*^9, 3.739013663833468*^9}, {3.73901370615388*^9, 
   3.7390138092902937`*^9}, 3.739013874287963*^9, {3.7390139050630627`*^9, 
   3.7390139351520233`*^9}, {3.73901396890913*^9, 3.7390139950601254`*^9}, {
   3.7390141125823402`*^9, 3.7390141165341454`*^9}, 3.739014146791276*^9, {
   3.7390141824507093`*^9, 3.73901426573427*^9}, {3.7390143956498957`*^9, 
   3.739014397787265*^9}, {3.7390144979302483`*^9, 3.739014508506432*^9}, {
   3.7390145671320868`*^9, 3.739014588251582*^9}, {3.7390146276846*^9, 
   3.7390146473049088`*^9}, {3.7390146983944693`*^9, 3.739014705178899*^9}, {
   3.7390147737358932`*^9, 3.7390147756164083`*^9}, {3.739014850635016*^9, 
   3.739014876956098*^9}, {3.739014911902268*^9, 3.739014913000922*^9}, {
   3.739015048975528*^9, 3.7390150777807293`*^9}, {3.739015108061167*^9, 
   3.7390151357071247`*^9}, {3.739015209887045*^9, 3.7390152178634243`*^9}, {
   3.739015269296988*^9, 3.7390152752259693`*^9}, {3.73901533317313*^9, 
   3.7390153358183537`*^9}, {3.7390153918690023`*^9, 3.739015393665852*^9}, {
   3.7390155237927237`*^9, 3.739015551207609*^9}, {3.739015669454276*^9, 
   3.739015672189035*^9}, {3.739015801499723*^9, 3.7390158145341873`*^9}, {
   3.739015883119729*^9, 3.73901591635712*^9}, {3.739016257044525*^9, 
   3.739016266192946*^9}, {3.739016426324554*^9, 3.7390164326358843`*^9}, {
   3.739016861020165*^9, 3.739016915495673*^9}, {3.739016979912292*^9, 
   3.739017001655908*^9}, {3.739017031992682*^9, 3.739017070196719*^9}, {
   3.739017195126009*^9, 3.739017212903184*^9}, 3.739017256181616*^9, {
   3.739017595567521*^9, 3.7390176939551163`*^9}, {3.7390177896238737`*^9, 
   3.739017909571185*^9}, {3.739018077605842*^9, 3.739018140024836*^9}, 
   3.739018196510363*^9, {3.739018440031788*^9, 3.73901846780295*^9}, {
   3.7390185617807007`*^9, 3.7390185669497766`*^9}, {3.739018657234611*^9, 
   3.739018724864151*^9}, {3.739018767855431*^9, 3.739018876660943*^9}, {
   3.7390191268724117`*^9, 3.7390191771129923`*^9}, {3.739019287494424*^9, 
   3.739019311225587*^9}, {3.7390193413908854`*^9, 3.739019543301077*^9}, {
   3.739019575349414*^9, 3.739019578576642*^9}, {3.739019764531152*^9, 
   3.739019846689345*^9}, {3.7390198867360287`*^9, 3.739019895726553*^9}, {
   3.739019976596237*^9, 3.739020014282103*^9}, {3.739020236143532*^9, 
   3.7390202384173613`*^9}, {3.7390203140904493`*^9, 3.739020319823039*^9}, {
   3.739020358387492*^9, 3.739020360315668*^9}, {3.7390203927150307`*^9, 
   3.739020517352191*^9}, {3.739020575860731*^9, 3.739020582573951*^9}, {
   3.73902061324279*^9, 3.739020649212779*^9}, {3.739020692782099*^9, 
   3.7390206929141197`*^9}, {3.7390279622673683`*^9, 3.739027968997335*^9}, {
   3.739027999579784*^9, 3.739028105121891*^9}, 3.739028193021044*^9, {
   3.739028508925735*^9, 3.739028544350507*^9}, {3.739028620580504*^9, 
   3.73902863375674*^9}, {3.739028713615055*^9, 3.739028718300826*^9}, {
   3.739028778185607*^9, 3.739028779601461*^9}, {3.739030005047434*^9, 
   3.739030032654132*^9}, 3.7390303952051086`*^9, {3.739030647781528*^9, 
   3.739030769934762*^9}, 3.739030891599688*^9, {3.739030940719483*^9, 
   3.739030976159534*^9}, {3.739031119167739*^9, 3.739031129781196*^9}, {
   3.7390312037282343`*^9, 3.7390312338938713`*^9}, {3.739033292489483*^9, 
   3.739033299529632*^9}, 3.739033342525674*^9, {3.739035222757647*^9, 
   3.7390352806031923`*^9}, {3.739035417558358*^9, 3.7390354451325407`*^9}, 
   3.739035524921191*^9, {3.739035562555933*^9, 3.739035583939142*^9}, {
   3.739035620637682*^9, 3.739035626354547*^9}, {3.739035678965138*^9, 
   3.7390357974123077`*^9}, {3.739035828798193*^9, 3.739036438475807*^9}, {
   3.7390364695854263`*^9, 3.739036522455679*^9}, {3.739036553148346*^9, 
   3.7390366153157387`*^9}, {3.7390366714547577`*^9, 3.739036683261985*^9}, {
   3.739036903927476*^9, 3.7390369256178923`*^9}, 3.739036961487069*^9, {
   3.7390370471009293`*^9, 3.73903707487463*^9}, {3.739037229951442*^9, 
   3.73903729870457*^9}, {3.739038835046083*^9, 3.739038846891121*^9}, {
   3.739038896502606*^9, 3.739038904354954*^9}, {3.73903901949612*^9, 
   3.739039026373211*^9}, {3.739039176668326*^9, 3.73903921085743*^9}, {
   3.73903943553202*^9, 3.7390394593380003`*^9}, {3.73903955107915*^9, 
   3.73903955179216*^9}, {3.739040348734168*^9, 3.739040359795599*^9}, 
   3.7390406212120247`*^9, {3.739040725552843*^9, 3.739040737083726*^9}, {
   3.739041498153167*^9, 3.739041498807497*^9}, {3.739041685876266*^9, 
   3.739041701919012*^9}, {3.739045894534479*^9, 3.739045962253859*^9}, 
   3.739045999387032*^9, {3.739046034431408*^9, 3.739046244846181*^9}, {
   3.739046278614946*^9, 3.739046437644539*^9}, {3.739046506724431*^9, 
   3.739046558485209*^9}, {3.739046596866886*^9, 3.739046638718356*^9}, 
   3.739046735737852*^9, {3.7390474624388237`*^9, 3.739047466869055*^9}, {
   3.739048104570017*^9, 3.739048121918244*^9}, {3.739048162134223*^9, 
   3.73904816502942*^9}, 3.739048224973968*^9, {3.7390482558062687`*^9, 
   3.739048291433638*^9}, {3.739048947397984*^9, 3.739048947924858*^9}, {
   3.7390503404287043`*^9, 3.739050344132244*^9}, {3.739050600664276*^9, 
   3.739050601249222*^9}, {3.7390509058280087`*^9, 3.739050910951334*^9}, 
   3.7390510985864773`*^9, {3.739051341182249*^9, 3.739051348353581*^9}, {
   3.739051724196074*^9, 3.7390517306708403`*^9}, {3.739051824518565*^9, 
   3.739051838659799*^9}, {3.739051871962593*^9, 3.739051898774981*^9}, {
   3.7390519422879457`*^9, 3.739052019267392*^9}, {3.739052070919921*^9, 
   3.7390520942171*^9}, {3.7390522511053467`*^9, 3.739052330148369*^9}, {
   3.7390524151015387`*^9, 3.739052451858288*^9}, {3.739052933224842*^9, 
   3.7390529444174*^9}, {3.73905305186092*^9, 3.739053067906042*^9}, {
   3.739085008201819*^9, 3.739085010517314*^9}, {3.739085129636087*^9, 
   3.739085186084778*^9}, {3.739085332031357*^9, 3.739085332693699*^9}, {
   3.739085522501267*^9, 3.739085524399645*^9}, 3.7390856736990347`*^9, {
   3.7390857721983128`*^9, 3.739085777191897*^9}, {3.739086127013054*^9, 
   3.739086166004031*^9}, 3.739086253375333*^9, {3.7390863238524923`*^9, 
   3.739086386690476*^9}, {3.739086454111898*^9, 3.739086460452889*^9}, 
   3.739086596869796*^9, {3.739087111882266*^9, 3.739087112039941*^9}, {
   3.7390875221496353`*^9, 3.739087559993679*^9}, {3.7390877344077578`*^9, 
   3.739087734804324*^9}, 3.7391358039637203`*^9, {3.7391363328975782`*^9, 
   3.7391363370371017`*^9}, 3.739136466019773*^9, 3.739137144025723*^9, {
   3.739137548786491*^9, 3.739137552315235*^9}, {3.7391376624322433`*^9, 
   3.739137692767605*^9}, {3.7391377785564623`*^9, 3.7391377848668413`*^9}, {
   3.739139803070726*^9, 3.739139988131078*^9}, {3.739172548652485*^9, 
   3.7391726883329563`*^9}, {3.739172728753854*^9, 3.739172810551684*^9}, {
   3.739172853794854*^9, 3.739172877683412*^9}, {3.739172941582878*^9, 
   3.739173093433597*^9}, {3.73917313131041*^9, 3.7391731771040993`*^9}, {
   3.739173208996846*^9, 3.73917339736296*^9}, {3.73917344165346*^9, 
   3.7391734807344437`*^9}, {3.7391735307908087`*^9, 3.739173595067224*^9}, {
   3.739173653006879*^9, 3.73917368118412*^9}, {3.739173724559746*^9, 
   3.7391737778708344`*^9}, 3.739173817279127*^9, {3.739174367043845*^9, 
   3.7391745712835484`*^9}, {3.739174640734962*^9, 3.739174713755756*^9}, {
   3.739174752410191*^9, 3.739174878960293*^9}, {3.739174932274404*^9, 
   3.739174975475853*^9}, {3.739175047786284*^9, 3.739175053995905*^9}, {
   3.739175111024373*^9, 3.739175212453547*^9}, {3.739175254763815*^9, 
   3.739175335757296*^9}, {3.739175413734642*^9, 3.739175467539421*^9}, {
   3.739175525076009*^9, 3.739175529406711*^9}, {3.739213673135911*^9, 
   3.739213686568222*^9}, 3.73921372918513*^9, {3.73921386016354*^9, 
   3.739213905528933*^9}, {3.739213946527068*^9, 3.7392139612864513`*^9}, {
   3.7392153340002327`*^9, 3.739215424814451*^9}, {3.739215455459971*^9, 
   3.739215532699638*^9}, 3.739215793767658*^9, {3.739215882028775*^9, 
   3.739215883435721*^9}, 3.7392163129034643`*^9, {3.739216388071013*^9, 
   3.7392164693745728`*^9}, {3.7392165015117283`*^9, 3.739216502599346*^9}, {
   3.7392165669659*^9, 3.739216568827886*^9}, {3.7392166580078793`*^9, 
   3.739216694198245*^9}, {3.739216769225905*^9, 3.739216787153021*^9}, {
   3.739216818191036*^9, 3.739216874982895*^9}, {3.7392170374025784`*^9, 
   3.73921706450476*^9}, {3.739217676240979*^9, 3.739217730342669*^9}, {
   3.739217774544118*^9, 3.739217776401033*^9}, {3.73921783324125*^9, 
   3.739217836528002*^9}, {3.73921788621756*^9, 3.73921791703605*^9}, {
   3.739217974310501*^9, 3.739218049509448*^9}, {3.739218085341689*^9, 
   3.7392182379865828`*^9}, {3.739218310867613*^9, 3.739218334311975*^9}, {
   3.739258324821225*^9, 3.739258332838606*^9}, {3.7392586777891273`*^9, 
   3.739258729928279*^9}, {3.739258764647868*^9, 3.739258771327368*^9}, {
   3.7392671571278133`*^9, 3.7392671607150793`*^9}, {3.7392676643330307`*^9, 
   3.73926769122753*^9}, 3.739268517291317*^9, {3.739268564227764*^9, 
   3.7392685645770693`*^9}, {3.7392686667994843`*^9, 3.739268703416947*^9}, {
   3.7392689628088417`*^9, 3.73926900520292*^9}, {3.7392690462271*^9, 
   3.739269381022245*^9}, {3.7392694753921947`*^9, 3.739269475533925*^9}, {
   3.739269576561164*^9, 3.739269737547654*^9}, 3.739269837662146*^9, {
   3.739269891099495*^9, 3.739269895899044*^9}, {3.7392699806068697`*^9, 
   3.739270016768504*^9}, {3.739270160839178*^9, 3.7392701681564417`*^9}, {
   3.7392702264983063`*^9, 3.739270231455531*^9}, {3.739270397674962*^9, 
   3.739270573626771*^9}, {3.739270617300859*^9, 3.739270624413739*^9}, {
   3.7392706656578417`*^9, 3.739270670561379*^9}, {3.7392709199311123`*^9, 
   3.7392709256310673`*^9}, {3.739271295545795*^9, 3.7392713666815*^9}, {
   3.739271598918667*^9, 3.73927204933585*^9}, {3.7392721236103907`*^9, 
   3.739272123953857*^9}, {3.739272170716879*^9, 3.739272184828074*^9}, {
   3.739272233061871*^9, 3.7392722869703608`*^9}, {3.739467056935874*^9, 
   3.7394670623464212`*^9}, {3.7394671252426043`*^9, 3.739467130498508*^9}, {
   3.739467823455741*^9, 3.739467828464737*^9}, {3.739467998888955*^9, 
   3.739468028844545*^9}, 3.739468335909548*^9, {3.73946836796178*^9, 
   3.739468387348136*^9}, {3.739468418741169*^9, 3.7394684487187233`*^9}, {
   3.7394685063650627`*^9, 3.739468509946948*^9}, {3.739468683650344*^9, 
   3.739468686455508*^9}, {3.739468727396758*^9, 3.739468741066918*^9}, 
   3.739469023841174*^9, {3.7394691576024523`*^9, 3.739469182553032*^9}, {
   3.739469228448029*^9, 3.7394692290972147`*^9}, 3.73946928427072*^9, 
   3.7394695345641947`*^9, 3.7394705549858007`*^9, 3.739471228786895*^9, {
   3.739520131904045*^9, 3.739520144218783*^9}, 3.7395205586565533`*^9, {
   3.73952059543106*^9, 3.739520613144973*^9}, 3.7395207040464563`*^9, {
   3.739520737434667*^9, 3.739520741047759*^9}, {3.739606305737946*^9, 
   3.739606389615391*^9}, {3.739606425640147*^9, 3.739606426648189*^9}, {
   3.739695000421831*^9, 3.739695008325184*^9}, {3.739695043873383*^9, 
   3.739695048048019*^9}, {3.739702340102216*^9, 3.739702344443161*^9}, {
   3.739745877519403*^9, 3.739745879748068*^9}, {3.739777499232801*^9, 
   3.739777503078889*^9}, {3.73977753639178*^9, 3.739777637052301*^9}, {
   3.739777683339012*^9, 3.739777802779929*^9}, {3.7397778685377893`*^9, 
   3.739777880737597*^9}, {3.739778558966036*^9, 3.7397785611085052`*^9}, {
   3.73978081194811*^9, 3.7397808191957903`*^9}, {3.740036428575406*^9, 
   3.740036429056609*^9}, {3.740036463194891*^9, 3.7400365599901943`*^9}, {
   3.7400366296101313`*^9, 3.740036826221498*^9}, {3.740036893205729*^9, 
   3.740037050988462*^9}, 3.740037132937252*^9, 3.740037188709673*^9, {
   3.740037234368786*^9, 3.74003747700082*^9}, {3.740037526128784*^9, 
   3.74003792173285*^9}, {3.740045778835382*^9, 3.7400457823387833`*^9}, {
   3.740045824015345*^9, 3.740045840808653*^9}, {3.740045920181279*^9, 
   3.740046240822555*^9}, {3.740046318916493*^9, 3.740046395458247*^9}, {
   3.740046833265376*^9, 3.740046836461796*^9}, {3.740046962825292*^9, 
   3.740046963141602*^9}, {3.740047066399279*^9, 3.740047100853107*^9}, {
   3.740047173099945*^9, 3.740047186162642*^9}, {3.740047452524645*^9, 
   3.740047492539392*^9}, {3.7400609646562443`*^9, 3.740061000569106*^9}, {
   3.740061701542646*^9, 3.740061834201119*^9}, {3.740178897638645*^9, 
   3.740178898066834*^9}, {3.740180192567943*^9, 3.740180253329021*^9}, {
   3.740212069933302*^9, 3.7402121099853897`*^9}, {3.740212172824095*^9, 
   3.740212202329831*^9}, {3.7402122535782967`*^9, 3.740212384314818*^9}, {
   3.740212421020069*^9, 3.740212453083235*^9}, {3.740212528578145*^9, 
   3.7402125779135513`*^9}, {3.74024779204381*^9, 3.740247907109557*^9}, {
   3.740247943363529*^9, 3.7402480395558147`*^9}, 3.7402497782448063`*^9, {
   3.7402587227941*^9, 3.74025875560673*^9}, 3.7402587900881433`*^9, {
   3.7402620391361113`*^9, 3.740262041459073*^9}, {3.740305781761372*^9, 
   3.7403057846548223`*^9}, {3.740307512674157*^9, 3.7403075665811*^9}, {
   3.7403077625638037`*^9, 3.740307886426055*^9}, {3.740307928771463*^9, 
   3.74030805797888*^9}, {3.74030813965125*^9, 3.7403081401220083`*^9}, {
   3.7403086236921787`*^9, 3.740308712366645*^9}, {3.7403087913537683`*^9, 
   3.7403087983051043`*^9}, {3.740308898900569*^9, 3.740308899052971*^9}, {
   3.740391470619111*^9, 3.740391475964347*^9}, {3.740392141842873*^9, 
   3.740392194340939*^9}, {3.740392239963337*^9, 3.74039224329123*^9}, {
   3.740392317771943*^9, 3.740392346684698*^9}, {3.7403923991167383`*^9, 
   3.7403924413176193`*^9}, {3.740393367947328*^9, 3.740393399108976*^9}, {
   3.7403934510693197`*^9, 3.7403935252037086`*^9}, {3.740393585434824*^9, 
   3.7403936279847*^9}, 3.740393699636376*^9, {3.740393731202084*^9, 
   3.7403937424683943`*^9}, {3.740829617001458*^9, 3.740829626800457*^9}, {
   3.7479171053061543`*^9, 3.747917111883992*^9}, {3.747917455660163*^9, 
   3.747917489087846*^9}, {3.747917591594805*^9, 3.747917656787566*^9}, {
   3.747917692165772*^9, 3.747917692518962*^9}, {3.7479178420405083`*^9, 
   3.747917866286887*^9}, {3.7479184162178717`*^9, 3.747918427729683*^9}, {
   3.747918461460767*^9, 3.747918489742504*^9}, {3.747918556174432*^9, 
   3.747918598070457*^9}, {3.7479188458991337`*^9, 3.74791886508951*^9}, {
   3.7479224799600277`*^9, 3.747922480574435*^9}, {3.7479227078951387`*^9, 
   3.7479227083833447`*^9}, {3.747922778865239*^9, 3.747922810422175*^9}, {
   3.747922925272912*^9, 3.7479229546061993`*^9}, {3.7479231079146233`*^9, 
   3.747923112499614*^9}, {3.7479232214062767`*^9, 3.747923247695191*^9}, {
   3.747923326154361*^9, 3.7479233268590527`*^9}, {3.747923417827676*^9, 
   3.7479234303841543`*^9}, {3.747927823187088*^9, 3.747927828317595*^9}, {
   3.74792787390322*^9, 3.747927910880846*^9}, {3.7479279919879*^9, 
   3.747928025857839*^9}, {3.7479280902913933`*^9, 3.74792809514942*^9}, {
   3.747928133791195*^9, 3.7479282848716183`*^9}, {3.7479283321016493`*^9, 
   3.747928335705204*^9}, {3.7479283746533623`*^9, 3.747928395263584*^9}, {
   3.747928459626603*^9, 3.747928483407981*^9}, 3.7479285916480913`*^9, {
   3.747928647639464*^9, 3.747928655790369*^9}, {3.7479287026041307`*^9, 
   3.7479288167177896`*^9}, {3.747929168957645*^9, 3.747929170289599*^9}, {
   3.747929271372489*^9, 3.747929419016868*^9}, {3.747929621819491*^9, 
   3.747929628159067*^9}, {3.747929763658564*^9, 3.747929880802458*^9}, {
   3.747930567016941*^9, 3.747930593350417*^9}, 3.747930776968697*^9, {
   3.747930848638515*^9, 3.7479308616537027`*^9}, {3.747930895541251*^9, 
   3.747930915260337*^9}, {3.747930955112681*^9, 3.7479309739639473`*^9}, {
   3.747931004835106*^9, 3.747931006767421*^9}, {3.747931435748082*^9, 
   3.747931446818262*^9}, {3.747931943129784*^9, 3.747931943333035*^9}, {
   3.7479320616827393`*^9, 3.7479320991231127`*^9}, 3.747932148604494*^9, {
   3.747932184746833*^9, 3.7479321883360643`*^9}, {3.7479322241295156`*^9, 
   3.747932224790777*^9}, {3.747932282611985*^9, 3.747932285771657*^9}, 
   3.747932485572991*^9, {3.7479418850580482`*^9, 3.7479418939817257`*^9}, {
   3.747941976336935*^9, 3.7479420176446047`*^9}, {3.747942094263838*^9, 
   3.747942142701968*^9}, {3.747942411649098*^9, 3.7479424537450123`*^9}, {
   3.747942487917227*^9, 3.7479425379186153`*^9}, {3.7479425713714247`*^9, 
   3.747942697859511*^9}, {3.74794274003363*^9, 3.7479428439195538`*^9}, {
   3.747945820439582*^9, 3.747945833959107*^9}, {3.74794586793495*^9, 
   3.7479458704605007`*^9}, {3.747946063718923*^9, 3.747946123500267*^9}, 
   3.7479466496806517`*^9, {3.7479468164789667`*^9, 3.747946826670186*^9}, {
   3.747946878211796*^9, 3.74794691217654*^9}, {3.747947244938387*^9, 
   3.747947363760038*^9}, {3.747947399291668*^9, 3.747947401490855*^9}, {
   3.747947475678735*^9, 3.7479474941934423`*^9}, {3.747947527516285*^9, 
   3.747947534208234*^9}, {3.747947584389474*^9, 3.747947588321018*^9}, {
   3.7479873563371964`*^9, 3.747987380176209*^9}, {3.747987927856069*^9, 
   3.7479880033776283`*^9}, {3.747988175753066*^9, 3.7479881789660597`*^9}, 
   3.74799773593884*^9, {3.747998021840066*^9, 3.747998026598031*^9}, {
   3.7479982669723873`*^9, 3.74799827314358*^9}, {3.7479985320802937`*^9, 
   3.747998578773086*^9}, {3.7479991662697897`*^9, 3.7479991759248333`*^9}, {
   3.748004875280868*^9, 3.7480049090709343`*^9}, {3.749249831221559*^9, 
   3.749249857031355*^9}, {3.749249904131852*^9, 3.749249920899846*^9}, {
   3.749250252812221*^9, 3.7492502572887173`*^9}, 3.7492503143634768`*^9, {
   3.749554619653771*^9, 3.7495546267403097`*^9}, {3.7495546914715157`*^9, 
   3.749554783044405*^9}, {3.749554821243038*^9, 3.749554868507348*^9}, {
   3.749554919789131*^9, 3.749554942808097*^9}, {3.749554978512138*^9, 
   3.749554984066812*^9}, {3.749555041876602*^9, 3.749555061597248*^9}, 
   3.7495553258005457`*^9, 3.749555575531913*^9, 3.749555969600202*^9, 
   3.749583063551903*^9, {3.749852964162582*^9, 3.7498529671522303`*^9}, {
   3.750342223280259*^9, 3.750342429531245*^9}, {3.750357159013303*^9, 
   3.750357235746533*^9}, {3.7503573775992823`*^9, 3.750357396056204*^9}, {
   3.750357441952136*^9, 3.750357578870029*^9}, {3.750357636704794*^9, 
   3.750357645145746*^9}, {3.7503613542582912`*^9, 3.750361363051515*^9}, {
   3.750365918296781*^9, 3.750365928280051*^9}, {3.750366009152611*^9, 
   3.750366024749517*^9}, {3.7512323786809063`*^9, 3.7512324558010798`*^9}, {
   3.75123273529095*^9, 3.751232777007913*^9}, 3.7512331853619757`*^9, 
   3.751233239170031*^9, {3.751233464660232*^9, 3.7512334650095263`*^9}, {
   3.751233654199375*^9, 3.75123367924402*^9}, 3.751233720575498*^9, {
   3.751233846762351*^9, 3.751233847237624*^9}, {3.751234276965376*^9, 
   3.751234299336371*^9}, 3.751235931895035*^9, {3.751289771532838*^9, 
   3.7512897762696867`*^9}, {3.751413811932131*^9, 3.751413887689702*^9}, {
   3.7514497392061462`*^9, 3.751449753771332*^9}, {3.751449816948592*^9, 
   3.751449832879426*^9}, {3.751449893191491*^9, 3.751449925281561*^9}, {
   3.7514952014442453`*^9, 3.751495277091241*^9}, {3.751496229866817*^9, 
   3.751496235291149*^9}, {3.751500258883885*^9, 3.75150029059533*^9}, {
   3.751500339868764*^9, 3.751500361273357*^9}, {3.751501336666408*^9, 
   3.751501364521573*^9}, {3.751501427617628*^9, 3.75150144088948*^9}, 
   3.7515023020039387`*^9, {3.751544303899797*^9, 3.75154449100766*^9}, {
   3.751544566852551*^9, 3.7515446262322607`*^9}, {3.7515447906091022`*^9, 
   3.751544802313377*^9}, {3.751544853176393*^9, 3.751544950266217*^9}, 
   3.751545028891819*^9, {3.751545150023253*^9, 3.7515451505489817`*^9}, 
   3.7515452108731403`*^9, 3.7515454553147163`*^9, {3.751545538726372*^9, 
   3.7515456077392807`*^9}, 3.751545749361664*^9, {3.7515461587828074`*^9, 
   3.751546229370285*^9}, {3.751546287775136*^9, 3.751546408087384*^9}, {
   3.7515464622243633`*^9, 3.751546501937745*^9}, {3.75154665239802*^9, 
   3.751546667029038*^9}, {3.751546707686902*^9, 3.7515467096841927`*^9}, {
   3.75154696318172*^9, 3.751546967211232*^9}, {3.751546998959661*^9, 
   3.751546999365562*^9}, {3.751547066491044*^9, 3.751547066827104*^9}, {
   3.7515471551130323`*^9, 3.751547217563505*^9}, {3.75154725455088*^9, 
   3.7515472559555473`*^9}, {3.751547306810193*^9, 3.751547381877203*^9}, {
   3.751547472841761*^9, 3.751547488222123*^9}, {3.751547604876109*^9, 
   3.751547640363544*^9}, {3.751547725932337*^9, 3.751547809335772*^9}, {
   3.7515478506820593`*^9, 3.7515478700975437`*^9}, {3.751548205575552*^9, 
   3.751548205966792*^9}, {3.751548240984*^9, 3.751548241543971*^9}, {
   3.7515483022630377`*^9, 3.751548313593556*^9}, {3.751548346471261*^9, 
   3.751548364006566*^9}, {3.7515485040105743`*^9, 3.751548527329975*^9}, {
   3.751548585254485*^9, 3.7515485896678267`*^9}, {3.75154862064288*^9, 
   3.751548641215089*^9}, {3.751548754453659*^9, 3.751548755771061*^9}, {
   3.751548910620434*^9, 3.751548913935947*^9}, {3.751549150305698*^9, 
   3.751549151554152*^9}, {3.7515496196762447`*^9, 3.751549626016919*^9}, {
   3.751549667185154*^9, 3.751549678856324*^9}, {3.7515577141620092`*^9, 
   3.7515579769380617`*^9}, {3.7515580143835163`*^9, 3.751558079574191*^9}, {
   3.751558139857582*^9, 3.751558195790101*^9}, {3.751558240532427*^9, 
   3.7515582861143713`*^9}, {3.751558324075095*^9, 3.751558426638844*^9}, {
   3.751558464777012*^9, 3.751558601918417*^9}, 3.751560352996121*^9, {
   3.75156042092759*^9, 3.751560627526421*^9}, {3.751560663584948*^9, 
   3.751560714510477*^9}, {3.7515607818803864`*^9, 3.751560794463461*^9}, {
   3.75156084127586*^9, 3.751561133314806*^9}, 3.751561164773282*^9, {
   3.751561196733371*^9, 3.751561243936717*^9}, {3.751561304383685*^9, 
   3.751561340980473*^9}, 3.751561386672986*^9, {3.751561422738428*^9, 
   3.75156144065863*^9}, 3.751562798882519*^9, {3.751562887509857*^9, 
   3.751562921117014*^9}, {3.751563467793459*^9, 3.7515635333641148`*^9}, {
   3.751563632630026*^9, 3.7515636921251373`*^9}, {3.751563759502212*^9, 
   3.751563897380251*^9}, {3.751563993037971*^9, 3.751564094266683*^9}, {
   3.751564151559767*^9, 3.751564224337727*^9}, {3.751564276271806*^9, 
   3.751564305989726*^9}, {3.751564343859222*^9, 3.75156435460959*^9}, {
   3.751564535093318*^9, 3.7515645408736877`*^9}, {3.751564741592326*^9, 
   3.751564742102913*^9}, {3.751565345019071*^9, 3.75156534877533*^9}, {
   3.751565634300085*^9, 3.751565674872629*^9}, {3.751565725695607*^9, 
   3.7515657389456263`*^9}, {3.751565969051643*^9, 3.751566050044183*^9}, {
   3.751566213478771*^9, 3.751566253286952*^9}, {3.751566533556609*^9, 
   3.751566599795817*^9}, {3.751566687880625*^9, 3.751566717417803*^9}, {
   3.75156675168545*^9, 3.751566752801428*^9}, {3.7515699278371677`*^9, 
   3.7515699437221813`*^9}, {3.751570007435248*^9, 3.751570023074649*^9}, {
   3.751570187298478*^9, 3.751570276871649*^9}, {3.75157031791251*^9, 
   3.751570423485096*^9}, 3.751570496857205*^9, {3.751629658839513*^9, 
   3.7516296594040003`*^9}, {3.7516482293214006`*^9, 3.751648231469442*^9}, {
   3.7516482780902777`*^9, 3.751648311475588*^9}, {3.751649162201541*^9, 
   3.751649164218728*^9}, {3.751649243402997*^9, 3.7516492446550083`*^9}, {
   3.7516527010998697`*^9, 3.751652702898699*^9}, {3.751715802356991*^9, 
   3.751715806562908*^9}, {3.75171871008357*^9, 3.7517187102737837`*^9}, {
   3.751720224954956*^9, 3.751720225539547*^9}, {3.75180353537171*^9, 
   3.751803582381357*^9}, {3.7518037899935207`*^9, 3.751803790206752*^9}, {
   3.751803825916532*^9, 3.7518038333639183`*^9}, {3.751803871979451*^9, 
   3.751803880317416*^9}, {3.751804016114931*^9, 3.7518041994017487`*^9}, 
   3.751804458455153*^9, {3.751804504398995*^9, 3.751804526295822*^9}, {
   3.751804732406631*^9, 3.7518047850047007`*^9}, {3.751804823721807*^9, 
   3.751804946499888*^9}, {3.751805281461915*^9, 3.751805349480773*^9}, {
   3.751805468862206*^9, 3.751805469113765*^9}, {3.751805566244466*^9, 
   3.7518056109509153`*^9}, 3.751808767251944*^9, {3.7518088467776546`*^9, 
   3.751808870661173*^9}, {3.751808919757815*^9, 3.751808920413374*^9}, 
   3.751808981319714*^9, {3.7518252499023113`*^9, 3.751825251375906*^9}, {
   3.751825328900333*^9, 3.751825361695635*^9}, {3.751839909117784*^9, 
   3.751839931364519*^9}, {3.7518399699449863`*^9, 3.751839998208387*^9}, {
   3.751840294938734*^9, 3.751840326385133*^9}, {3.7518967909161043`*^9, 
   3.751896844040004*^9}, {3.751897133362459*^9, 3.751897177476837*^9}, {
   3.751897305149067*^9, 3.751897305839085*^9}, {3.7520615808981743`*^9, 
   3.752061588104498*^9}, {3.752062646708231*^9, 3.752062661202073*^9}, {
   3.752064136655918*^9, 3.7520641372269707`*^9}, {3.752064248490041*^9, 
   3.75206427979885*^9}, 3.752065152025157*^9, {3.752066091658476*^9, 
   3.752066129830204*^9}, {3.752066445418621*^9, 3.752066445888782*^9}, {
   3.752066658044258*^9, 3.752066681926094*^9}, {3.752075969387257*^9, 
   3.752075982538548*^9}, {3.7520764125990477`*^9, 3.7520764510757513`*^9}, {
   3.7520765951191673`*^9, 3.752076684355805*^9}, {3.752092158871442*^9, 
   3.752092167418763*^9}, {3.752092200307008*^9, 3.752092220497007*^9}, {
   3.752092340202873*^9, 3.7520923550284653`*^9}, {3.752092478861067*^9, 
   3.752092486157296*^9}, {3.752092659507174*^9, 3.752092681210889*^9}, {
   3.7521459834068537`*^9, 3.7521459838904676`*^9}, {3.752147642163064*^9, 
   3.7521476433711777`*^9}, {3.752152017499311*^9, 3.7521520808217897`*^9}, {
   3.752152118210091*^9, 3.75215212658908*^9}, {3.752152334126521*^9, 
   3.752152370506043*^9}, 3.752152403120139*^9, {3.7521524580668993`*^9, 
   3.752152459562866*^9}, 3.7521570577424173`*^9, {3.752157101919507*^9, 
   3.7521571345007257`*^9}, {3.7521573444158087`*^9, 
   3.7521573554796057`*^9}, {3.7521574018396587`*^9, 
   3.7521574053217173`*^9}, {3.7521575049655952`*^9, 3.752157531072028*^9}, {
   3.752157708439774*^9, 3.752157719625977*^9}, {3.7521577668252153`*^9, 
   3.752157795597269*^9}, {3.7521716630517187`*^9, 3.752171680076846*^9}, {
   3.752172505521257*^9, 3.752172511917243*^9}, {3.752172824056987*^9, 
   3.75217283001786*^9}, {3.752173568618661*^9, 3.7521735806465597`*^9}, {
   3.7521736896625566`*^9, 3.752173702052449*^9}, {3.752173759102345*^9, 
   3.7521738187852993`*^9}, 3.7521794820950527`*^9, {3.75217951320256*^9, 
   3.75217955312353*^9}, {3.752179600323564*^9, 3.752179668223575*^9}, 
   3.7521799284676867`*^9, {3.7521804551622868`*^9, 3.752180475952984*^9}, {
   3.7521806541977997`*^9, 3.752180661303561*^9}, {3.752180816084681*^9, 
   3.752180816244917*^9}, {3.752180987656527*^9, 3.752181106480834*^9}, {
   3.752181172853467*^9, 3.75218117899233*^9}, {3.7521812382793293`*^9, 
   3.752181304529496*^9}, {3.752181402562583*^9, 3.752181449480577*^9}, 
   3.752181597993726*^9, {3.752181736358014*^9, 3.752181750204384*^9}, 
   3.7521818037707872`*^9, {3.752182126017026*^9, 3.752182153654828*^9}, {
   3.752182281478896*^9, 3.752182290407185*^9}, {3.7521825358693447`*^9, 
   3.752182545468699*^9}, 3.752182575988284*^9, {3.7521826360832987`*^9, 
   3.7521826776752987`*^9}, {3.7521828459073877`*^9, 3.752182864123925*^9}, 
   3.752183170275855*^9, {3.752183217909232*^9, 3.7521832240121727`*^9}, {
   3.752183300184978*^9, 3.752183313975216*^9}, {3.752183390153081*^9, 
   3.752183390898892*^9}, {3.7521834288164387`*^9, 3.752183483720804*^9}, 
   3.7521835474042187`*^9, {3.752273694849972*^9, 3.7522737261110888`*^9}, 
   3.752273805004345*^9, {3.752273904665362*^9, 3.752273920904477*^9}, {
   3.752275531655908*^9, 3.752275533414812*^9}, {3.752275580008092*^9, 
   3.7522755811950912`*^9}, {3.752275708821249*^9, 3.7522757672652187`*^9}, {
   3.752275806775238*^9, 3.752275915309018*^9}, {3.752275975377531*^9, 
   3.752275981848155*^9}, {3.752276035316449*^9, 3.752276076312166*^9}, {
   3.752276153624391*^9, 3.752276208726913*^9}, {3.752276261790701*^9, 
   3.752276274374391*^9}, {3.752276923554844*^9, 3.752276926364685*^9}, {
   3.752276966767366*^9, 3.752277027124126*^9}, {3.752277099096285*^9, 
   3.752277111269759*^9}, {3.7522771523895683`*^9, 3.752277213688238*^9}, {
   3.752277255935055*^9, 3.752277264129553*^9}, {3.75227731675393*^9, 
   3.752277318037126*^9}, {3.752277349788732*^9, 3.752277479600333*^9}, {
   3.7522775797633257`*^9, 3.7522775801252728`*^9}, {3.752277808192891*^9, 
   3.7522778105722227`*^9}, 3.7522780061845427`*^9, {3.752278127262601*^9, 
   3.752278174821813*^9}, {3.752279057945835*^9, 3.752279081499097*^9}, {
   3.752279152188196*^9, 3.752279241389002*^9}, 3.752279281613937*^9, {
   3.7522794297167683`*^9, 3.752279474422346*^9}, {3.752280096225658*^9, 
   3.752280096851802*^9}, {3.7522811352934504`*^9, 3.752281202336376*^9}, {
   3.752281556955214*^9, 3.752281567957045*^9}, {3.7522816052146597`*^9, 
   3.752281608657193*^9}, {3.7522817274591627`*^9, 3.752281732232751*^9}, {
   3.752281813503372*^9, 3.7522818137779217`*^9}, {3.752281910121169*^9, 
   3.752281912776803*^9}, {3.752748945715547*^9, 3.752748947663766*^9}, 
   3.752749252370707*^9, {3.7527493899418907`*^9, 3.7527494421284733`*^9}, {
   3.752749504176861*^9, 3.752749553526404*^9}, {3.752749621352036*^9, 
   3.752749720661964*^9}, {3.752749752226017*^9, 3.752749777864914*^9}, {
   3.7527498432882843`*^9, 3.7527499283578157`*^9}, {3.7527549369542007`*^9, 
   3.752754938846842*^9}, {3.752756324716701*^9, 3.752756340071175*^9}, {
   3.754063622097188*^9, 3.754063632612301*^9}, 3.754064155518609*^9, {
   3.754121514130069*^9, 3.754121514853263*^9}, {3.7541223971168413`*^9, 
   3.7541225999452543`*^9}, 3.7541227464388237`*^9, 3.7541227829868717`*^9, {
   3.7541228159969807`*^9, 3.754122864894349*^9}, {3.754122956329381*^9, 
   3.754123045212085*^9}, {3.754123167422971*^9, 3.7541232796506557`*^9}, {
   3.7541233199928617`*^9, 3.754123490227311*^9}, {3.754123550363771*^9, 
   3.754123687415567*^9}, {3.7541237404999533`*^9, 3.754123760230887*^9}, 
   3.754123797269919*^9, {3.754123850146323*^9, 3.754123861845031*^9}, {
   3.75412398443369*^9, 3.75412409424841*^9}, {3.754124137795247*^9, 
   3.75412415910231*^9}, {3.754124193037058*^9, 3.7541242559676323`*^9}, {
   3.754124291083811*^9, 3.754124307012197*^9}, {3.754124537690098*^9, 
   3.7541245672323017`*^9}, 3.754135793324635*^9, {3.7541366318517323`*^9, 
   3.754136637654635*^9}, {3.7541366858810587`*^9, 3.754136757018668*^9}, {
   3.7541368535370417`*^9, 3.754136888796475*^9}, {3.754136960028844*^9, 
   3.754136969899824*^9}, {3.754137187671529*^9, 3.754137195014428*^9}, {
   3.754141818038086*^9, 3.75414182222723*^9}, {3.7541513473297157`*^9, 
   3.754151348182042*^9}, {3.754330810636457*^9, 3.754330843331029*^9}, {
   3.754331120487884*^9, 3.754331155971434*^9}, {3.7543311931138487`*^9, 
   3.754331200190875*^9}, {3.7543312750497704`*^9, 3.7543313542053537`*^9}, {
   3.7544852023344593`*^9, 3.754485247134144*^9}, {3.754485287253162*^9, 
   3.754485287502878*^9}, {3.754485351165757*^9, 3.7544853800379477`*^9}, {
   3.7544854385325003`*^9, 3.754485444965713*^9}, {3.7544856245015507`*^9, 
   3.754485649439831*^9}, {3.754486366142123*^9, 3.754486387208395*^9}, {
   3.7544866955339003`*^9, 3.754486696418746*^9}, {3.754487282323132*^9, 
   3.754487329239684*^9}, {3.754487394866325*^9, 3.754487413759767*^9}, {
   3.754487538000409*^9, 3.7544875381133223`*^9}, {3.754487667273378*^9, 
   3.7544876958105717`*^9}, {3.754493974354369*^9, 3.754493974701631*^9}, {
   3.754494011333267*^9, 3.7544940197483587`*^9}, {3.754494150975482*^9, 
   3.7544941637200193`*^9}, {3.754494515967327*^9, 3.754494516073038*^9}, {
   3.754494775575644*^9, 3.754494780034144*^9}, {3.754494990507143*^9, 
   3.754495043434288*^9}, {3.7544988954439993`*^9, 3.7544988979820337`*^9}, {
   3.7544997889089746`*^9, 3.7544997890887833`*^9}, {3.7545001175863934`*^9, 
   3.754500178361161*^9}, {3.754572820888763*^9, 3.754572831256238*^9}, {
   3.754572865734733*^9, 3.754572879499811*^9}, {3.7545729559179707`*^9, 
   3.754572956458428*^9}, {3.75457300710133*^9, 3.754573015337566*^9}, {
   3.75457308341521*^9, 3.754573109105504*^9}, {3.754573167329083*^9, 
   3.754573180630262*^9}, {3.754573365819425*^9, 3.754573398775877*^9}, {
   3.754573571201545*^9, 3.75457357175456*^9}, {3.754608988763803*^9, 
   3.754609015086355*^9}, {3.754609063912677*^9, 3.7546090679436073`*^9}, {
   3.754610242628561*^9, 3.754610295159087*^9}, {3.754610333103879*^9, 
   3.7546103336320133`*^9}, {3.754610649964373*^9, 3.754610704935411*^9}, {
   3.754611706628105*^9, 3.754611708879949*^9}, {3.754847116534647*^9, 
   3.7548471270259247`*^9}, {3.754847719958889*^9, 3.754847720132848*^9}, {
   3.754848312412483*^9, 3.754848321421958*^9}, {3.754848962154217*^9, 
   3.7548489678281507`*^9}, {3.7548490184614077`*^9, 3.754849026216877*^9}, {
   3.7548492178888073`*^9, 3.754849218817491*^9}, 3.754849309951839*^9, {
   3.754849377163265*^9, 3.754849381602543*^9}, {3.754849552964464*^9, 
   3.754849553115199*^9}, 3.7548496207617407`*^9, {3.754849658480318*^9, 
   3.754849670057632*^9}, {3.7548497241575737`*^9, 3.7548497305549927`*^9}, {
   3.7548501104025497`*^9, 3.754850135706584*^9}, {3.754850182363468*^9, 
   3.754850197317019*^9}, {3.754850339547133*^9, 3.754850439755369*^9}, {
   3.754850495626272*^9, 3.754850523017771*^9}, {3.754851170271948*^9, 
   3.754851170452181*^9}, {3.754851494021463*^9, 3.754851494395323*^9}, {
   3.754851529483313*^9, 3.754851529925001*^9}, {3.754851798819605*^9, 
   3.754851803051182*^9}, {3.754852039425036*^9, 3.75485203957406*^9}, {
   3.754852168882285*^9, 3.754852180269474*^9}, {3.754858978081665*^9, 
   3.754858989522112*^9}, 3.7548590241141872`*^9, {3.7548598318562193`*^9, 
   3.7548598601813993`*^9}, {3.754865733301014*^9, 3.75486574045786*^9}, {
   3.7548660436428413`*^9, 3.754866058418468*^9}, {3.754866712871106*^9, 
   3.754866725965336*^9}, {3.754866790731844*^9, 3.754866801750863*^9}, {
   3.754867296956472*^9, 3.75486735185109*^9}, {3.7548673880805798`*^9, 
   3.7548674001738443`*^9}, {3.754867763801944*^9, 3.754867764144758*^9}, {
   3.754958173357213*^9, 3.754958187895822*^9}, {3.7549588956374607`*^9, 
   3.7549589138739443`*^9}, {3.754958957465185*^9, 3.7549590136558123`*^9}, {
   3.754959075774109*^9, 3.754959077766461*^9}, {3.754959148137809*^9, 
   3.75495926773836*^9}, 3.75500630937894*^9, {3.7550065856797123`*^9, 
   3.7550066063231297`*^9}, {3.755006737580084*^9, 3.755006739566422*^9}, {
   3.755006781231806*^9, 3.755007104467483*^9}, {3.755007151311378*^9, 
   3.755007152185923*^9}, 3.755007259564527*^9, {3.755007914236836*^9, 
   3.755007915232511*^9}, {3.755247522092022*^9, 3.7552475365499563`*^9}, {
   3.755247766441949*^9, 3.755247801559157*^9}, {3.755247840096203*^9, 
   3.755247840987837*^9}, {3.755247879991646*^9, 3.755247924403981*^9}, {
   3.755248354958202*^9, 3.7552483558021917`*^9}, {3.755248405632469*^9, 
   3.755248419525907*^9}, {3.755249715148719*^9, 3.755249718032016*^9}, {
   3.755249751663553*^9, 3.755249905741626*^9}, {3.7552499450607452`*^9, 
   3.75525023566903*^9}, {3.755250269696862*^9, 3.7552502710131207`*^9}, {
   3.7552503293447638`*^9, 3.75525033143932*^9}, {3.755250438601899*^9, 
   3.755250473185933*^9}, {3.755250655658609*^9, 3.7552506738212748`*^9}, {
   3.755250958223282*^9, 3.755250958543625*^9}, {3.755251681680253*^9, 
   3.755251682106015*^9}, {3.75525284458423*^9, 3.755252847083231*^9}, {
   3.755253324893388*^9, 3.755253325330454*^9}, {3.755301486765423*^9, 
   3.755301511662035*^9}, {3.755302753065727*^9, 3.755302755344303*^9}, 
   3.7553027883571453`*^9, {3.755302845600499*^9, 3.755302878293973*^9}, {
   3.755302925209134*^9, 3.755302925955482*^9}, {3.7553040515956707`*^9, 
   3.755304098850338*^9}, {3.7553044648842897`*^9, 3.755304471176095*^9}, {
   3.7553472682610207`*^9, 3.755347272000785*^9}, {3.7553499191033163`*^9, 
   3.755349936349008*^9}, {3.755422393099413*^9, 3.7554224233233843`*^9}, {
   3.755422870178986*^9, 3.755422885106379*^9}, {3.755422923121078*^9, 
   3.75542300054183*^9}, {3.755423124678637*^9, 3.755423234845224*^9}, {
   3.755423329282667*^9, 3.755423354767371*^9}, {3.755425680764172*^9, 
   3.7554256815293093`*^9}, {3.7554257154647217`*^9, 3.755425879873691*^9}, {
   3.755426019562004*^9, 3.755426235398281*^9}, {3.7554262797882757`*^9, 
   3.755426284730166*^9}, {3.755426338793591*^9, 3.75542635137204*^9}, {
   3.755426911936101*^9, 3.755426922412732*^9}, {3.755427142798565*^9, 
   3.755427183095715*^9}, {3.755427214609956*^9, 3.755427245104414*^9}, {
   3.755427276532742*^9, 3.755427283213551*^9}, {3.7554274238006907`*^9, 
   3.755427424358007*^9}, {3.755427507386279*^9, 3.7554275092442217`*^9}, {
   3.7554275675308867`*^9, 3.755427570678254*^9}, {3.755433269771144*^9, 
   3.7554332706114407`*^9}, {3.755433313553482*^9, 3.7554333174400063`*^9}, {
   3.755433411343354*^9, 3.755433482924155*^9}, {3.755433514928276*^9, 
   3.755433551105975*^9}, {3.7554336064663267`*^9, 3.755433622179472*^9}, {
   3.7554336951660433`*^9, 3.755433696932371*^9}, {3.755433753358274*^9, 
   3.755433758044161*^9}, {3.755433804470769*^9, 3.755433899583919*^9}, {
   3.755477022819119*^9, 3.7554770417422333`*^9}, {3.7556830528588676`*^9, 
   3.75568306122622*^9}, {3.7556835483653183`*^9, 3.7556836044414387`*^9}, {
   3.7556836655439262`*^9, 3.755683668331143*^9}, {3.755683768246958*^9, 
   3.755683768559569*^9}, {3.755683811347587*^9, 3.755683811709539*^9}, 
   3.755683913275329*^9, {3.7556839554356003`*^9, 3.755683961182766*^9}, {
   3.755685060034141*^9, 3.7556850636683607`*^9}, {3.7556851868551903`*^9, 
   3.755685187378409*^9}, {3.755685231688531*^9, 3.755685239680018*^9}, {
   3.755686129369987*^9, 3.7556862562114487`*^9}, {3.755686303354609*^9, 
   3.755686332835499*^9}, {3.755686389707356*^9, 3.7556864409756937`*^9}, {
   3.75568951892443*^9, 3.755689539257038*^9}, {3.755689578521665*^9, 
   3.7556896564263973`*^9}, {3.7556898456775923`*^9, 
   3.7556898550866013`*^9}, {3.755689895040262*^9, 3.755689898014393*^9}, {
   3.755689977926793*^9, 3.7556899791266823`*^9}, {3.755690015866645*^9, 
   3.755690053158037*^9}, {3.7556900932093782`*^9, 3.7556901062145557`*^9}, {
   3.7556902095936337`*^9, 3.7556902168171053`*^9}, {3.755690247101677*^9, 
   3.7556902711404*^9}, {3.7556924688084*^9, 3.755692475915601*^9}, {
   3.755692557986556*^9, 3.7556926290952806`*^9}, {3.755692695256089*^9, 
   3.755692834280476*^9}, {3.755692936108672*^9, 3.755692939085765*^9}, {
   3.75569298362528*^9, 3.7556930409100323`*^9}, {3.7556930880224257`*^9, 
   3.7556931506632853`*^9}, {3.7556941886249447`*^9, 3.755694205282571*^9}, {
   3.75569425590546*^9, 3.755694259898266*^9}, {3.755694310602397*^9, 
   3.755694330674732*^9}, {3.755694487406158*^9, 3.755694488844489*^9}, {
   3.7556947274897547`*^9, 3.755694779590214*^9}, {3.7557049302122173`*^9, 
   3.755704937566185*^9}, {3.7557078286022873`*^9, 3.755707834189084*^9}, {
   3.755707968101376*^9, 3.755708019971181*^9}, {3.75570812359126*^9, 
   3.7557081495685987`*^9}, {3.75570854619156*^9, 3.755708574041499*^9}, {
   3.755708880011118*^9, 3.755708911040578*^9}, {3.75570935561722*^9, 
   3.755709437523445*^9}, 3.7557095100388813`*^9, {3.7557095803301067`*^9, 
   3.7557095838953333`*^9}, {3.755709688211372*^9, 3.7557097558163147`*^9}, {
   3.7557098330219183`*^9, 3.755709866788094*^9}, {3.7557106992209873`*^9, 
   3.7557107814240427`*^9}, {3.755711557824696*^9, 3.7557115605817633`*^9}, {
   3.75571170755195*^9, 3.7557117083506823`*^9}, {3.756141164065071*^9, 
   3.756141181442298*^9}, 3.756142144800865*^9, 3.756142898325725*^9, {
   3.756143550077177*^9, 3.756143562536339*^9}, {3.756143695541692*^9, 
   3.756143697693379*^9}, {3.7561437955316277`*^9, 3.756143796737253*^9}, {
   3.756146574579453*^9, 3.7561465760317173`*^9}, {3.756147159933301*^9, 
   3.756147161558188*^9}, {3.7562107435879173`*^9, 3.756210801939302*^9}, {
   3.7562108369690866`*^9, 3.756210906890929*^9}, {3.7562109489522533`*^9, 
   3.756210984975522*^9}, 3.756211076978339*^9, {3.756211111452993*^9, 
   3.75621113281013*^9}, {3.7562113153157177`*^9, 3.75621131872064*^9}, 
   3.7562136615073223`*^9, {3.756213732370673*^9, 3.756213749664596*^9}, 
   3.756213890453517*^9, {3.75621407510172*^9, 3.756214088630928*^9}, {
   3.756221551919251*^9, 3.756221583398347*^9}, {3.756221631718973*^9, 
   3.756221632154929*^9}, 3.756221665529406*^9, {3.756223407761814*^9, 
   3.75622346955024*^9}, {3.756225411123475*^9, 3.7562254275390377`*^9}, 
   3.756231363874659*^9, {3.7562314084915323`*^9, 3.7562314110599213`*^9}, {
   3.756231447946885*^9, 3.756231517536724*^9}, {3.7562315491757317`*^9, 
   3.7562316442731943`*^9}, {3.756231755111334*^9, 3.7562317688969173`*^9}, {
   3.7562318004558773`*^9, 3.7562318444543953`*^9}, {3.756231885307659*^9, 
   3.75623198655403*^9}, {3.7562320187900257`*^9, 3.7562320327990932`*^9}, {
   3.756232067913239*^9, 3.756232177018683*^9}, {3.756232262714541*^9, 
   3.7562323668140793`*^9}, {3.756232417693754*^9, 3.7562326296224337`*^9}, {
   3.7562326739686947`*^9, 3.756232783999585*^9}, {3.756233370672895*^9, 
   3.7562334137529783`*^9}, {3.7562334466895103`*^9, 3.756233711247658*^9}, {
   3.75628666712228*^9, 3.756286680578197*^9}, {3.756286895344059*^9, 
   3.7562869515949793`*^9}, {3.756287108631535*^9, 3.756287156278784*^9}, {
   3.7562872275620832`*^9, 3.756287244928432*^9}, {3.756287286089666*^9, 
   3.7562876943306217`*^9}, {3.756292144687725*^9, 3.756292263963587*^9}, {
   3.7562922943716373`*^9, 3.756292341045073*^9}, {3.756292378083601*^9, 
   3.756292430279633*^9}, {3.7562924705884323`*^9, 3.756292525908036*^9}, {
   3.756292563889703*^9, 3.7562926917514563`*^9}, {3.756292771521162*^9, 
   3.756292802847764*^9}, {3.756293028700492*^9, 3.7562930290158777`*^9}, {
   3.7562930782572107`*^9, 3.756293082558216*^9}, {3.756293124077866*^9, 
   3.7562931604518538`*^9}, {3.7562933614314528`*^9, 
   3.7562933977719393`*^9}, {3.7562935897831593`*^9, 3.756293696449957*^9}, {
   3.756293735068676*^9, 3.756293810929764*^9}, {3.756293967079191*^9, 
   3.756293974470159*^9}, {3.756294012221101*^9, 3.7562940598437157`*^9}, {
   3.756294111502735*^9, 3.756294157541315*^9}, {3.756294188870201*^9, 
   3.756294207248509*^9}, 3.756294238006122*^9, 3.756294273348197*^9, {
   3.756294303517749*^9, 3.7562943695546093`*^9}, 3.75629442575954*^9, {
   3.7562944591147957`*^9, 3.756294495498395*^9}, {3.756294899589336*^9, 
   3.756294927458006*^9}, {3.756295865437607*^9, 3.756295865645677*^9}, {
   3.756295956408695*^9, 3.756296016077436*^9}, {3.756296170415904*^9, 
   3.756296174788724*^9}, {3.756296389362907*^9, 3.756296434731489*^9}, {
   3.7562970047423077`*^9, 3.7562970462928057`*^9}, {3.756299066641769*^9, 
   3.756299079718869*^9}, {3.756300331277583*^9, 3.756300332947452*^9}, {
   3.756300402903195*^9, 3.756300422310813*^9}, {3.756300478763731*^9, 
   3.7563004811729393`*^9}, {3.75630062508267*^9, 3.7563006358665*^9}, {
   3.756300673619885*^9, 3.756300777241529*^9}, {3.7563008545833*^9, 
   3.7563008574367867`*^9}, {3.756300954336443*^9, 3.75630097173906*^9}, {
   3.756301032345619*^9, 3.7563010542937307`*^9}, {3.756310265727147*^9, 
   3.7563103155174723`*^9}, {3.756310346004117*^9, 3.75631034651996*^9}, {
   3.7563826258934937`*^9, 3.756382894366784*^9}, {3.756382941937121*^9, 
   3.756383230539545*^9}, {3.7563833002870607`*^9, 3.756383315977311*^9}, {
   3.7563833545474777`*^9, 3.756383356233531*^9}, {3.756383912459772*^9, 
   3.756383914865676*^9}, {3.756384066170746*^9, 3.7563840671522617`*^9}, 
   3.7563843357194567`*^9, {3.7563844123540792`*^9, 3.756384489494129*^9}, {
   3.7563846168096952`*^9, 3.7563846495478773`*^9}, {3.756384753090228*^9, 
   3.7563847577847633`*^9}, {3.756466809546493*^9, 3.7564668254183617`*^9}, {
   3.756467243796472*^9, 3.756467309765403*^9}, {3.75646747055219*^9, 
   3.7564675502403183`*^9}, {3.756467584168499*^9, 3.756467643454492*^9}, {
   3.756467696462799*^9, 3.756467908735153*^9}, {3.756468023241139*^9, 
   3.7564681032624617`*^9}, {3.756468207685101*^9, 3.756468215822713*^9}, {
   3.756468318966177*^9, 3.756468342095788*^9}, 3.756468417127316*^9, 
   3.75646855916963*^9, {3.756470565064533*^9, 3.75647060781323*^9}, 
   3.756470641383808*^9, {3.756470691580412*^9, 3.756470730420197*^9}, 
   3.756479184346808*^9, {3.7564792512766933`*^9, 3.756479264832137*^9}, {
   3.7565069324175873`*^9, 3.7565069582761602`*^9}, {3.756507085989544*^9, 
   3.7565070865579023`*^9}, {3.75650714105929*^9, 3.756507141613521*^9}, {
   3.756510045789989*^9, 3.756510068101871*^9}, 3.7565101348837*^9, {
   3.756510341119554*^9, 3.7565103420483828`*^9}, {3.756510405420226*^9, 
   3.756510408749864*^9}, {3.7565112122883577`*^9, 3.7565112829502707`*^9}, {
   3.756511322950748*^9, 3.756511373181497*^9}, {3.75659041055203*^9, 
   3.756590417556814*^9}, 3.75659049671667*^9, {3.756590539272705*^9, 
   3.7565905474057426`*^9}, {3.756591438735676*^9, 3.756591442409128*^9}, {
   3.756744076250218*^9, 3.756744079942903*^9}, {3.7567495304413023`*^9, 
   3.756749536287994*^9}, {3.75674962981137*^9, 3.756749704995072*^9}, {
   3.756749777145679*^9, 3.7567497815837717`*^9}, {3.756749837378427*^9, 
   3.7567498439656487`*^9}, {3.756749886783046*^9, 3.756749902114328*^9}, 
   3.756750056603962*^9, {3.7567501240318203`*^9, 3.756750141009214*^9}, {
   3.756750185242782*^9, 3.756750194378639*^9}, {3.7567502638926907`*^9, 
   3.756750271806674*^9}, 3.756750303109644*^9, {3.7567503370823517`*^9, 
   3.756750382002726*^9}, {3.75675041886125*^9, 3.756750468738949*^9}, {
   3.756750536144843*^9, 3.75675057681598*^9}, {3.7567506431111507`*^9, 
   3.7567507099211407`*^9}, {3.756750741816368*^9, 3.756750760241866*^9}, {
   3.7567507921394*^9, 3.7567508180704203`*^9}, {3.756763214927864*^9, 
   3.756763255127273*^9}, 3.7567632975393248`*^9, {3.756813139240906*^9, 
   3.756813196061452*^9}, 3.756813423509817*^9, {3.7568137116526012`*^9, 
   3.756813798590564*^9}, {3.756813837850463*^9, 3.7568138799630613`*^9}, {
   3.7568139559658213`*^9, 3.756813968183393*^9}, {3.75681515057548*^9, 
   3.756815159468919*^9}, {3.75681601325432*^9, 3.7568161179480352`*^9}, {
   3.756816382459537*^9, 3.756816411190349*^9}, {3.75681762853127*^9, 
   3.756817631099551*^9}, {3.756818681773478*^9, 3.7568186828340607`*^9}},
 FontSize->16,
 CellLabel->
  "In[178]:=",ExpressionUUID->"e6ee71de-10b6-46de-bd08-b2d14f1f1b4f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`alpha$$ = {
    0.001953125, -0.17674851190477092`, 
    6.384548611111047, -42.743055555556225`, 
    199.791666666664, -440.35555555556175`, 
    485.33333333333076`, -264.12698412697887`, 
    56.88888888888289}, $CellContext`alphabar$$ = {0.998046875, 
    0.025706845238107234`, -0.4279513888891586, -0.8680555555541647, 
    15.791666666663946`, -110.75555555556238`, 
    229.33333333332104`, -190.98412698412346`, 
    56.888888888884196`}, $CellContext`aReliable$$ = 
    3, $CellContext`biases$$ = {0.00390625, 0.03125, 0.109375, 0.21875, 
    0.2734375, 0.21875, 0.109375, 0.03125, 
    0.00390625}, $CellContext`bReliable$$ = 2, $CellContext`coefs$$ = {{
    0.001953125, -0.020140438988096365`, 0.18172557043650572`, 
    0.3835915798611078, 0.5854575892857099, 0.787323598710312, 
    0.9891896081349141, 1.0012602306547633`, 0.998046875}, {
    0.001953125, -0.020140438988096365`, 0.48452458457340886`, 
    0.48452458457340886`, 0.48452458457340886`, 0.48452458457340886`, 
    0.9891896081349141, 1.0012602306547633`, 0.998046875}, {
    0.001953125, -0.020140438988096365`, -0.020140438988096365`, \
-0.020140438988096365`, 0.9891896081349141, 0.9891896081349141, 
    0.9891896081349141, 1.0012602306547633`, 0.998046875}, {
    0.001953125, -0.020140438988096365`, 
    0.18578559027778213`, -0.1435376364087333, 1.0827876984126974`, 
    0.9463340153769844, 0.9891896081349203, 1.0012602306547629`, 
    0.998046875}}, $CellContext`d2b$$ = CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQCE4Gl4DRL/3Q3gKDhBa58DqVSBgBOE3GB5I
AwM1B4i40IFJKp5A9Alq/4H9lj/ill0WZXJ4EZV6WPCy3gGIua4OCxilgCjg
wPbc29tyb/s7lAawA5HrASG5h4JyDw0dlnx/DtJxoGTtpocdmfftZ5hs91s0
ienA2cau5vepRg5gZYL+B+rfHK97czzGoe+xRd/jGfEHljhpAVGYw0HOOQc4
5zgfyPweeO0Sh4oDxB2f9ke2d4tnbf9rv1itIZFzjf6BQluu64sLfB0uhU6w
2PMt7sBF3rsXeO8mw/kweZh6mH6YeTDzYfbB7Ie5B+Y+mHth7of5B+Y/mH9h
/oeFByx8YOEFCz9YeMLCFxbesPCHxQcsfmDxhRJ/wPiExS9qfFMKPtgDACHW
4XI=
    "], $CellContext`d2t$$ = CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQCF4rL3vkfY+0wMQXoADhI45sHoVCCRB+A2J
B9LAIMwBIu50YJKKJxApQdV/2P//k/7/T/npDkfDa4Co+8DZM0DAM99BPOeg
WI7jMoj5M5Y6GIPBnAO/lvj/WnK+3WHDj671P7rSD0DcYQKR39x1wLLvsUVf
8maHG026N5pqT0LMe3PZ4XihzPFCmysHgKYeFNM5DbE/YTuEnzPdoVkXpCPl
gCAIXFzo8HKyHRCdhcjbPHW4dxcEPh6QARkk+tlBD2zBqwN7dgNB9HUHjdpL
6rWXth8Akeq1rQ5ge8+sOfDEAuSgmw5gdz3+DPHPAUZHCJ/5INiYtX+g4fHq
ANidMqeh6mdAzN+92sFr/hfP+V9uHoC46yvUPcwHwcos2B25tyUAEeNBFzD4
4ADx18UDG1ijgWiBg+wVRyCaC3F/4RlI+Oi+OFAOBt8dIOJ/DoCN4f7mEAoG
Tw9IVE4Ur5x4HBIfB6cdkFrACERVDhB61QGI+DGo/DWo+XfgfJg8TD1MPwDn
qRMM
    "], $CellContext`d2tLeft$$ = {{1., 0.}, {-8., 
    8.}}, $CellContext`d2tRight$$ = {{1., 0., 0.}, {-12., 16., -4.}, {
    32., -64., 
    32.}}, $CellContext`dosIsing$$ = {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
     2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0, 
     0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 0, 
     0}, {1, 0, 0, 0, 0}}}, $CellContext`eval$$ = 40, $CellContext`fac$$ = 
    Rational[2, 3], $CellContext`func$$ = Function[$CellContext`x$, Sum[
       Part[{0.00390625, 0.03125, 0.109375, 0.21875, 0.2734375, 0.21875, 
        0.109375, 0.03125, 0.00390625}, $CellContext`k], {$CellContext`k, 
        Ceiling[$CellContext`x$ (
            Length[{0.00390625, 0.03125, 0.109375, 0.21875, 0.2734375, 
              0.21875, 0.109375, 0.03125, 0.00390625}] - 1) - 0.5] + 1}] - 
     Part[{0.00390625, 0.03125, 0.109375, 0.21875, 0.2734375, 0.21875, 
       0.109375, 0.03125, 0.00390625}, 1]/2], $CellContext`funcChanged$$ = 
    False, $CellContext`funcName$$ = Tooltip[
    "binomial", 
     "a binomial distribution with parameters N and p.\n Illustrates fitting \
an inherently discrete function."], $CellContext`hFracIsing$$ = 
    0.25, $CellContext`isDiscrete$$ = True, $CellContext`isMonotonic$$ = 
    True, $CellContext`leftM$$ = 2, $CellContext`lenReliable$$ = {2, 
    3}, $CellContext`lorderReliable$$ = 1, $CellContext`matchData$$ = 
    False, $CellContext`matchName$$ = Tooltip[
    "derivatives", 
     "Truncated Taylor polynomials may not match data;\n Bernstein \
coefficients will be correct"], $CellContext`mBinom$$ = 
    8, $CellContext`mIsing$$ = 4, $CellContext`mpair$$ = {2, 
    7}, $CellContext`mPole$$ = 4, $CellContext`mReliable$$ = 
    2, $CellContext`msg$$ = "\nEval 40\n", $CellContext`numPts$$ = 
    9, $CellContext`oldFuncName$$ = "binomial", $CellContext`oldHFracIsing$$ =
     0.5, $CellContext`oldLorder$$ = 1, $CellContext`oldMatchName$$ = 
    "derivatives", $CellContext`oldMBinom$$ = 8, $CellContext`oldMIsing$$ = 
    3, $CellContext`oldMpair$$ = {2, 7}, $CellContext`oldMPole$$ = 
    4, $CellContext`oldmReliable$$ = 2, $CellContext`oldNumPts$$ = 
    9, $CellContext`oldPBinom$$ = 0.5, $CellContext`oldPtPole$$ = {0.5, 
    0.5}, $CellContext`oldRorder$$ = 1, $CellContext`oldWhichPlot$$ = 
    "monotonic", $CellContext`pBinom$$ = 0.5, $CellContext`plot1$$ = {
     Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.5, 0, 0.5]], 
            Line[CompressedData["
1:eJxFxw0s1HEcx/HLqVVkc54i5loh89h2jLT7p2W4zkNcCReyhYsiwyKb85yH
VpkKlZynZB5CCue0cbsQIk/hLpfHHc5devCQ2/Vw+v4+23ufvQ4HR3pdUcLh
cB5/+vvqeWvMZwEhZNy/BWGEkEMMTlo+9t/468fx7WnlYP2D+/mBmtVg286Z
V/jyenBpzvPBJZuGHbOwY68FvOHCRnCdUIPTLmsCk1QoTRWXm8H6zXzp17w2
8O7ASEsy9y042ZiZzb7WCWY+7Zb5bHLBxrkDqV1+PHBfwsg+q/Z3YMPo8b65
iG6FT3Vi0YzJu0UGPWBekMDLcwBZ96JQa09SL9jdxpXWQOgHpxAa8+iVH8BK
ZhISy24IzKWmEzWLP4JNjKPMctyGwdlyP1slGfLJiEE2hzaiMHEcW/3k5Bhf
g1zixOaRlEfB5xqtqVJ/ZNV50i2XsjEwT8e+umRpHFwlKzZ66DYBzppVZuW8
nATHaHuEO1yYAge4Ftos/0IeCe7Q63LnK+w5h7kmzsqLWMgdD/bOR39HJtVb
9FKcBWC1yl1ZRrmfwaIno864oWlwbFm6aXuBEBx3k2i14fIF/C3FvsX6MXLU
HS9Hhhi5njCdnq49s+NlbPVReC8LQzY32FDrCEMOL03znryPvHlvUUXvzCw4
M4nC9f2JXGDbr+5TMQeuEnsE0mjzYAsRPVdcgdw4x2jNWEeODZZ6eBMXFB5c
xeyEcQuGrshbl2SJKzeQOVOpGq1FyP41AxptZxfBm4m6muxtZNNigYWJswhM
1gjNfFGCTLstFZptIU+fbj4gNl7asQS7Kos/UeeN/OMNOTSSicyMxudb1yJb
Gtny1+jLYP542NFm1RWwOWe7v4wmBjtEsalayciUIwnvM2qRfcfsKBsTyGFZ
692MPasKSyVYhiSGRw1ELju/1mXVgqw+1TOmQ5eAk4JYIrkc+TfRkrgB
             "]]}, "Charting`Private`Tag$593849#1"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 1., Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 0.998046875}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       LineLegend[{
         RGBColor[0.5, 0, 0.5], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 0]}, {
        "function to approximate and 9 sampled values", 
         "2 term Taylor series at 0", "3 term Taylor series at 1"}, 
        LabelStyle -> {}, LegendLayout -> "Column"], Above, Identity]], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           PointSize[
            Rational[1, 32]]], 
          
          Point[{{0., 0.001953125}, {0.125, 
           0.033203125}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.125}, {0, 0.033203125}}, PlotRangeClipping -> True,
        ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 0.125}, {0, 0.033203125}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           PointSize[
            Rational[1, 32]]], 
          
          Point[{{0.75, 0.962890625}, {0.875, 0.994140625}, {1., 
           0.998046875}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, 
       AxesOrigin -> {0.7460937500000001, 0.9611328125000002}, 
       PlotRange -> {{0.75, 1.}, {0.962890625, 0.998046875}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {0.7460937500000001, 0.9611328125000002}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.75, 1.}, {0.962890625, 0.998046875}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           PointSize[
            Rational[1, 32]]], 
          Point[{{0.25, 0.142578125}, {0.375, 0.361328125}, {0.5, 
           0.634765625}, {0.625, 0.853515625}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.853515625}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0.244140625, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.853515625}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[0, 0, 1], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwBMQLO/SFib1JlAgAAACIAAAACAAAAEZLygJ9eZj7x4acX+P9fP202l8zF
hHQ/jqQbLVJ+UT8wVu80wISEP2A5exRi5Sc/EmYbab2ElD+aE4mSnwZavwNu
MQO8hKQ/SoIuz00Ddb80C0qzpWG1P8LC+gysO4q/BV9vLj7Evz9V+6WDcnWU
v4CdyP1X+cQ/GlzsJjCom78ZWOAVBn/KP30vz7OOu6G/ghKyklymzz+BnWNJ
UmClv8RMhSAUntI/k9ytrS1Tqb9RsjBM8FvVPw3/BqWZM62/xhc5qqDq1z8N
x81IqWiwv4njBKGLsNo/G/dyppFesr80ry3KSkfdP3PdtX4gM7S/6ZzVRwDR
3z9+NYCgd/61v3Z4IC/4SOE/EHalqdrwt79rooRT2pHiP+xsaC3kwbm/h39K
xFn24z9OTIaY+bm7v6jtT19UVOU/ZJ0rTdeovb+924MTuZrmP8Skbnxbdr+/
+XwZFLv85z9WSobJdbXAvyme3S0nR+k/bh0kEhGfwb+AcgOUMK3qP8pkb04y
nMK/3NdoJLUM7D8AZX6vt5TDvyy9/M2jVO0/W0DcTZB8xL+jVfLDL7juP/mP
59/ud8W//jaoyCnh7j9aflRB55TFv1oYXs0jCu8/vGzBot+xxb8R28nWF1zv
P35Jm2XQ68W/bLx/2xGF7z/fNwjHyAjGv8idNeALru8/QSZ1KMElxr8kf+vk
BdfvP6MU4om5Qsa/f2Ch6f//7z8EA0/rsV/Gv5D/Ht4=
            "]]}, "Charting`Private`Tag$594026#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-0.1747953795402496, 0.0019531176354786706`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[1, 0, 0], 
            Thickness[Large]], 
           Line[CompressedData["
1:eJwVknlQ03cQxVMpKofVEPAoFKIcDqVqRIwHDq+jtWHSVCoG5IigdeQQAx2k
XkMN0nBp1RKRTBHlihqtIoOAaESsHOUQEQUpp0ggd/KF4FSgUPrrHzs7nz92
33s7u/L7hMBD82g02g6q/u90iTmlICLKjz4ncXm5RAkhW/q8QZwE3uANVqu3
Eqxg4vNULMaPda3s3/hK2EU5xtaIc5Bd4L+qVKqERfx6i8diGTTXPjmmcByB
jw33/vUDlfjzdXT7AdYoLCMT1vrV10KTsNP1qYcKKVebZvdO1UMuKrnvsEiN
FSFDDvNFLTixsqsialqNVLtyieBGO1ivJ5Mdn2tQz0tj2l97hZDBYWFWsRa7
y1m8sfAu7Ktd+JAeo0Pjsi23C3XdoCfdsn9kr0eW8uOic2W9WHX84iZenR4+
99a0cDkDyOsU7D4YZoA2v4tD63iLvQ6QRCgNOHaCuW7S/x2k3ASL9Dgj4orF
e3qzh1Edq+D2DxqRIeLWh/6tRL6/cKlzgAlyY0Aknz+KXH9BfXSZCTV9PzMe
5qlgNVAly5szYeRi7p6pRhWcJpbaJ1sR2H5169KWCRU69l129WQQhN95wXj0
jRrM9cZVKneCqeQV9ooZNXa1LyzR+xO4fBQoXeihgXwvWV7wHcHOtLOfBgdo
ENliaXILIcg+/w9zvEgDXfyzyptRBA/oPjK/Vg2eFsbIZUKCgctHVv/yXoPx
x37TR5MIPK8NrFnN0SKh4pQi6wxBRUhxmOaoFudq/cL5mQR+jOiMW4VauPhs
jNFeIOBnjg15TWtxL/Rhc+IVgrfbKxcZPXS4Y81xji4iODx7cmvpHh2Y7guG
3G8SpCRa5LDu6pCY6/z7vHKCL1yWeKzs0WGr0yDf6gFBd6tTNd1Sj4mUe2H9
CoK17ux+s0CPbeqMU+p6gt6O7fHKTD2aNRdyXJoJ0k4H0Dor9OA237R2ayPo
745xq7Q1wGn1YhtJJ0E6/8pU+UYD9nvl5z7rJmB1tL0oizBgXK5gNfZS+76l
yUozDHhZIOzJHyAQt3ifvFNmwMzi8l+/HqL0OYd23e4x4PhUZnDdMMFfdVJX
+TwjIDB/zhglSP2yZfK6lxFBm02L2GoqT81MWwnfiOrzyXNeWgLfHxQ8hzNG
BNbaxK/QE3BdT7Wm3zXiYJxqwSsDQeibzdzJHiNM2bZtQSaCmKwPTbHzTRjz
Pl0jIwTHt1Vx+rxNOLzLt+fJGJWHJDXyIk0IH9nBlI0T5BRv2PnknAkN76US
vpmgJMhct66a+jvRJtZLiv9ly5s835ngGzQbypggCFse0eZqTXDsp/I8T4qr
phivPttA+ZgMNttRTO9rfrNMQKBs0O1vp+aPPBb10dMIHFRCVQTFTVc3DtmU
EoyFDKX+Qem7ifQjltRdE523sz9Q/kT7i7RzcwRX2JdoNIr/AzGkMcc=
            "]]}, "Charting`Private`Tag$594072#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0.5958023659404451}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.5958023659404451}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {0.5958023659404451, 0.9984329244070256}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
           Line[CompressedData["
1:eJwVz3k41HkcwPEpsR0UjSjL4iE5IneL8tEh26QUKkq0tcqRdMi1bTPLoHRY
R+soMgwxIYSxhd+ExjhGUZocs851jOb3+yWbq9jv/vF9Ps/reX+fz/P9ap8J
dvVdTqFQjqPz/1RKmmI88j5nb+3dJf51yQeCrFPbXjFDoOhRgk0dFoeZHiMs
eUwm3KBRfEw8UzFDpeRojaZ70LgvzfnskWxs/bnv/WuZKRAQ6vWgayYXS9gT
pPgxLx006x/dyuHmY/LaGFetKQs2BHpmNOcXYHvpN5/qTrOgXSaqp6i7EJO5
aCZTw2RDlfeOq1vOcjDFhkzirvNjMJgSOC47yMHUN67u81HmALdidl1KWiFm
EBQqMOsrgugrasF0jwLMun6oQob9FBbL3gbXZOZjObcfv5FYlUE/v2aqOoyN
6VeJ+W/TyyG9bqzr8jQLKxmg1tZ8ewaLIrsPqruyMMs1tGd5P1fC3voV90Vr
07CSypL62eIqaK+7bPy6JxHTP03tPDDPBWZ15N8vM2Mx9co+8lPSc1g2HjQ/
PfQLyPoEm9g3YqCswdw/czAbGJmCb8fnGsHbSSHDNYELmzwGNsjRW4D926DT
KtlGiFpfnuSV/xr0VRlC3/hWaHSO0VLO6gQ/ocqTCz0dcKTc1Jk82QWK7Gnf
y0QX8FVtONkSESg0f3IOauuGW8MrWLdLewCv3+lf+lUMlk+NW2hOYmBun1zb
OTkAEw+7nCgd/cAPvS8X0DQEoeFa22Z/GoQde6KvbxaMQGAO060ncQg+lPOG
ecWjEEenNXp+GYbDAfF6bcJxKJC6+Li7/wMOhuZW5p8lUNsbTf0rYxQYUgu7
QMlHGEn4022OPwrZ/AWPCiMpyO8tTLb5PApaia7vxYFSOFnUTn1+YAwoFxfP
mI1LIer0oNt82BjwlnJEcro4cJSnk23ZY+CgHldH9cZh7vom5Rdfx4AxtRNX
a8NBc5lr6kq9caBYmkR7fsXBMSZe7ZjLOPBYqTPnDQkIXNWQmRs+DgzsecQP
xwhIvLug9YmFuqWx3lE6AVwlS7Z9K3LNH44jeQSI71/Ycmca7ZMTJ7CbCZBR
y+N0a0wAIyXsWrCEAIMssfEWJ+Q5Q+66FSRUeOScGL86AQ5PSnNd1pNgTz0f
V5iN+qmFN4k/kNAsNKoIEKI+MS9+qU+C+01ywGh+AnhMBwuhKQn9uysVpHoS
4O2/55FrTULAtwjbEjcJMFh3DlvbkvAv1/58MEMCDiqD85F2JDCuyKSYFkuA
EjZ03R/1rZqKetrd6L5A/TvqdhJErerVSrKT4ICtmg0zIyEq3IC23GwSeJz0
rIcGJJhstu6b8poEimKYSrwmCT0duy8O30QurRIcopIQc8OF8q5iEhhe/M+L
6H+mRl5JjQOo6z+5FjBBQJ/IT7dS/iNQaKMReq8IiHV/MFduhezbCfuyCTDt
ELaXeiMb5IU0hRPAbDGPKCpFdtssf0WHABMn30OcbuQTuwqivuDwoSFVp2C5
FCgpGodfCXDYWvtVmOuOnJdiFBiEg92lF84bfkeWyNrk7MSBphPZGluMzE8r
uaSIg+f7H2mz3cinIk6uHZOC360Zgb8cDpR3iyu76qUQtqPKqdccOa23fHee
FGKJEL6zD3KIrWghQQopORaOdbeRD53pFzKlkHt0qmFbNXLnDVZZjBQWrQsE
BoPIfI1365KlcGKjt1BnNQGUjIBSjxIpVM1ROzUskJNGymLQO5R6m9+reiGz
VU5xVXC4UEPvVYpBbondtd0PB0Gm1cCaEmRTT4XINzjo0idHZEXIJiufabsS
QD/NmlhaQmYkspYIAv4D/l7I2g==
            "]]}, "Charting`Private`Tag$594118#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-0.05153773576438196, 1.0145215797396219`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.25, 
           0.21914062499996195`}}, {{0.375, 0.40507812499977947`}}, {{0.5, 
           0.5910156249991911}}, {{0.625, 
           0.7769531249977106}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.7769531249977106}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.244140625, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.7769531249977106}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
           Line[CompressedData["
1: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
r38=
            "]]}, "Charting`Private`Tag$594202#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-0.5731729006378179, 1.174452216494501}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.25, 
           0.49804687499995437`}}, {{0.375, 0.4980468749997802}}, {{0.5, 
           0.4980468749990834}}, {{0.625, 
           0.49804687499715783`}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9960937499943157}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.244140625, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9960937499943157}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
           Line[CompressedData["
1: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
4vPh/3FFfYI=
            "]]}, "Charting`Private`Tag$594286#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-1.2124980483641314`, 1.1876513993574918`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.25, 
           0.0332031249998781}}, {{0.375, 0.0332031249992939}}, {{0.5, 
           0.9628906249974989}}, {{0.625, 
           0.9628906249924398}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9628906249974989}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.244140625, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9628906249974989}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1: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
hnc1zdPqQJ2Quj/0K+//35P+B3gBZBc=
            "]], 
           Line[CompressedData["
1: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
HJ0kbhb+TeanTuKrG2srMP/fkQBif+VnUdrE6pmRZD4L+sWIX0KrJ33dQpxX
HfUlCO17US6CrIc5i8dtFcTl533IerG+e2/LsUosv6dzRxCaod7/jS26SP7E
LbLe4nj9lAKIjSSb7qGb3902KkP7+u++TtbnEYpL1OEqjBfa+/1H9jM+J/GL
aPWVE7l+6Ns2jl/8SPzK82my/j/9tm0rRjM4hmmS/UFU4NwW9WpMX/up+DZZ
L/Ymb85Xk/vF5pZbZP/NMFTyIXHq6JAnOuKonlEB8UjPTw80s6Nm1IEaLC98
S8819HC23BaVWnTgePNltC+T7BtjdNEG+xeX0Nt1pJU80OrfTWzI/mjQt9Po
C9r3b9QQ2T+/reaL2luHfv3f2wtkf9JfvWVPPRkfNTNDMj+jjXQNiIPS8gxI
+b1v77qji95X8Z5Bm13SncslcX3G4lNoLr+oxsMNGM9wb9Qi6dMlQ842oh9l
zqqgr/66VXoDrS45uqJE+nuwbulpIznPKlbvQytVujr0kvTZUav2kP2x/6um
HQXjrPaF5Pwy59RlvNmEZmBV5kVrG8Yrx6KLuJVom9DKcbNO+STeyvuSm8wv
iahexmbsn93s3AZ0DfR/DUYzfFllvhq938nVPa6FrL9G2Rk8XzfXRU4WtmH6
0xmd39BnudJ7+4g13mwrQUcYVjf+QzMoMRkWorn7/n2Bdqy/d6Igh9wv6Pb+
hcRnQ0xS0Wu4VPkLO7C/ASoZkeiVs326BV1YXs/92YvogzGLh3rRRQefvbBE
3+7l3ruCZojepmWO/mOrxafWjfElk/uG6N830kfziQvonVro2af/+eb3YPku
yc9l0KM94hl5fWT9PM6h4/3Jo2qIuRutPs07NoVm+/LC6E8f6Y8a1zha6tGW
vyr9GH9oZzKAvqrBqvUFXZSuktmInksa6UkfwPiLVU/SyX3NOZH9zRC5rzpz
XUXvYBK5EDaK9fXVrXTgfZFhUsEsk3jTz3fN6KGmI2dbiM+tnKlHJyfaHt86
hvmrqiK+oRWOp8i/HCPf61BHKlrrkTxT+jjaqeeKH9p1h/rrhklMv/fq953o
7/vNf3DQMZ4kftwc79PLQvtidxNXxAgboeXYOfROoX3Ppfw6jY5uK8p7QBz+
IuII2v6aaMT6GfLeGX0qjWZPndRYO4txgW2U33hfPyHkGc8yh3Fn66WH6HrW
KLO/v9BufnvT8b2gPc7xJoJhEHzXz0w+voLnYd9s5yp29FcTCbnLM3DZoYVh
kBNN33sy3X4G+Nl+/XHYOggMDRo7M2zwvaTKO24phC6iz8Zb4X7p97pgtySm
z624cB7fTw97rzgky2O8n++/R/i+aq9TYnmkgp4ue1GM76/wJnUPIQ1Mr/K1
x/QM7i9TmZRgbbSIwliJLp6fMWICF/Ux/buRpgPaeH6ca1f/YYrxeedlrqMz
cDMjyKDVCr12mxWzOp5//J4HXS6jLTYHa+3H8Ylr3jDshvldVHJtFWdgJk2W
UnYLfVhXPl12Bqbbvl/S80cLXv59WAK/V4Tl/IkQzD8jNr9WGMfT5qL9jgiM
+/J0FPLh+0I78WNMHMYvCGdm8MxAXenIxN0EtIe80cR6PF/17Ja2fUAXqpqb
sGB75vRm731GDzMqfV6hA5v0ge6L+VjeYNMmm1/4vne3iR0vQyvtMzlCo0Pf
2Qc6vbXovfKJPqN06D8uNJLSgi6Wq/vSRwcD/Z8GQr1YXmSoMy++58Vp3z6z
jGBc/2DVYB0dHONbJp9QMZ5yhaWhjA6cIz+4IxbIeD50ls2nwzZ1S9FLK5j+
TJpm+Cc6RKVuXTPBMgS+ygEJm97RwS2dMtC+YQgYcjZmb3pFh5KKqgcuWzCe
eWPV7mg6uM/JiA4KYNyo2lTvAR2CPj14VyyO8eVCy7/+dOAI2s12Qg7j05yN
BZ50mJupNzysjHGPsyc4XegATp2h3OoYn9l0/4YdHZYZRGNCtdBMng4z5+jA
K34l2v00er/l69Vn6PDmwvxldhPMf+DkYSktOsR9HBW/dgHjeaPK9gfpQA/v
aDnpgPGUtXLaCnTIur/GpNEFrRJqqSpBh64tqnWlN9Fnn+S18NPBNrtF+sEd
zP/7UVk4Nx2sr6RZMAWj/WOqLdnoUJwV+N+PMFL/1un8PzR4xPPSyzUGfc5p
qW2YBoUsOQ5XX6E1acrm9TQ4s15VTSMFnftWQSWXBqYSy6OFGaR9X9L3vqZB
UVvef+9z0clZ3imhNHgamzenUYpWa9ir4U6DNjcx3fRqdOrezP3naXCt/+HT
B03obtOZrOM08L+gnLupG91qf/zcHhr8dO+vWTuMDqn4cH87DSriZ793TKKH
99+QYKUBR9/haL059DKz+AKNCqbCJxVciO09Yl+gE2wM6x4RX1PiPI7eP2XP
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
            "]], 
           Line[CompressedData["
1:eJxTTMoPSmViYGBQBmIQ/eXW7JhZM9/bhx1RjopZ89te80hBxqu57+0ZDkzR
Pen32/6KVFbu2aVA/oJHy97M+mX/qXWRe9Q6IF8hs0T73E/7/NZbwmHbQPLf
1k9n/WkfNLPmhOY+kPy3yvfmP+yXH4wNWn4MyGcIi2jx+24fU2d3bvI5IN+h
vu5A1jf7Zv84ea3rIP570+sZX+0FTF9EzLgP5Dd8uKuR8MX+z7rCltLnQP4D
jwfH4z7bR9tatf55D7LvjPYf60/2kglMFZ++g/Sz/XFV/GjvZaCwTugHyD6n
zO0yH+1rGOyeGIH5RxU0JD7a31tQGVAM4jfE5bHzf7Rf/PCDxhcQf4Fa094/
H+x1k+/f/PoT5H7JOvYbH+wd0/ZY//wNMv9XuFDfB/sis1uFkn+A/AT99zmd
H+yXsP1YbgniM6w9d6zlgz3bcmORKhC/wS6tovqD/ennq978AvEPcH67lPHB
PjRz5tw/f0H6NbtSnT/Yt1luvyzzD2R+0rwtdh/sd3Be5bQF8RMe/WSy+mAv
tUqgrBbEb6hqm2vwwf7+q3a/fyD+AdcvJ2U/2AvsXtoi9x+k/7eDsOQHe6fu
w7vsQPwF5VeiRYDu0/6vVg/iH2g//4rrg/3V3zKx80H8hJ9mhmxA956xmrwf
xFf49KSM8YO9xZyIk/fB6g9tKgeGQ2ZO2f//IH5DoQbDh/f2AK0qIEM=
            "]]}, "Charting`Private`Tag$594369#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0.39449222422058006`}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.39449222422058006`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {0.39449222422058006`, 1.7295802613337137`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1:eJwU13c8lV8YAHAhIUXKqMyU7JGGUh4kESpUtKRNqagfqSQjkiKbzItrhOy9
jnmvlX2NiiSkZDeQ+D3+up/v57z3Pc855znnPK/4pTvGV5mZmJiOcjIxLf+e
n109cXfHOnXzTZIOmUsX4HfmfrmmlxPqFhde5axY1AfaL5tLz18uqfNI2oYW
/1EkaQIv/l17yQ0XVEdYLeYuk1gpwYaTL0VhQTHz263xR0Qos0/Z8KUijJs+
8UvrfkVO/9Ic0n0JsOLeT+G0TgpxCJkp03l5DFpTt3qFyWaSvwnzG2bvWMDB
iOMzlLoKsoXe+KDlpiXwitza9JO9ntgmnKbWitpAleKRwe/DLSR1i2lKgPl/
sJJfa63BVAexbhLJ6jrhAKeq0+hT3t3EM9vGjI3iCG8XcsyTDT6SgqvDrwNv
OsNwkco+3uZP5PbzB88GLrnC+JR1c9/9z6StrrU6/ulTcKU5ZvLxfyFz4tyu
21w9wL67yNbTY5B4BLSejrbzhLGG7lUcn4ZIhfhpF58AL2Bb6Ev01fpKyug1
Uvu8X0L8p44zAY9HiJXXH9GzmT4wsJFnK1R8IwdUugSLr/pCvo2/xt2x72S7
fPznBAs/KHRP7tjye5RY5p40fmfjD0+Zq+1nWcfI87pZ5rbbAeAsY9AzMD1G
mK2dzq5zDYRf0ykLg4PjRD5cp8LQNwjuFBuzTFZOELVTK65bvgwGppKjj3S0
JgklOiqnNDIETrVYCq2hTpKh/xS0piJCgctzZjVtdpL0dTL1ioe8hpiGwJnO
Q1NEnp4r6p0QBhJ7HPS++08R84PnYzvjwoH51LvS/o4pMmT4tfFMXgS8/dIx
y8U/TcSGslk/VkXCrdrac23Hpoka+z1HNRIFBuu/njVyniZphRsiGM3RUBua
mKySPk1cHnX8k7xOgbADUQJVjGnytB9yPn+hwIN6Odv239Nkl4nVhqUhCgQX
mL4z+zNNhmv8/xMaoUC6fWF7L/pwytBO0x8UOOlo8Gl4dppw2r/IbfxJAY6d
fdM/56eJ7+quvPyVMeD/ZyPfiqVpErH7dqH39hjobOT362GbIdkvI8r23oyB
A/m5pd58M8Rx8NCHHbdiQJy58cFvtPb+iT+yd2LAkvvZmDn/DOkY1VQWuRcD
vS1rFhQEZsjvI1/jmB/FwDnro3kNgjNkH8eO5w1eMUBnEkn8s3mGVLrTTc4n
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
1Vs5ZtgM6LCg8sZqOb/euv6Bp+g07sXjL9FeQ209ToaYX6KiHsv5qZ3yfM1/
x7B/2Tted5bz07Dhz1/0+w5R/+X8z5jkGnA7jvt9NuH88v7YvNs3L8CIDv2v
NDVOLfff3UrZbEwHXbvTpseW98+j9S/i0Cvzj+/QRU+XB1/INqFD2Y5hlb3L
473crad2gg5a/Z5nlNHn2TbtrEJ/fbf+kDS6Vj+Svf0kHapPjF4VREd3xmVO
m9Lh/rVPnTN4Ppx4MBT+0IwOtvbMwt/RnELbPZhP43kXJrq9H21/MfkM7xk6
qHEZPWtAG/zIYNlxDveXUPP9aPT8irKTtha4v9/Jbd6PzqAuwRz6oNG/GAX0
1cOaMi4X6ZCRPfpDDN3ysnrR9xId2NbLNrOiEwUaEjOu0OH36ns1dXjenpDv
npuwxPPqmegjXTRny8bB+1Z43iR90N6DLr97tmkJ7ZrQ07YNLVvQF8t9E/NN
jarGjGY+OKSveIsOgyuzNQrwPkg3m468bUuHqvOZmzaik3+a3B9DK/Wt9VuJ
TvDNPW59lw43Bl3ap/D+iap1YLlxjw6Jn9JL6tAvVZcsr9rRQXnPBbH7aEtB
rp3nHtBhRPiNQi3ed1dybq35gH7x3/7rmegLx5uHTz+kg/lnZusw9ClP/9em
j+igaaH0/ib60KzgkvFjOrwa0NTjQm/p3lav50KHwoS+ewfxPhX571lcLfrz
gIuNNHojzzfHw664f77Z7eVG8+imKh5yo4NFhanSe7yPl/J3BGm40+Fsy268
kvG+DgGLPc/pULqGlf0F3vfBpqd/b/XD8XZOsEdjPdEzuPZWGrpxPLLnEVro
bvWXPf64H3T7b5mhY14qth4JoAOLoexnHnRqxcpUmyDcnzHCM05Yn1TKZl0s
eU0HS4GXtGNjDDKxxPnOJJYOPfcu7K/GemiHd/nBXvTYJbWnr9H/bbIvuhZH
hwv2s69uo+d3fk58QEVni84IoNlu5LtGJ9Ahefe1ketYXwl1XFYdTaZDhdmU
78JXBtFNKolzzabDnbK577NY37V2zoZy5NChjd8rio4+s3KXjy/6u/ldwWC0
9aW3DlG5dIj8Y3JhB9pPKMqwKB/rmd/hey2xXnzv++TPVDEdUn5pb6n7jM8/
0NK/WI3jf76j4wLWo35HaqeBgfPTRd//Getfi7tbu0rRG2s6++PRSmHOxWqd
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
H4Y6yxo/o7PvSvduTSBiMaTi5zQ6qGvf7NlEouzuGNTI8h6YTtMP23omESZ/
VUPX9egd70+KRLwhOfS76S+2oqvGlL9VJBNJydRfd3eirb7bbm9OIZffFnJx
aqMF5L5ptqUSj/OHmn6eQPOGxTCG3pLru1vulV5B6xlp+31OI/KqPVU9dmgb
Ibr1j3SSeenzn3Z39KP5tME7GWRFXunC4yD09V8plwczyO4dgqmPEtB1hbFe
FzKJdJctmOa9B+e/ak+uNGeSFfF6jz3o2P5WabXUoSwSH/7rxdVu9PqDP3bm
ZpFVxRSnLSP4fJWk1oNN2eQoS/1mlTlsb/lvV8LTbGLy33SEOMcHcL5XPaM/
mE0k1k6ME8EPeB79T6J9x2P5tQEAlwpJ0hBJRVGKHyKh6EgZCUmyQpIZipSk
rCKyIkJGHitSyYrHqFtGpJJEKAnZm4TKeK/ref/8fs65z7mus58P/BdeHsyn
WuvthnJ2gQe2da1NyKe0Sn++85GH+rlk47WJfOpR/Tf9NA0oj0t4NKL+gnq3
KiPX7TT44zLPlNgXVJaLy+Que6h/nP/w+p8vKFfml23iN6B81ZXgq/8VUHNF
y5+sCQbPSL8avFBA2ca+366eAB6PmrXPKaASU2wcxbOwvi2fxGgBFdm0JG7y
JXjNjGzFtkLqgiSfC/tHcEyWk5xBIcWSv0eC6QdYwiX8x61C6rz55tK0UWxP
XSLwSSGVJ+P/6+EimHVbf/+nQqpYepzTdXUb3Hdv12pMFFL69azFxehC79ga
8KTDVqtF9J+uetXJQmrXI+2SAC7w5pijyr8KqRjeZzZxa8APT56X+V1IXZm3
KytbB74SYsXxp5CSrP7pvJIXrDK4w4OJTqUbNzfSBMAubr9tOelUr5oU6Ub/
l77xE1hIJuTxTkGw/fVRudV0Knn1Yc8sdNXyTFYuOvWwMmtn6TZwopxt0ho6
dV/8tnuzEPjX5/mq9XTqFrOMAOcusGazy2c+OnUm85799T3g7SUlC8J0SinS
Q6sYXeaoorWDTm3ztJX4g/6hdicO3Hvi4C9XKbCfLZHdSacu/BlwvyQNfrfM
yl6ETt1QPxRoJwNOWB/xZjediu0dyzCQBye1W6lLQHn918AoNPMn8VCwWXGV
QxN6MijnM3hbaJzkyf3gBd1uU0k69VhGja59AOzwceHCHjpF931YraKI8U0u
85WmU03btHqlD2E+NoeuydIp4+VdG9zQgZrmJeCOPle1UrSstNg8ePApLeOI
MlhgqtZLjk4xyU6dP3UYfPX7dh95OiV2LG7MVQXcwaV0+QCduukyMFt0FHxm
Nxs/oVNs+p67FtBBS8tOgkPk1hkra4DX2woFgWPmFUpq0WsrJmfBWf5hHt+O
gceM0uqV6FRrnCzzvBZYvs3MSZlOSVb6rVTSBX9MX+GsQqcMUzLzvNDe0ppx
YJ+bH09TaL+HKlXgBqWNTw+eBPOymfKq0imXl081FfXAFo2bS8AFBZ9D9uuD
d73unlSjU+33Z2Xc0Wk9EbzqdIr1yub2IrRy8R9FsKG0jbi8AbjYbsAf/Of5
3zpZQ/CLUEPeo3RK4bEgl4wxWM3CRVSDTlkGqNIvo60kgzXBITb25vnoDO/T
juB24RfZ0qfBubGbs8BeyeonpEwwfksJsWN0qjzu4j0JM5yPitt8mjAf7pH7
L6Kfn2CRBa8zLurKQl+RVjgJtuRdKi1+BpzXXRsIZrkf9VnMHHwx22UafDT0
5frdFri/zo5TWnRq/SvhG7Zow+0mzeCOkZCfj9BhQ96jYDcts9zt58BCt35v
0qZTjzgWj2+2BDPdCnQBX1KwKTyNVtv1KgCs6PBxSyz6QllmArjxXeLIBivw
TF7WGzBzkFIQlzXYzO4s93E6VVecMamN1lIzEQE/GOQyDkGXLK4+AJbU6BRh
t8H1P510Bmy24uabpbbgnKcX08Al/hVLZuwwv/7n23Xo1O1CUTuZ8+BkcVkp
sG5fRL0L+pbQVSXwoKpl4jj6w3pBEzAvy3LFQXuwcAl/GLhbxjFVxAHPJ2m7
ePBzq6aVNmi66oUMsGpV2tefaBfJZAp82VfV7bsj+FFN9iBYKT/rx6YL4NM1
r6fAK7s3qBmjt2sFLYCTD/dxN6M/tqqtOQHngctxD+6L4PG2/Xxg+ZTC7pNo
QePebeB65oC8erQM3VoaHC81zrfaCddD5IEDYBsLw5taaMcfNcrghdciJ2qd
GOuV4wS4diKMzuYMHjxcYQCOEvyzVQ09KiVlBv7P5+1oBfrcXvnz2P7jb6ms
l8ADr9ScwBwNI8bH0FWjS1zB1/8uct1FHymzuQ4e3La2ugG9b881b7DRMSGP
DS5YX2GfH7jGZZ+0MTqh4+EdsGy8+kACOmxjXgj4UaVxYic6t+tSOJh7xOGU
8GU8P/a3R4J9ub1W2qGj+H9Hg6cUw18/RZ/yK4wFn7NOuTqOlrwknABuCH3x
394rOD8/DiaClQurf15FK71dmgTO+dH6oAT9TuxyMliAbfj4IvoxS1gK+K7k
wvLDruBtJw1ScTwNuUpvo8+srkU7+my7VItOlO1Htz3eK8J5FexRk4M+1qDa
fgKd/2oHuvivYeR99OIGNWx/93Z7jVb0yIe12P+DYx5Mm93wvvhxhwZmu3y3
wBzdc/TpQ7BbfJJDKvoGm3s8uK8yb1s/2oH31wOw/khVi+g1cP8VHhyfKu6W
0Ito4y19EeC9BweP5KHdV1mEgVOs5/5Oox8pBQSD197lzNnvDtbNNwoA+xQK
2Hiicy2/3AKP/5DaXI7eenzBE1wnaXDn6HXwfMXxy2BFIzsSgj6qdu0C+KnP
9d/16NszWrbgoIbEs4Y3wKV1s8bgv39zeOLRMWN1J8Hnt1d++IEek9DRBKtf
7pe38QCfXzypAF62Yc9aV088H7zNecEuBw/XFKFXKNzlBHdZn/KcR/vO2S4D
vy68NujrBQ69sXkM9punUXl5hDe4YUtgGXjEp9GtGR1A48oHm2T2im/yAXNx
KKeD9/9jj0tG34lICwbPxJ90ybkJZmW5eBLMXv6bNo7+7aurAubvi66TuAX2
bB3ah/t/T9uuLPSKP2QjOKDKsiPTF9xe7fgVzqvYQRbOQfS1x4tvwU9XPz6w
yw/cdUytCFxvNBKVjq54MxMF3jh6RSv1Nrhe47s2WGwd7/Wf6Dvd/Argg3LF
Gdv8wfy71u4CW9xcWJqE7sjYzAzO3OBfnBCA5+U+ejacvwdIzM7oQPBb2T+L
cL5rW+4/9QUtqHyvH2x+p+0mdxCet+876sG+nwXaI9CHDR7SwO9tHkeGBYOX
L8QqgE3DipcEhoI1D8ZYw/3i1dn27cY9XF9cYTfhPtu7KGL4Gv3fU64z4EH+
K43LI/D8NZI/ANY3XPUhFF3WfnMS7k+xj4qvaJF4fu+ZNgF/LX1Iq4wCf153
WhDu230x5lYccWCvCBZbuN+HXzzt1EFbsd+SByd/njW9j/63K50dvGp1uP6W
eHCtXu+TI3C++71Wk0zA/ThHBg/TqXCXbbv1EsE+L0314X0xrN09GpcCFtgk
NnyQTqnYlXV9Q6tl2xWAH96K/7IpFc+7TiNv8HG63qs4tOwq3XXgXMGqkLg0
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
7UWUdXCt9zOGdf9t7iqiYlzDjn1keHpIsreImtPg71zrhT6XojVaRFX8kuaI
ZfinmcVCEaWrcs4iwxtNy5jdXEw59b/mrLqJPhDQZFxMJTf4t/Yy/HP5HbNi
qrFUK5XtFtreVt6imJILb5XXZDj0a5hdMbUoP2H5meE6az63Yio0SKCk0/f/
+UdHFlPPxL1sFm6j7Wzk3hVTkjyrRjf7o99OaNcVU/mLsZcVGd5UavGpmCqu
L/C5wbDR6pvNxVTNpdG4vwzzPEr8WUz9LDCtnw5Ap6vo/yumNhIF+bFAtMPn
LJESKn5nLcUZhJ575iBaQglwGaqKM7zv5U7xEmpHp8tJR4ZV3e5Ll1B7bz1x
HGI4WP/4wRLqeDVfcl8wY3wsFU6WUH7H/7B3hKL3qP1xL6GM97bJMd9FHzwX
5lFCSW6krIUYZt4l5F1Cfe3yLbdl+MfzQ34llLgrl/sEw3MJendLqJb4nQPM
4WiT+63JJdTuwVPVwhFothKT6hJqsU7utxrDD3YHvC2hGvM2bT/PsJxM9rsS
ysuj0zOL4cKN0x+hnMtxn2wkunytUUsJ5SHrm6Z+H51rer2/hKr3zb1lH80Y
Tz5xllJq2sbUMYhhqbt1rKXU5mNsBk8YzlzisKKUOr/GbPcQwznfEzhKqeUP
V3w6H4Nmsf2+tpTaX2i+5fwD9CWnd1tKqbOxK9kCGR4POyBQSgV4FEw8Zng2
I0OwlGo6zFE1wPDfl9eESimn+kJ7u1i0hvPMrlIqbYCzyDYO/TndfG8p9f59
UXIAw6/W0mRKqcnnlsEZDC+52LavlFJyLT7Tz/Cxv8fkS6mvzNYstvHoSR2W
g6UUF//LkzYJjPXyuE+1lNq3aKPoz3Dq3G+1Usq0a+3OdIb9Diw5WkplZtj+
7WX43jXOY6WUisz6JOuHaM3hpcdLKXdt+1GrRPRRfWN9iKe1UNaPYfUuKQMY
L6tlPqkMa11iMyylTt9IWPeT4Q0JmUallELmRzlzGtp43TuTUipfhv+mF8NR
L4JMSymx17bvHjLMZHTUDOajZYnZd4Y/JpWcKaUWlu+9ZZyElthzw6KUcg33
fn+N4SsNQudKqVH+D9wPGP7tXAv+IW2d0czwwUwOq1Kq7GzMB71k9PPfDjal
lNxI94bLDD/xnAdnu+0xj2D4L3OQbSmVdLd28hPDAnPxdqXUzZdzPMdTGOfP
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
JMxvaZ8k3/3/dl7HSQ==
            "]]}, "Charting`Private`Tag$594411#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-1.2125020078140254`, 0.9980468113571987}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, 
       Ticks -> {Automatic, Automatic}}]}, $CellContext`plot2$$ = {
     Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.5, 0, 0.5]], 
            Line[CompressedData["
1:eJxFxw0s1HEcx/HLqVVkc54i5loh89h2jLT7p2W4zkNcCReyhYsiwyKb85yH
VpkKlZynZB5CCue0cbsQIk/hLpfHHc5devCQ2/Vw+v4+23ufvQ4HR3pdUcLh
cB5/+vvqeWvMZwEhZNy/BWGEkEMMTlo+9t/468fx7WnlYP2D+/mBmtVg286Z
V/jyenBpzvPBJZuGHbOwY68FvOHCRnCdUIPTLmsCk1QoTRWXm8H6zXzp17w2
8O7ASEsy9y042ZiZzb7WCWY+7Zb5bHLBxrkDqV1+PHBfwsg+q/Z3YMPo8b65
iG6FT3Vi0YzJu0UGPWBekMDLcwBZ96JQa09SL9jdxpXWQOgHpxAa8+iVH8BK
ZhISy24IzKWmEzWLP4JNjKPMctyGwdlyP1slGfLJiEE2hzaiMHEcW/3k5Bhf
g1zixOaRlEfB5xqtqVJ/ZNV50i2XsjEwT8e+umRpHFwlKzZ66DYBzppVZuW8
nATHaHuEO1yYAge4Ftos/0IeCe7Q63LnK+w5h7kmzsqLWMgdD/bOR39HJtVb
9FKcBWC1yl1ZRrmfwaIno864oWlwbFm6aXuBEBx3k2i14fIF/C3FvsX6MXLU
HS9Hhhi5njCdnq49s+NlbPVReC8LQzY32FDrCEMOL03znryPvHlvUUXvzCw4
M4nC9f2JXGDbr+5TMQeuEnsE0mjzYAsRPVdcgdw4x2jNWEeODZZ6eBMXFB5c
xeyEcQuGrshbl2SJKzeQOVOpGq1FyP41AxptZxfBm4m6muxtZNNigYWJswhM
1gjNfFGCTLstFZptIU+fbj4gNl7asQS7Kos/UeeN/OMNOTSSicyMxudb1yJb
Gtny1+jLYP542NFm1RWwOWe7v4wmBjtEsalayciUIwnvM2qRfcfsKBsTyGFZ
692MPasKSyVYhiSGRw1ELju/1mXVgqw+1TOmQ5eAk4JYIrkc+TfRkrgB
             "]]}, "Charting`Private`Tag$594455#1"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
         DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, PlotRange -> {{0, 1}, {0., 0.998046875}}, 
        PlotRangeClipping -> True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       PointLegend[{
         RGBColor[0.5, 0, 0.5], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 0], 
         RGBColor[0.5, 0, 0.5]}, {
        "function to approximate and its 9 Bezier control points", 
         "2 Bezier control points from Taylor series at 0", 
         "3 Bezier control points from Taylor series at 1"}, LabelStyle -> {},
         LegendLayout -> "Column"], Above, Identity]], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0., 
           0.001953125}}, {{0.125, -0.020140438988096365`}}, {{0.25, 
           0.18578559027778213`}}, {{0.375, -0.1435376364087333}}, {{0.5, 
           1.0827876984126974`}}, {{0.625, 0.9463340153769844}}, {{0.75, 
           0.9891896081349203}}, {{0.875, 1.0012602306547629`}}, {{1., 
           0.998046875}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 1.}, {-0.1435376364087333, 1.0827876984126974`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {-0.1435376364087333, 1.0827876984126974`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0., 
           0.001953125}}, {{
           0.125, -0.020140438988096365`}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.125}, {-0.020140438988096365`, 0.001953125}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 0.125}, {-0.020140438988096365`, 0.001953125}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{1., 
           0.998046875}}, {{0.875, 1.0012602306547633`}}, {{0.75, 
           0.9891896081349141}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, 
       AxesOrigin -> {0.7460937500000001, 0.9885860770089216}, 
       PlotRange -> {{0.75, 1.}, {0.9891896081349141, 1.0012602306547633`}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, 
       AxesOrigin -> {0.7460937500000001, 0.9885860770089216}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.75, 1.}, {0.9891896081349141, 1.0012602306547633`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[
      GraphicsComplex[CompressedData["
1:eJxVkXs01HkYxkelRYlGOZUslj3bTWm3dKGeahqXMeTSqkgundY5LisyFlkm
g1AuB4vpNm7ZtWKbybIkLSqlm2o1qMhExvxmfl9Rbl3s7Omvfc95z3OeP97z
POfzmgWEuR+ZxWAwuOr9T/8/ftDIpVzs1wtRPtVbxZ7PR7eex4FrI9Wo/iIo
NHS6CIsHOFMD0nqkN494qrgSBMLHcqC6BZBZceddb0IdXHUiBHfgy1O9jtjf
hiux33dKzTtwWNomXS16iOft2UFL3zwBLvzg4FzwD8wNT2x3vybFhg+MeZ1h
3dBvHC1LdngGFjkrmDv9AoNDm0fOMPuwSi7TSwzsx921Es0vd/WjfqYIsTmv
oJWweU2uTIYUmSDTLW8Ql8rXMh9kD0C38WB+esEQzCpepY7rvIb1ljk393CG
YffhzG6DtCGYrmyv4igUWHTYJuSsTI7MdTd8wu2VGBnP2jmlrYDcjTM15akC
80+tW+GWFCYKLWu1WTRs7xjWFZsrwWl9cKxeQUNrTDyds0iF6w+bhNHBBHaS
eNcAhQrC3TaaTQ0E/LcbBYHFNI4uNvqZKSN4WGlgYeBNUDautWD2G4LP3Ec+
6wgBt8CvI55Kwenfxj1c3I6ggFJs6bS+COPlb+v2i3NgfL/x+bdRNZg5ek7f
bLoC/l503ulKCgt0DI20ztModLjEYYuUWKvk1IrWE5TMH+vWSVShweXQ5chC
Aq0V1cPn7GnkxeQoFz4m2L6DF5c6Q0MgSd/6o1LtFZ+eKKoIYkuu+mao+00m
GxxwaOQhoTX10aU0b7y0tQ4MaykCs5TdE5eYhv4EPrVMIUZytGlMBOsiQjwr
2lihFETL++8Kw2nsfeG4gx2gRO5j9oVnegSJ9AHReycVulY5iX0EBMynok1R
S2kML7QxPtxGIPHLb5Z20PBrWpPJlBO0dcjnlSYRVErmWJeo+wQXDLV26ebA
aFtqygnTY3DfIz9uMVqBl8VmG3htQmSz9G56yCm0Z023BNykMe3KLfijR4ns
xx5KE1d1XpN/w6NaFTSdcuJ7fydwpryChyJpfHWbTqJ6CDZ2jvrmWhKI9jHK
9xGCpJaadg0pgdXJMZtR9X9MF383nGF2BPTeevkuO29YsLZ9/c7+PI47tv9t
G52EVTV9f/VUXca4uay7V78U6WJt39POFKJ8TO7VetG4cKqrcQVLiYSOW111
H2nMTbM7ccxKBU/+B9mtnwgUjKAxnVk07ss2HXRrJgjimZlvqafB2Bxlwhkk
uP0NN20wjCAP1apgNQ//ZborNfwykFgsMp4sCUGIsbFez6lfYeu0qTN3ST6W
nPHvM2mn8LZ172i+mEbZ2Muda64p4R5J59ntJIjoD9+af07Ng6tt9LGYoOid
pPDgIRpsTXfUPSWYyx6aXWxIUDtlobGAJnDU1VfFthDEZDlXOavzvVb21Yuv
81HaEVgSut8P8XFpq8utaIRdnmFP3COo2Pc+1k5OQ6Nwz7NwBUG0d5bARUiw
7WpddKX6/oZv04vkzF8w8b7hQZZeDNZNphThFA2+QfDyK70EpWUTJGA3QVSN
sNlNzf88bzIykSLghcR94qv9v20Oa5U=
       "], {{{}, {}, 
         Annotation[{
           Directive[
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[1]], 
           
           Line[{1, 52, 35, 69, 26, 61, 44, 73, 2, 53, 36, 27, 62, 45, 3, 54, 
            37, 28, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
            55, 38, 29, 63, 46, 20, 56, 39, 30, 64, 47, 21, 57, 40, 31, 65, 
            48, 22, 58, 41, 70, 32, 66, 49, 74, 23, 59, 42, 71, 33, 67, 50, 
            75, 24, 60, 43, 72, 34, 68, 51, 76, 25}, VertexColors -> 
            Automatic]}, "Charting`Private`Tag$594624#1"]}}, 
       VertexColors -> CompressedData["
1:eJxTTMoPSmViYGDwAWJmBlzgg/1Aie+cFrp1p90duPwSk1DVxQ8e2jdstLP9
VvQQoW9uU6uw1F37+M8bvi0/+gQu7iQ5T2hDyTX7vpSQDyX3n8PFn5iFy4s5
XrB/ccpwkrvBa7h4whWL7Q/tDts/vvi9c4vxO7j4hYdNCduPrLGnl7+Hpzi1
zB31F33ESdU/1N2PS3yo+2uouH/wmw8AxOiHYQ==
        "]], {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.9982507093207925}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
          Line[CompressedData["
1:eJxVUGdQlAcUPFEYRC4oGg6DCgQDGogCpwhR3DGiIDBoBIGEopw4NhJABKM0
TTgQpRcV6VIUhKNJOYwkFKliiPQTpSlc+77v6GUCkwvJn+zMm52dt2935mmy
PE+ek6HRaLbS+Yf/jzOY8TVPrQ65iqXTlV+1r7P7T4dAobHoloqBJQh9kYjR
FAU900aVtbSjmFzZJ2BP+pw/ZWIFb9skM0FOEu4xapeV2+wwueJPw1pHp/Br
zDMwDks7pjWdiYyvS6xldS5gduU+G7ZWcfYlDG+saisLj7B+DKGmV6Xj02tQ
1NDwc92UD/nXHt227sFQ9Y1g6Q8UoPHn1BK3LSHQaZ23kckuwnW25EmYUjiS
o0u3CveWoLa14v5kaBQ0q/kbO5NKkWspn0VHHL5UOkXLcStH8sZQbQbxADlc
rtJ8YQUusTnjO5xSoOG+Td1qsRK+pk9jihbSweCOm07EVcMx+NaRkaEsLLJu
+Js2/IY+9xf0tfkF2H88mifL/h0Wvgyz2FVFWPJwmxPr1GLzpvami+XFCHoi
a/D8hzok5bI0lY3LEKBuk+2w0IB79JMlqslVUOGd+1U2uBXen504e5JXh4CE
fSbOuX+Ac9DlmFZ2C+rpzVMb097ghGR2NKuuAzY+PuoSp27ozXo2dbzuQkOf
f2CGsBc98afc2zl9CMk2v3q3mIcrzX4sCTUAppdXqqX5O/gYVuxquDqEURdV
Ndqfg9BtMU9MZY1gpq9Wdd5iGESO0njHjx8gktE25cWOQF/J1JA8Oga5IVHh
d7OjeD/EZZXq8bHDZsLCzu4j4qzveOqOC7D/wBdLVQ/HoBrO9GC7iOAu2We6
0DiG1toBS/lIESKyLQNNpsbQFeprU/lchH5FryWu1Tii/dOf3VYR46d31UvV
f42Ddshbg10rRprb1E15bT64uReHLMfFqP+ou8b+OB/aN+h7DygSWE+mKExk
8vEidOd8oi0BoyvdkQfb+IjR7u6c9yXgPEvfEDHNB/t64OcB9wnkLQcxdMwF
GIou28PrJcDkHjbj+wiQf+FogskCgRofee+8DAEUX1ZeDdtMopsf26q7KMCm
AqbuR3sSrln2c2JtIeg1lh0SHxJCF7XtHFshxJMLySPRJGid2YH6hULw1BR1
fRpI5AWXKGn2CxFKHa5PHyBhr1eTuUFWBLNinbdVUyQ47N6Xk84iGDXHahVv
o+Bo+MFh9LYII37ei1GGFFYPSgSdz0Sw3B2f63SEwvfGCp+UK4oh0yYU1J+n
IFd+YLR0rxgL656an/ajwDHwrCp2FYPhcf6Scog0j5MZyQkTQy/pTPlgjDRP
t4tVUCzGtMEeQUuK1P9Yzji/Xwz1oDKdrsdS/3YT+hMZAqpn38ytKqVAy7w8
kqNL4BXBOebwnEL+1rTKLDsC+q0lN/rqKXA7nI0+vUXAMaiZ0H5FofkXtfLQ
QgIZTVWXb3dS6DXiMef7CbyvjXJaw6MwJnhQelGOxJ3l9K5HgxRmUxwM3hqS
+OYmO8fjA4U1J1SKrU+T6Ok55HSZT0F5dfeumrskHGQSLPJEFLQq4gt3V5EI
bbgWaUBScMVw5c5hEjFajx5KKAoPm3fVaSlIe2aWz++ckPZ/G/BqK5PCcfP4
9DGpXv+2pYfhTOHQUn0ic5KClTtjeAObwhVSbLNFqsMId9E6DoWBIyrsQqm/
3q90RraXQntic+G0RPqPFUj+Zan+G6cRois=
           "]]}, "Charting`Private`Tag$594647#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.9983156132802052}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.25, 
           0.18172557043650572`}}, {{0.375, 0.3835915798611078}}, {{0.5, 
           0.5854575892857099}}, {{0.625, 
           0.787323598710312}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.787323598710312}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.244140625, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.787323598710312}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
          Line[CompressedData["
1:eJxVUGlQU2cUjSCMgEjBJahFQJClWBYRxSn0tOMCFielCgYUQ0VEndoSBkUL
EcaC4t6C2BrLLhTFECCypg5WoTUFXBARCItCWJKX9/IBCkSE2pT2T8/MnTNn
7rmrbUT09v16LBbLXxf/8P/xJcaP+mVJU44gShRsnsbn/qdT8G5Dk7vV57vA
uKvV7AeX0JCy5Lejk/swNpvPgEBmc6v7WTRidgg3qQqFiDkbc0Wx/jjGZv3Z
OHNvyu0p7yS8U7O32r3Og3BpxvDuW6mYmK0vwL4MkXEzuYQ5TbfPXthWhJRp
TlIidRnzbWzieIuKAeOf7Ljyq7A8eiHCvVuEVtd5BwS+2XBs1HL0CkrxSVmL
YJ1BPn7+XmJFeZVjQES7mrxfCFupcmGrUAKvxpxGJe8GPjALZhXurUR+oPpR
bEgpCmtrzbQlVbibdVdqGFkOm8gV1gFT1RhalhvJd7oNdu2w72i6FKqkszNF
LVWYiohP8G24C16Q1NkhuQ4Ca04B900D+pNL7MrZD7BEvv+OQVIj3Av0lvHD
HkOQsX5D2C+PYbK4du7A2lbUm8peLcx+ioZj3d89SXsOTmys9cjuNhxO3+o4
cbgTDR0JJ3KpduQmjpf+8EcXUgr8jpwvk4OWNE3JrXrhyednfebXAy0TW1Rq
/RKKPZbLWS0vMJMXLalY24fxjnuWWv8+vI12jpqf0A+1noOvPK0fa4tMA+0f
KmD4Ul0SOqGAT6Z4e/e+QThxRv2DggYxEdK1+WP2MD7yWTVTc20Ii5ryG9vu
KXG8RzojnR7G6ncqb246hZt/JbId/VRQKm4ZvV1Nw7N24yZlrAr2LQqvb/bS
qIudF3MzV4WhFk4VlUGjTZnW6DKlwumQBaI7Whq86zsnaQcKxo7DK0edGFB7
ltuLd1CwuN9jxnAZsFoLTriXUJA9PEimyxncTCo3s+2koM+7rvywm8HO1XV5
5gZqRB28YKudq4H4VPvvY2FqWJ6zvr9quwYhawa4ijNq1IX23oiJ00D/xYiq
tUKNjgOlrx2FGuzyNl5QOZ/GNardR9ypgWGlj0LiRSOgeU+FYFzXzyO6poxH
43X4ZMojM4IQcd5FcSqNH781i8lxItB3eRYhKqNBXan6lAaBuMjQu7iTxrFA
cYckWOe332B6Q49BTZDRxrFDBKy8r/oLXRhocyKaiwUExVbZ1deDGDSNiC16
LxLUPglbt/gkA3X8ud7H2QSy5OWVp0sYLFwfnjBHTNC+Tu6p7WSQ5e+oiv+V
YEh1VXLIUAN74UDclgcEE5lcj641ujtE2wb5LQRzA5eUbQvXwHTpxXNGcgIL
/TbXuvMaxK9wPbayj8Cu6nKJW40G0zLLzCdDBDz0VTv3acAcOXz6JUVwTeZ6
386YYMuC8fRBRjf/C0GzlSfB12ma0ElC8F7Xn8/ZYQTeepvfuI0SBESy+8xP
EfAr6j1EOp3KRKpNdHu/6jE5dV6n6+Mk4wbtBOGy4KCREd0/ZjHyL+v035DV
TzE=
           "]]}, "Charting`Private`Tag$594709#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.9982510539972633}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.25, 
           0.48452458457340886`}}, {{0.375, 0.48452458457340886`}}, {{0.5, 
           0.48452458457340886`}}, {{0.625, 
           0.48452458457340886`}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9690491691468177}}, 
       PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
       Identity, AspectRatio -> GoldenRatio^(-1), Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0.244140625, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {0, 0.9690491691468177}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
          Line[CompressedData["
1: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
inn+3RPk/3YF/xdH6jyx
           "]]}, "Charting`Private`Tag$594771#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {-0.006579847930766957, 0.9984813505061726}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{
           0.25, -0.020140438988096365`}}, {{
           0.375, -0.020140438988096365`}}, {{0.5, 0.9891896081349141}}, {{
           0.625, 0.9891896081349141}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0.244140625, 0}, 
       PlotRange -> {{0.25, 0.625}, {-0.020140438988096365`, 
        0.9891896081349141}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0.244140625, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0.25, 0.625}, {-0.020140438988096365`, 
        0.9891896081349141}}, PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag$594835#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {0., 0.9984848152653892}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1: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
            "]]}, "Charting`Private`Tag$594877#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {-0.015192278579402748`, 0.9982084901126629}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, 
       Ticks -> {
        Automatic, 
         Automatic}}]}, $CellContext`ptPole$$ = $CellContext`oldPtPole$$, \
$CellContext`range$$ = {-0.1, 1}, $CellContext`recomputeCoefs$$ = 
    False, $CellContext`recomputeTaylor$$ = False, $CellContext`rightM$$ = 
    3, $CellContext`rorderReliable$$ = 1, $CellContext`show$$ = {
     Tooltip[
      Style[
      "threshold", FontColor -> 
       RGBColor[
        0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
      "piecewise constant with one jump discontinuity"]}, $CellContext`t2b$$ \
= CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQBUAM+cAhebBzLlgP0nFE4gWkWkezJwb9re3
5QLRbqh5k0g0D2bOA6g5p6HmbLKXveIIRL1Emgcz54n9dpAxt69B6WNw84hz
H8ycF/Zg1SoP4ebB3IfqX1zhBzPnDdw8mPtg/oXQN+DxAaHR4xdmDvk0AHq2
Xso=
    "], $CellContext`taylors$$ = {{0.001953125, -25.7741443452381, 
    538.3055555555554, -4274.991666666666, 
    17162.161111111112`, -38200.53333333334, 
    47633.777777777774`, -31046.704761904755`, 8214.755555555555}, {
    0.001953125, -2.9534151785714275`, 51.15343749999984, -307.8952777777773, 
    1064.5872222222167`, -2181.084444444456, 
    2603.875555555542, -1665.8692063491947`, 439.1822222222214}, {
    0.001953125, -32.2819568452381, 586.9592013888887, -4004.7624999999994`, 
    14265.786111111105`, -28997.86666666668, 
    33761.77777777777, -20892.03809523809, 5313.4222222222215`}, {
    0.001953125, -73.06424851190478, 1433.3053819444444`, -10587.77638888889, 
    39167.858333333315`, -79855.82222222225, 
    91220.26666666665, -54740.92698412698, 
    13437.155555555553`}}, $CellContext`vals$$ = {0.001953125, 0.033203125, 
    0.142578125, 0.361328125, 0.634765625, 0.853515625, 0.962890625, 
    0.994140625, 0.998046875}, $CellContext`whichPlot$$ = "monotonic", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mpair$$], {1, 4}, ""}, 1, 
      Dynamic[$CellContext`numPts$$], 1}, {
      Hold[
       Row[{"Number of coefficients known: left ", 
         Dynamic[
          Part[$CellContext`mpair$$, 1]], 
         Manipulate`Place[1], 
         Dynamic[$CellContext`numPts$$ + 1 - Part[$CellContext`mpair$$, 2]], 
         " right"}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`matchName$$], 
       Tooltip[
       "data", "Truncated Taylor polynomials match data;\n estimated \
derivatives and Bernstein coefficients may be wrong"], 
       "Estimate function based on exact "}, {
       Tooltip[
       "data", "Truncated Taylor polynomials match data;\n estimated \
derivatives and Bernstein coefficients may be wrong"], 
       Tooltip[
       "derivatives", 
        "Truncated Taylor polynomials may not match data;\n Bernstein \
coefficients will be correct"]}}, {{
       Hold[$CellContext`whichPlot$$], "normed", 
       "Estimate normed function or its monotonic integral?"}, {
      "normed", "monotonic"}}, {{
       Hold[$CellContext`show$$], {{
         Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
         Style[
         "uniform", FontColor -> 
          RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
         Style[
         "bimodal", FontColor -> 
          RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
         Style[
         "threshold", FontColor -> 
          RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
         Style[
         "bounds", FontColor -> 
          RGBColor[
           0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]]}}, 
       "interpolations to show:"}, {
       Tooltip[
        Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
        "A(left + right - 1)-degree Bezier polynomial using only known \
coefficients"], 
       Tooltip[
        Style[
        "uniform", FontColor -> 
         RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
        "constant"], 
       Tooltip[
        Style[
        "bimodal", FontColor -> 
         RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
        "piecewise constant with two jump discontinuities"], 
       Tooltip[
        Style[
        "threshold", FontColor -> 
         RGBColor[
          0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
        "piecewise constant with one jump discontinuity"], 
       Tooltip[
        Style[
        "bounds", FontColor -> 
         RGBColor[
          0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
        "Tight bounds under the assumption that Bezier coefficients are \
non-negative."]}}, {{
       Hold[$CellContext`funcName$$], 
       Tooltip[
       "binomial", 
        "a binomial distribution with parameters N and p.\n Illustrates \
fitting an inherently discrete function."], "function to approximate:"}, {
       Tooltip[
       "binomial", 
        "a binomial distribution with parameters N and p.\n Illustrates \
fitting an inherently discrete function."], 
       Tooltip[
       "pole", "N uniformly-sampled values from a function with a pole in the \
complex plane.\n Illustrates fitting samples from a non-polynomial \
function."], 
       Tooltip[
       "network reliability", 
        "the two terminal Moore-Shannon network reliability for the toy \
network illustrated.\n I.e., the probability of getting a message from Source \
to Terminus when the probability of transmitting over each edge is x\n \
Illustrates tight bounds when Bernstein coefficients are guaranteed to be \
non-negative."], 
       Tooltip["Ising", 
        StringForm[
        "the partition function of an Ising model on a circle with N sites in \
an external field:\n ``(T) =`` n(s,f) exp{`` [s+``f]}", 
         Subscript[$CellContext`Z, "N,H/J"], 
         "\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)", 
         2 $CellContext`J/$CellContext`kT, $CellContext`H/$CellContext`J]]}}, \
{{
       Hold[$CellContext`ptPole$$], $CellContext`oldPtPole$$, 
       Row[{
         Spacer[40], "position of pole in complex plane"}]}, 0.01, 1}, {{
       Hold[$CellContext`mPole$$], $CellContext`oldMPole$$, 
       "number of samples"}, 2, 100, 1}, {{
       Hold[$CellContext`pBinom$$], $CellContext`oldPBinom$$, "p"}, 0.01, 
      1}, {{
       Hold[$CellContext`mBinom$$], $CellContext`oldMBinom$$, "N"}, 2, 50, 
      1}, {{
       Hold[$CellContext`mReliable$$], $CellContext`oldmReliable$$, 
       "number of long parallel paths"}, 2, 20, 1}, {{
       Hold[$CellContext`lenReliable$$], {$CellContext`bReliable$$, \
$CellContext`aReliable$$}, "length of short and long paths"}, 2, 20, 1}, {{
       Hold[$CellContext`lorderReliable$$], $CellContext`oldLorder$$, 
       " strut(s)"}, 0, 
      Dynamic[
       $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], 1}, {{
       Hold[$CellContext`rorderReliable$$], $CellContext`oldRorder$$, 
       " cut(s)"}, 0, 
      Dynamic[
       Min[20, 
        $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]], 1}, {{
       Hold[$CellContext`hFracIsing$$], $CellContext`oldHFracIsing$$, 
       "ratio of internal to total field J/(H+|J|)"}, -1, 1, 0.01}, {{
       Hold[$CellContext`mIsing$$], $CellContext`oldMIsing$$, "N"}, 1, 50, 
      1}, {
      Hold[
       Dynamic[
        Panel[
         Switch[
          Part[$CellContext`funcName$$, 1], "pole", 
          Row[{
            Spacer[50], 
            Panel[
             Column[{
               Manipulate`Place[2], 
               Manipulate`Place[3]}], "pole parameters", Top, Alignment -> 
             Center], 
            Spacer[50]}], "binomial", 
          Row[{
            Spacer[150], 
            Panel[
             Column[{
               Manipulate`Place[4], 
               Manipulate`Place[5]}], "binomial parameters", Top, Alignment -> 
             Center], 
            Spacer[150]}], "network reliability", 
          Row[{
            Spacer[20], 
            Panel[
             Row[{
               Column[{
                 Manipulate`Place[6], 
                 Manipulate`Place[7], 
                 Row[{"consider unions of ", $CellContext`lorderReliable$$, 
                   Manipulate`Place[8]}], 
                 Row[{"consider unions of ", 
                   Dynamic[$CellContext`rorderReliable$$], 
                   Manipulate`Place[9]}], Null}], 
               Spacer[40], 
               Column[{"toy network", 
                 Dynamic[
                  Magnify[
                   $CellContext`drawToy[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 2]], 
                 Row[{
                   StringJoin["Total of ", 
                    TextString[
                    $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " struts and ", 
                    TextString[
                    $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " cuts"]}]}]}], 
             "network reliability parameters", Top, Alignment -> Center], 
            Spacer[50]}], "Ising", 
          Row[{
            Spacer[50], 
            Panel[
             Column[{
               Manipulate`Place[10], 
               Manipulate`Place[11], "x in plots is 1-exp[-2(H+|J|)/(kT)]"}], 
             "Ising parameters", Top, Alignment -> Center], 
            Spacer[50]}]]], 
        Row[{
          Spacer[300], 
          "(shift-click scales plots down, ctrl-click scales up)", 
          Spacer[20]}, Alignment -> Center]]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`numPts$$], 5}, 0}, {{
       Hold[$CellContext`oldNumPts$$], 1}, 0}, {{
       Hold[$CellContext`mpair$$], {1, 5}}, 0}, {{
       Hold[$CellContext`oldMpair$$], {1, 5}}, 0}, {{
       Hold[$CellContext`func$$], 
       Function[$CellContext`x, 1]}, 0}, {{
       Hold[$CellContext`oldFuncName$$], "none"}, 0}, {{
       Hold[$CellContext`isMonotonic$$], False}, 0}, {{
       Hold[$CellContext`oldWhichPlot$$], "normed"}, 0}, {{
       Hold[$CellContext`matchData$$], True}, 0}, {{
       Hold[$CellContext`oldMatchName$$], "data"}, 0}, {{
       Hold[$CellContext`show$$], {}}, 0}, {{
       Hold[$CellContext`mBinom$$], 4}, 0}, {{
       Hold[$CellContext`oldMBinom$$], 4}, 0}, {{
       Hold[$CellContext`pBinom$$], 0.5}, 0}, {{
       Hold[$CellContext`oldPBinom$$], 0.5}, 0}, {{
       Hold[$CellContext`mPole$$], 4}, 0}, {{
       Hold[$CellContext`oldMPole$$], 4}, 0}, {{
       Hold[$CellContext`ptPole$$], {0.5, 0.5}}, 0}, {{
       Hold[$CellContext`oldPtPole$$], {0.5, 0.5}}, 0}, {{
       Hold[$CellContext`mReliable$$], 2}, 0}, {{
       Hold[$CellContext`oldmReliable$$], 2}, 0}, {{
       Hold[$CellContext`lenReliable$$], {2, 3}}, 0}, {{
       Hold[$CellContext`aReliable$$], 3}, 0}, {{
       Hold[$CellContext`bReliable$$], 2}, 0}, {{
       Hold[$CellContext`lorderReliable$$], 1}, 0}, {{
       Hold[$CellContext`rorderReliable$$], 1}, 0}, {{
       Hold[$CellContext`oldLorder$$], 1}, 0}, {{
       Hold[$CellContext`oldRorder$$], 1}, 0}, {{
       Hold[$CellContext`mIsing$$], 4}, 0}, {{
       Hold[$CellContext`oldMIsing$$], 3}, 0}, {{
       Hold[$CellContext`hFracIsing$$], 0.25}, 0}, {{
       Hold[$CellContext`oldHFracIsing$$], 0.5}, 0}, {{
       Hold[$CellContext`isDiscrete$$], True}, 0}, {{
       Hold[$CellContext`leftM$$], 1}, 0}, {{
       Hold[$CellContext`rightM$$], 1}, 0}, {{
       Hold[$CellContext`d2tLeft$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2tRight$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2b$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2t$$], {{1}}}, 0}, {{
       Hold[$CellContext`t2b$$], {{1}}}, 0}, {{
       Hold[$CellContext`vals$$], {1, 1, 1, 1}}, 0}, {{
       Hold[$CellContext`alpha$$], {1}}, 0}, {{
       Hold[$CellContext`alphabar$$], {1}}, 0}, {{
       Hold[$CellContext`coefs$$], {{1}}}, 0}, {{
       Hold[$CellContext`taylors$$], {{1}}}, 0}, {{
       Hold[$CellContext`funcChanged$$], True}, 0}, {{
       Hold[$CellContext`recomputeCoefs$$], True}, 0}, {{
       Hold[$CellContext`recomputeTaylor$$], True}, 0}, {{
       Hold[$CellContext`msg$$], ""}, 0}, {{
       Hold[$CellContext`eval$$], 0}, 0}, {{
       Hold[$CellContext`biases$$], {0.0625, 0.25, 0.375, 0.25, 0.0625}}, 
      0}, {{
       Hold[$CellContext`dosIsing$$], {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
        2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0, 
        0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 0, 
        0}, {1, 0, 0, 0, 0}}}}, 0}, {{
       Hold[$CellContext`plot1$$], {{}}}, 0}, {{
       Hold[$CellContext`plot2$$], {{}}}, 0}, {{
       Hold[$CellContext`range$$], {-0.1, 1}}, 0}, {{
       Hold[$CellContext`fac$$], 
       Rational[2, 3]}, 0}}, Typeset`size$$ = {
    785., {210.134033203125, 215.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mpair$271071$$ = 0, $CellContext`matchName$271072$$ = 
    False, $CellContext`whichPlot$271073$$ = 
    False, $CellContext`show$271074$$ = 0, $CellContext`funcName$271075$$ = 
    0, $CellContext`ptPole$271076$$ = 0, $CellContext`mPole$271077$$ = 
    0, $CellContext`pBinom$271078$$ = 0, $CellContext`mBinom$271079$$ = 
    0, $CellContext`mReliable$271080$$ = 
    0, $CellContext`lenReliable$271081$$ = 
    0, $CellContext`lorderReliable$271082$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     3, StandardForm, 
      "Variables" :> {$CellContext`alpha$$ = {1}, $CellContext`alphabar$$ = {
         1}, $CellContext`aReliable$$ = 
        3, $CellContext`biases$$ = {0.0625, 0.25, 0.375, 0.25, 
         0.0625}, $CellContext`bReliable$$ = 
        2, $CellContext`coefs$$ = {{1}}, $CellContext`d2b$$ = {{
         1}}, $CellContext`d2t$$ = {{1}}, $CellContext`d2tLeft$$ = {{
         1}}, $CellContext`d2tRight$$ = {{
         1}}, $CellContext`dosIsing$$ = {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
          2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0,
           0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 
          0, 0}, {1, 0, 0, 0, 0}}}, $CellContext`eval$$ = 
        0, $CellContext`fac$$ = Rational[2, 3], $CellContext`func$$ = 
        Function[$CellContext`x, 1], $CellContext`funcChanged$$ = 
        True, $CellContext`funcName$$ = 
        Tooltip["binomial", 
          "a binomial distribution with parameters N and p.\n Illustrates \
fitting an inherently discrete function."], $CellContext`hFracIsing$$ = 
        0.25, $CellContext`isDiscrete$$ = True, $CellContext`isMonotonic$$ = 
        False, $CellContext`leftM$$ = 
        1, $CellContext`lenReliable$$ = {2, 3}, $CellContext`lorderReliable$$ = 
        1, $CellContext`matchData$$ = True, $CellContext`matchName$$ = 
        Tooltip["data", 
          "Truncated Taylor polynomials match data;\n estimated derivatives \
and Bernstein coefficients may be wrong"], $CellContext`mBinom$$ = 
        4, $CellContext`mIsing$$ = 
        4, $CellContext`mpair$$ = {1, 4}, $CellContext`mPole$$ = 
        4, $CellContext`mReliable$$ = 2, $CellContext`msg$$ = 
        "", $CellContext`numPts$$ = 5, $CellContext`oldFuncName$$ = 
        "none", $CellContext`oldHFracIsing$$ = 0.5, $CellContext`oldLorder$$ = 
        1, $CellContext`oldMatchName$$ = "data", $CellContext`oldMBinom$$ = 
        4, $CellContext`oldMIsing$$ = 
        3, $CellContext`oldMpair$$ = {1, 5}, $CellContext`oldMPole$$ = 
        4, $CellContext`oldmReliable$$ = 2, $CellContext`oldNumPts$$ = 
        1, $CellContext`oldPBinom$$ = 
        0.5, $CellContext`oldPtPole$$ = {0.5, 0.5}, $CellContext`oldRorder$$ = 
        1, $CellContext`oldWhichPlot$$ = "normed", $CellContext`pBinom$$ = 
        0.5, $CellContext`plot1$$ = {{}}, $CellContext`plot2$$ = {{}}, \
$CellContext`ptPole$$ = $CellContext`oldPtPole$$, $CellContext`range$$ = \
{-0.1, 1}, $CellContext`recomputeCoefs$$ = 
        True, $CellContext`recomputeTaylor$$ = True, $CellContext`rightM$$ = 
        1, $CellContext`rorderReliable$$ = 
        1, $CellContext`show$$ = {}, $CellContext`t2b$$ = {{
         1}}, $CellContext`taylors$$ = {{1}}, $CellContext`vals$$ = {1, 1, 1, 
         1}, $CellContext`whichPlot$$ = "normed"}, "ControllerVariables" :> {
        Hold[$CellContext`mpair$$, $CellContext`mpair$271071$$, 0], 
        Hold[$CellContext`matchName$$, $CellContext`matchName$271072$$, 
         False], 
        Hold[$CellContext`whichPlot$$, $CellContext`whichPlot$271073$$, 
         False], 
        Hold[$CellContext`show$$, $CellContext`show$271074$$, 0], 
        Hold[$CellContext`funcName$$, $CellContext`funcName$271075$$, 0], 
        Hold[$CellContext`ptPole$$, $CellContext`ptPole$271076$$, 0], 
        Hold[$CellContext`mPole$$, $CellContext`mPole$271077$$, 0], 
        Hold[$CellContext`pBinom$$, $CellContext`pBinom$271078$$, 0], 
        Hold[$CellContext`mBinom$$, $CellContext`mBinom$271079$$, 0], 
        Hold[$CellContext`mReliable$$, $CellContext`mReliable$271080$$, 0], 
        Hold[$CellContext`lenReliable$$, $CellContext`lenReliable$271081$$, 
         0], 
        Hold[$CellContext`lorderReliable$$, \
$CellContext`lorderReliable$271082$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`messageNB = Part[
          Notebooks["Messages"], 1]; 
       SetOptions[$CellContext`messageNB, PrintPrecision -> 
         4]; $CellContext`range0 = {0, 
         1}; $CellContext`eval$$ = $CellContext`eval$$ + 
         1; $CellContext`recomputeTaylor$$ = 
        False; $CellContext`recomputeCoefs$$ = False; $CellContext`msg$$ = 
        StringJoin["\nEval ", 
          TextString[$CellContext`eval$$], "\n"]; 
       If[$CellContext`numPts$$ != $CellContext`oldNumPts$$, \
$CellContext`recomputeTaylor$$ = True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged n to ", 
            TextString[$CellContext`numPts$$]]; $CellContext`mpair$$ = {
            Min[$CellContext`numPts$$, $CellContext`leftM$$], 
            Max[
            1, $CellContext`numPts$$ + 
             1 - $CellContext`rightM$$]}; $CellContext`oldMpair$$ = {-1, -1}; \
$CellContext`d2b$$ = N[
            $CellContext`dataToBezierMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; $CellContext`d2t$$ = N[
            $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; $CellContext`t2b$$ = N[
            $CellContext`taylorToBezierMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; Null]; If[
         Or[$CellContext`funcChanged$$, $CellContext`numPts$$ != \
$CellContext`oldNumPts$$], 
         If[$CellContext`numPts$$ == $CellContext`oldNumPts$$, \
$CellContext`msg$$ = 
           StringJoin[$CellContext`msg$$, 
             "\nfunction changed"]]; $CellContext`recomputeTaylor$$ = 
          True; $CellContext`vals$$ = N[
            Table[
             $CellContext`func$$[$CellContext`k/($CellContext`numPts$$ - 
              1)], {$CellContext`k, 0, $CellContext`numPts$$ - 
              1}]]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nNew vals: ", 
            
            TextString[$CellContext`vals$$]]; $CellContext`oldNumPts$$ = \
$CellContext`numPts$$; Null]; 
       If[$CellContext`oldMatchName$$ != 
         Part[$CellContext`matchName$$, 1], $CellContext`recomputeTaylor$$ = 
          True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged from ", 
            TextString[$CellContext`oldMatchName$$], " to ", 
            TextString[
             Part[$CellContext`matchName$$, 1]]]; $CellContext`matchData$$ = 
          Part[$CellContext`matchName$$, 1] == 
           "data"; $CellContext`oldMatchName$$ = 
          Part[$CellContext`matchName$$, 1]; Null]; If[
         Or[$CellContext`recomputeTaylor$$, Part[$CellContext`mpair$$, 1] != 
          Part[$CellContext`oldMpair$$, 1]], $CellContext`recomputeCoefs$$ = 
          True; If[
           Not[$CellContext`funcChanged$$], 
           If[Part[$CellContext`oldMpair$$, 1] != -1, $CellContext`msg$$ = 
             StringJoin[$CellContext`msg$$, "\nchanged leftm from ", 
               TextString[$CellContext`leftM$$], " to ", 
               TextString[
                Part[$CellContext`mpair$$, 1]]]]; $CellContext`leftM$$ = 
            Part[$CellContext`mpair$$, 1]; 
           Part[$CellContext`oldMpair$$, 1] = 
            Part[$CellContext`mpair$$, 1]; $CellContext`d2tLeft$$ = N[
              $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
               1, $CellContext`leftM$$]]; Null]; 
         If[$CellContext`matchData$$, $CellContext`alpha$$ = Flatten[{
               Dot[$CellContext`d2tLeft$$, 
                Part[$CellContext`vals$$, 
                 Span[1, $CellContext`leftM$$]]], 
               Table[0, $CellContext`numPts$$ - $CellContext`leftM$$]}]; 
           Null, $CellContext`alpha$$ = If[$CellContext`isDiscrete$$, 
              N[
               Dot[$CellContext`d2t$$, $CellContext`vals$$]], 
              Table[
               Normal[
                SeriesCoefficient[
                 Refine[
                  Series[
                   $CellContext`func$$[$CellContext`x], {$CellContext`x, 
                    0, $CellContext`numPts$$}]], $CellContext`k - 
                 1]], {$CellContext`k, 1, $CellContext`numPts$$}]]; 
           Null]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nnew alpha ", 
            TextString[$CellContext`alpha$$]]; Null]; If[
         Or[$CellContext`recomputeTaylor$$, Part[$CellContext`mpair$$, 2] != 
          Part[$CellContext`oldMpair$$, 2]], $CellContext`recomputeCoefs$$ = 
          True; If[
           Not[$CellContext`funcChanged$$], 
           If[Part[$CellContext`oldMpair$$, 2] != -1, $CellContext`msg$$ = 
             StringJoin[$CellContext`msg$$, "\nchanged rightm from ", 
               TextString[$CellContext`rightM$$], " to ", 
               
               TextString[$CellContext`numPts$$ + 1 - 
                Part[$CellContext`mpair$$, 
                 2]]]]; $CellContext`rightM$$ = $CellContext`numPts$$ + 1 - 
             Part[$CellContext`mpair$$, 2]; 
           Part[$CellContext`oldMpair$$, 2] = 
            Part[$CellContext`mpair$$, 2]; $CellContext`d2tRight$$ = N[
              $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
               1, $CellContext`rightM$$]]; Null]; 
         If[$CellContext`matchData$$, $CellContext`alphabar$$ = N[
              Flatten[{
                Dot[$CellContext`d2tRight$$, 
                 Part[$CellContext`vals$$, 
                  Span[-1, -$CellContext`rightM$$, -1]]], 
                Table[0, $CellContext`numPts$$ - $CellContext`rightM$$]}]]; 
           Null, $CellContext`alphabar$$ = If[$CellContext`isDiscrete$$, 
              N[
               Dot[$CellContext`d2t$$, 
                Reverse[$CellContext`vals$$]]], 
              Table[
               Normal[
                SeriesCoefficient[
                 Refine[
                  Series[
                   $CellContext`func$$[
                   1 - $CellContext`y], {$CellContext`y, 
                    0, $CellContext`numPts$$}], 0 < $CellContext`y < 
                  1], $CellContext`k - 1]], {$CellContext`k, 
                1, $CellContext`numPts$$}]]; Null]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nnew alpha bar ", 
            TextString[$CellContext`alphabar$$]]; 
         Null]; $CellContext`funcChanged$$ = False; 
       If[$CellContext`recomputeCoefs$$, $CellContext`coefs$$ = N[
            $CellContext`buildBezierCoefs[$CellContext`leftM$$, \
$CellContext`rightM$$, $CellContext`numPts$$, $CellContext`t2b$$, \
$CellContext`alpha$$, $CellContext`alphabar$$, $CellContext`d2b$$, \
$CellContext`vals$$, $CellContext`matchData$$, $CellContext`isMonotonic$$, \
$CellContext`isDiscrete$$]]; $CellContext`taylors$$ = N[
            $CellContext`buildTaylorCoefs[$CellContext`leftM$$, \
$CellContext`rightM$$, $CellContext`numPts$$, $CellContext`d2t$$, \
$CellContext`alpha$$, $CellContext`alphabar$$, $CellContext`vals$$, \
$CellContext`matchData$$, $CellContext`isMonotonic$$, \
$CellContext`isDiscrete$$]]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nNew Bezier coefficients: ", 
            TextString[
             Part[$CellContext`coefs$$, -1]]]; $CellContext`recomputeCoefs$$ = 
          False; $CellContext`plot1$$ = \
$CellContext`buildTaylorPlot[$CellContext`leftM$$, $CellContext`rightM$$, \
$CellContext`vals$$, $CellContext`func$$, $CellContext`alpha$$, \
$CellContext`alphabar$$, $CellContext`taylors$$, $CellContext`isMonotonic$$, \
$CellContext`d2t$$]; $CellContext`plot2$$ = \
$CellContext`buildBezierPlot[$CellContext`leftM$$, $CellContext`rightM$$, \
$CellContext`vals$$, $CellContext`func$$, $CellContext`coefs$$, \
$CellContext`matchData$$, $CellContext`isMonotonic$$]; 
         NotebookWrite[$CellContext`messageNB, $CellContext`msg$$]; Null]; 
       If[$CellContext`oldWhichPlot$$ != $CellContext`whichPlot$$, \
$CellContext`funcChanged$$ = True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged from ", 
            TextString[$CellContext`oldWhichPlot$$], " to ", 
            
            TextString[$CellContext`whichPlot$$]]; $CellContext`isMonotonic$$ = \
$CellContext`whichPlot$$ == 
           "monotonic"; $CellContext`oldWhichPlot$$ = \
$CellContext`whichPlot$$; Null]; Switch[
         Part[$CellContext`funcName$$, 1], "binomial", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to binomial from ", $CellContext`oldFuncName$$]; \
$CellContext`mBinom$$ = $CellContext`oldMBinom$$; $CellContext`numPts$$ = \
$CellContext`mBinom$$ + 1; $CellContext`isDiscrete$$ = 
            True; $CellContext`oldFuncName$$ = 
            "binomial"; $CellContext`oldMatchName$$ = 
            "data"; $CellContext`funcChanged$$ = True; Null]; 
         If[ControlActive[$CellContext`pBinom$$, $CellContext`oldPBinom$$] != \
$CellContext`pBinom$$, $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, "\nchanged p to ", 
              TextString[$CellContext`pBinom$$], " from ", 
              
              TextString[$CellContext`oldPBinom$$]]; \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldPBinom$$ = $CellContext`pBinom$$; Null]; 
         If[ControlActive[$CellContext`mBinom$$, $CellContext`oldMBinom$$] != \
$CellContext`mBinom$$, $CellContext`funcChanged$$ = True; $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, "\nchanged m to ", 
              TextString[$CellContext`mBinom$$], " from ", 
              
              TextString[$CellContext`oldMBinom$$]]; $CellContext`numPts$$ = \
$CellContext`mBinom$$ + 1; $CellContext`oldMBinom$$ = $CellContext`mBinom$$; 
           Null]; If[$CellContext`funcChanged$$, $CellContext`biases$$ = \
$CellContext`binom[$CellContext`mBinom$$, $CellContext`pBinom$$]; \
$CellContext`msg$$ = StringJoin[$CellContext`msg$$, "\n (m,p) ", 
              TextString[$CellContext`mBinom$$], " ", 
              TextString[$CellContext`pBinom$$], " new biases ", 
              TextString[$CellContext`biases$$]]; $CellContext`func$$ = 
            If[$CellContext`whichPlot$$ == "normed", 
              $CellContext`discreteDensity[$CellContext`biases$$], 
              $CellContext`discreteCumul[$CellContext`biases$$]]]; Null, 
         "network reliability", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to network reliability from ", \
$CellContext`oldFuncName$$]; $CellContext`mReliable$$ = \
$CellContext`oldmReliable$$; $CellContext`isDiscrete$$ = 
            False; $CellContext`oldFuncName$$ = 
            "network reliability"; $CellContext`oldMatchName$$ = 
            "derivatives"; $CellContext`funcChanged$$ = True; Null]; 
         If[ControlActive[
             Part[$CellContext`lenReliable$$, 1], $CellContext`bReliable$$] != 
           Part[$CellContext`lenReliable$$, 1], $CellContext`funcChanged$$ = 
            True; $CellContext`bReliable$$ = 
            Part[$CellContext`lenReliable$$, 1]; Null]; If[ControlActive[
             Part[$CellContext`lenReliable$$, 2], $CellContext`aReliable$$] != 
           Part[$CellContext`lenReliable$$, 2], $CellContext`funcChanged$$ = 
            True; $CellContext`aReliable$$ = 
            Part[$CellContext`lenReliable$$, 2]; Null]; 
         If[ControlActive[$CellContext`mReliable$$, \
$CellContext`oldmReliable$$] != $CellContext`mReliable$$, \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldmReliable$$ = $CellContext`mReliable$$; 
           Null]; If[
          ControlActive[$CellContext`lorderReliable$$, \
$CellContext`oldLorder$$] != $CellContext`lorderReliable$$, 
           Part[$CellContext`mpair$$, 1] = 
            Switch[$CellContext`lorderReliable$$, 0, 
              1, $CellContext`mReliable$$ + 1, $CellContext`numPts$$, 
              Blank[], $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`lorderReliable$$]; Null]; 
         If[ControlActive[$CellContext`rorderReliable$$, \
$CellContext`oldRorder$$] != $CellContext`rorderReliable$$, 
           Part[$CellContext`mpair$$, 2] = $CellContext`numPts$$ + 1 - 
             Switch[$CellContext`rorderReliable$$, 0, 1, $CellContext`n, 
              1 + $CellContext`bReliable$$ ($CellContext`aReliable$$ - 
                 1)^$CellContext`mReliable$$, 
              Blank[], $CellContext`mReliable$$ + Ceiling[
                Log2[
                 
                 Ceiling[$CellContext`rorderReliable$$/$CellContext`bReliable$\
$]]]]; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`bReliable$$ + 
              2 + ($CellContext`aReliable$$ - 
                1) $CellContext`mReliable$$, $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`mReliable$$]; $CellContext`func$$ = 
            If[$CellContext`whichPlot$$ == "normed", 
              $CellContext`toyDensity[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 
              $CellContext`toyCumul[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]]; If[
           
           Or[$CellContext`funcChanged$$, $CellContext`oldLorder$$ != \
$CellContext`lorderReliable$$], 
           Part[$CellContext`mpair$$, 1] = 
            Switch[$CellContext`lorderReliable$$, 0, 
              1, $CellContext`mReliable$$ + 1, $CellContext`numPts$$, 
              Blank[], $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`lorderReliable$$]; $CellContext`oldLorder$$ = \
$CellContext`lorderReliable$$; Null]; If[
           
           Or[$CellContext`funcChanged$$, $CellContext`oldRorder$$ != \
$CellContext`rorderReliable$$], $CellContext`oldRorder$$ = \
$CellContext`rorderReliable$$; Null]; Null, "pole", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to pole from ", $CellContext`oldFuncName$$]; \
$CellContext`mPole$$ = $CellContext`oldMPole$$; $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`mPole$$ + 
              1, $CellContext`mPole$$]; $CellContext`ptPole$$ = \
$CellContext`oldPtPole$$; $CellContext`isDiscrete$$ = 
            False; $CellContext`oldFuncName$$ = 
            "pole"; $CellContext`oldMatchName$$ = 
            "data"; $CellContext`funcChanged$$ = True; Null]; If[ControlActive[
             Part[$CellContext`ptPole$$, 1], 
             Part[$CellContext`oldPtPole$$, 1]] != 
           Part[$CellContext`ptPole$$, 1], $CellContext`funcChanged$$ = True; 
           Part[$CellContext`oldPtPole$$, 1] = Part[$CellContext`ptPole$$, 1]; 
           Null]; If[ControlActive[
             Part[$CellContext`ptPole$$, 2], 
             Part[$CellContext`oldPtPole$$, 2]] != 
           Part[$CellContext`ptPole$$, 2], $CellContext`funcChanged$$ = True; 
           Part[$CellContext`oldPtPole$$, 2] = Part[$CellContext`ptPole$$, 2]; 
           Null]; If[
          ControlActive[$CellContext`mPole$$, $CellContext`oldMPole$$] != \
$CellContext`mPole$$, $CellContext`funcChanged$$ = 
            True; $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`mPole$$ + 
              1, $CellContext`mPole$$]; $CellContext`oldMPole$$ = \
$CellContext`mPole$$; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`func$$ = 
           If[$CellContext`whichPlot$$ == "normed", 
             $CellContext`poleDensity[
              Part[$CellContext`ptPole$$, 1], 
              Part[$CellContext`ptPole$$, 2]], 
             $CellContext`poleCumul[
              Part[$CellContext`ptPole$$, 1], 
              Part[$CellContext`ptPole$$, 2]]]]; Null, "Ising", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 
             1], $CellContext`mIsing$$ = $CellContext`oldMIsing$$; \
$CellContext`hFracIsing$$ = $CellContext`oldHFracIsing$$; \
$CellContext`isDiscrete$$ = False; $CellContext`oldFuncName$$ = 
            "Ising"; $CellContext`oldMatchName$$ = 
            "derivatives"; $CellContext`funcChanged$$ = True; Null]; If[
           
           Or[$CellContext`funcChanged$$, 
            
            ControlActive[$CellContext`hFracIsing$$, \
$CellContext`oldHFracIsing$$] != $CellContext`hFracIsing$$], \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldHFracIsing$$ = $CellContext`hFracIsing$$; 
           Null]; If[
           
           Or[$CellContext`funcChanged$$, 
            ControlActive[$CellContext`mIsing$$, $CellContext`oldMIsing$$] != \
$CellContext`mIsing$$], $CellContext`funcChanged$$ = 
            True; $CellContext`oldMIsing$$ = $CellContext`mIsing$$; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`numPts$$ = Denominator[
               Rationalize[$CellContext`hFracIsing$$]] $CellContext`mIsing$$; 
           If[$CellContext`isMonotonic$$, $CellContext`numPts$$ = \
$CellContext`numPts$$ + 1]; 
           If[Length[$CellContext`dosIsing$$] < $CellContext`mIsing$$, \
$CellContext`dosIsing$$ = $CellContext`isingDoS1D[$CellContext`mIsing$$, \
$CellContext`dosIsing$$]]; NotebookWrite[$CellContext`messageNB, "\ndos: "]; 
           NotebookWrite[$CellContext`messageNB, 
             Cell[
              BoxData[
               ToBoxes[
                MatrixForm[
                 
                 Part[$CellContext`dosIsing$$, $CellContext`mIsing$$]]]]]]; \
$CellContext`func$$ = $CellContext`ising1D[
              
              Part[$CellContext`dosIsing$$, $CellContext`mIsing$$], \
$CellContext`hFracIsing$$, $CellContext`isMonotonic$$]; Null]; Null]; 
       EventHandler[
         Dynamic[
          Grid[{
            Flatten[{
              Show[
               $CellContext`selectTaylorPlots[$CellContext`plot1$$, \
$CellContext`show$$, $CellContext`numPts$$, $CellContext`leftM$$, \
$CellContext`rightM$$], AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 1}, $CellContext`range$$}, PlotRangeClipping -> 
               True, ImageSize -> Medium, AspectRatio -> 1.], 
              Show[
               $CellContext`selectBezierPlots[$CellContext`plot2$$, \
$CellContext`show$$, $CellContext`numPts$$, $CellContext`leftM$$, \
$CellContext`rightM$$], AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 1}, $CellContext`range$$}, PlotRangeClipping -> 
               True, ImageSize -> Medium, AspectRatio -> 1.]}]}, Spacings -> 
           5]], {"MouseDown" :> ($CellContext`range0 = $CellContext`range$$), 
          "MouseClicked" :> Which[
            CurrentValue[
            "AltKey"], $CellContext`range$$ = $CellContext`range$$ \
$CellContext`fac$$, 
            CurrentValue[
            "ShiftKey"], $CellContext`range$$ = \
$CellContext`range$$/$CellContext`fac$$]}, PassEventsDown -> True]), 
      "Specifications" :> {{{$CellContext`mpair$$, {1, 4}, ""}, 1, 
         Dynamic[$CellContext`numPts$$], 1, ControlType -> IntervalSlider, 
         Appearance -> {"Paired"}, Enabled -> 
         Dynamic[Part[$CellContext`funcName$$, 1] != "network reliability"], 
         ControlPlacement -> 1}, 
        Row[{"Number of coefficients known: left ", 
          Dynamic[
           Part[$CellContext`mpair$$, 1]], 
          Manipulate`Place[1], 
          Dynamic[$CellContext`numPts$$ + 1 - Part[$CellContext`mpair$$, 2]], 
          " right"}], {{$CellContext`matchName$$, 
          Tooltip[
          "data", "Truncated Taylor polynomials match data;\n estimated \
derivatives and Bernstein coefficients may be wrong"], 
          "Estimate function based on exact "}, {
          Tooltip[
          "data", "Truncated Taylor polynomials match data;\n estimated \
derivatives and Bernstein coefficients may be wrong"], 
          Tooltip[
          "derivatives", 
           "Truncated Taylor polynomials may not match data;\n Bernstein \
coefficients will be correct"]}, ControlType -> 
         RadioButton}, {{$CellContext`whichPlot$$, "normed", 
          "Estimate normed function or its monotonic integral?"}, {
         "normed", "monotonic"}, ControlType -> 
         RadioButton}, {{$CellContext`show$$, {{
            Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
            Style[
            "uniform", FontColor -> 
             RGBColor[
              0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
            Style[
            "bimodal", FontColor -> 
             RGBColor[
              0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
            Style[
            "threshold", FontColor -> 
             RGBColor[
              0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
            Style[
            "bounds", FontColor -> 
             RGBColor[
              0.1450980392156863, 0.43529411764705883`, 
               0.3843137254901961]]}}, "interpolations to show:"}, {
          Tooltip[
           Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
           "A(left + right - 1)-degree Bezier polynomial using only known \
coefficients"], 
          Tooltip[
           Style[
           "uniform", FontColor -> 
            RGBColor[
             0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
           "constant"], 
          Tooltip[
           Style[
           "bimodal", FontColor -> 
            RGBColor[
             0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
           "piecewise constant with two jump discontinuities"], 
          Tooltip[
           Style[
           "threshold", FontColor -> 
            RGBColor[
             0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
           "piecewise constant with one jump discontinuity"], 
          Tooltip[
           Style[
           "bounds", FontColor -> 
            RGBColor[
             0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           "Tight bounds under the assumption that Bezier coefficients are \
non-negative."]}, ControlType -> CheckboxBar}, {{$CellContext`funcName$$, 
          Tooltip[
          "binomial", 
           "a binomial distribution with parameters N and p.\n Illustrates \
fitting an inherently discrete function."], "function to approximate:"}, {
          Tooltip[
          "binomial", 
           "a binomial distribution with parameters N and p.\n Illustrates \
fitting an inherently discrete function."], 
          Tooltip[
          "pole", "N uniformly-sampled values from a function with a pole in \
the complex plane.\n Illustrates fitting samples from a non-polynomial \
function."], 
          Tooltip[
          "network reliability", 
           
           "the two terminal Moore-Shannon network reliability for the toy \
network illustrated.\n I.e., the probability of getting a message from Source \
to Terminus when the probability of transmitting over each edge is x\n \
Illustrates tight bounds when Bernstein coefficients are guaranteed to be \
non-negative."], 
          Tooltip["Ising", 
           StringForm[
           "the partition function of an Ising model on a circle with N sites \
in an external field:\n ``(T) =`` n(s,f) exp{`` [s+``f]}", 
            Subscript[$CellContext`Z, "N,H/J"], 
            "\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)", 
            2 $CellContext`J/$CellContext`kT, \
$CellContext`H/$CellContext`J]]}, ControlType -> 
         RadioButton}, {{$CellContext`ptPole$$, $CellContext`oldPtPole$$, 
          Row[{
            Spacer[40], "position of pole in complex plane"}]}, 0.01, 1, 
         ControlType -> Slider2D, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`mPole$$, $CellContext`oldMPole$$, 
          "number of samples"}, 2, 100, 1, Appearance -> {"Labeled"}, 
         ControlPlacement -> 
         3}, {{$CellContext`pBinom$$, $CellContext`oldPBinom$$, "p"}, 0.01, 1,
          Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mBinom$$, $CellContext`oldMBinom$$, "N"}, 2, 50, 
         1, Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`mReliable$$, $CellContext`oldmReliable$$, 
          "number of long parallel paths"}, 2, 20, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         6}, {{$CellContext`lenReliable$$, {$CellContext`bReliable$$, \
$CellContext`aReliable$$}, "length of short and long paths"}, 2, 20, 1, 
         ControlType -> IntervalSlider, MinIntervalSize -> 1, Method -> 
         "Push", Appearance -> {"Labeled", "Paired"}, ControlPlacement -> 
         7}, {{$CellContext`lorderReliable$$, $CellContext`oldLorder$$, 
          " strut(s)"}, 0, 
         Dynamic[
          $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], 1, ControlPlacement -> 
         8}, {{$CellContext`rorderReliable$$, $CellContext`oldRorder$$, 
          " cut(s)"}, 0, 
         Dynamic[
          Min[20, 
           $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]], 1, ControlPlacement -> 
         9}, {{$CellContext`hFracIsing$$, $CellContext`oldHFracIsing$$, 
          "ratio of internal to total field J/(H+|J|)"}, -1, 1, 0.01, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         10}, {{$CellContext`mIsing$$, $CellContext`oldMIsing$$, "N"}, 1, 50, 
         1, Appearance -> "Labeled", ControlPlacement -> 11}, 
        Dynamic[
         Panel[
          Switch[
           Part[$CellContext`funcName$$, 1], "pole", 
           Row[{
             Spacer[50], 
             Panel[
              Column[{
                Manipulate`Place[2], 
                Manipulate`Place[3]}], "pole parameters", Top, Alignment -> 
              Center], 
             Spacer[50]}], "binomial", 
           Row[{
             Spacer[150], 
             Panel[
              Column[{
                Manipulate`Place[4], 
                Manipulate`Place[5]}], "binomial parameters", Top, Alignment -> 
              Center], 
             Spacer[150]}], "network reliability", 
           Row[{
             Spacer[20], 
             Panel[
              Row[{
                Column[{
                  Manipulate`Place[6], 
                  Manipulate`Place[7], 
                  Row[{"consider unions of ", $CellContext`lorderReliable$$, 
                    Manipulate`Place[8]}], 
                  Row[{"consider unions of ", 
                    Dynamic[$CellContext`rorderReliable$$], 
                    Manipulate`Place[9]}], Null}], 
                Spacer[40], 
                Column[{"toy network", 
                  Dynamic[
                   Magnify[
                    $CellContext`drawToy[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 2]], 
                  Row[{
                    StringJoin["Total of ", 
                    TextString[
                    $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " struts and ", 
                    TextString[
                    $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " cuts"]}]}]}], 
              "network reliability parameters", Top, Alignment -> Center], 
             Spacer[50]}], "Ising", 
           Row[{
             Spacer[50], 
             Panel[
              Column[{
                Manipulate`Place[10], 
                Manipulate`Place[11], "x in plots is 1-exp[-2(H+|J|)/(kT)]"}],
               "Ising parameters", Top, Alignment -> Center], 
             Spacer[50]}]]], 
         Row[{
           Spacer[300], 
           "(shift-click scales plots down, ctrl-click scales up)", 
           Spacer[20]}, Alignment -> Center]], {{$CellContext`numPts$$, 5}, 0,
          ControlType -> None}, {{$CellContext`oldNumPts$$, 1}, 0, 
         ControlType -> None}, {{$CellContext`mpair$$, {1, 5}}, 0, 
         ControlType -> None}, {{$CellContext`oldMpair$$, {1, 5}}, 0, 
         ControlType -> None}, {{$CellContext`func$$, 
          Function[$CellContext`x, 1]}, 0, ControlType -> 
         None}, {{$CellContext`oldFuncName$$, "none"}, 0, ControlType -> 
         None}, {{$CellContext`isMonotonic$$, False}, 0, ControlType -> 
         None}, {{$CellContext`oldWhichPlot$$, "normed"}, 0, ControlType -> 
         None}, {{$CellContext`matchData$$, True}, 0, ControlType -> 
         None}, {{$CellContext`oldMatchName$$, "data"}, 0, ControlType -> 
         None}, {{$CellContext`show$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`mBinom$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMBinom$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`pBinom$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`oldPBinom$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`mPole$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMPole$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`ptPole$$, {0.5, 0.5}}, 0, ControlType -> 
         None}, {{$CellContext`oldPtPole$$, {0.5, 0.5}}, 0, ControlType -> 
         None}, {{$CellContext`mReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`oldmReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`lenReliable$$, {2, 3}}, 0, ControlType -> 
         None}, {{$CellContext`aReliable$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`bReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`lorderReliable$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`rorderReliable$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`oldLorder$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`oldRorder$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mIsing$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMIsing$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`hFracIsing$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`oldHFracIsing$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`isDiscrete$$, True}, 0, ControlType -> 
         None}, {{$CellContext`leftM$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`rightM$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`d2tLeft$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2tRight$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2b$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2t$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`t2b$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`vals$$, {1, 1, 1, 1}}, 0, ControlType -> 
         None}, {{$CellContext`alpha$$, {1}}, 0, ControlType -> 
         None}, {{$CellContext`alphabar$$, {1}}, 0, ControlType -> 
         None}, {{$CellContext`coefs$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`taylors$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`funcChanged$$, True}, 0, ControlType -> 
         None}, {{$CellContext`recomputeCoefs$$, True}, 0, ControlType -> 
         None}, {{$CellContext`recomputeTaylor$$, True}, 0, ControlType -> 
         None}, {{$CellContext`msg$$, ""}, 0, ControlType -> 
         None}, {{$CellContext`eval$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`biases$$, {0.0625, 0.25, 0.375, 0.25, 0.0625}},
          0, ControlType -> 
         None}, {{$CellContext`dosIsing$$, {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 
           0, 2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 
           0, 0, 0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 
           0, 4, 0, 0}, {1, 0, 0, 0, 0}}}}, 0, ControlType -> 
         None}, {{$CellContext`plot1$$, {{}}}, 0, ControlType -> 
         None}, {{$CellContext`plot2$$, {{}}}, 0, ControlType -> 
         None}, {{$CellContext`range$$, {-0.1, 1}}, 0, ControlType -> 
         None}, {{$CellContext`fac$$, 
          Rational[2, 3]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`funcName$$, $CellContext`whichPlot$$, \
$CellContext`matchName$$, $CellContext`mpair$$, $CellContext`numPts$$, \
$CellContext`show$$, $CellContext`func$$, $CellContext`pBinom$$, \
$CellContext`mPole$$, $CellContext`mBinom$$, $CellContext`mReliable$$, \
$CellContext`mIsing$$, $CellContext`ptPole$$, $CellContext`funcChanged$$, \
$CellContext`lenReliable$$, $CellContext`lorderReliable$$, \
$CellContext`rorderReliable$$, $CellContext`aReliable$$, \
$CellContext`bReliable$$, $CellContext`hFracIsing$$, $CellContext`range$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{830., {371., 377.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`func$$ = \
$CellContext`discreteDensity[$CellContext`biases$$]; $CellContext`tmp = {}; \
$CellContext`dosIsing$$ = $CellContext`isingDoS1D[4, $CellContext`tmp]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.7568185069800262`*^9, 3.75681851495006*^9}, {
   3.756818694710493*^9, 3.756818711695592*^9}, 3.75682001229515*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"f8185e6a-cf56-4e4b-b720-0a20107deb82"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Useful Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731515959149905*^9, 3.731515986939397*^9}, 
   3.735897754256469*^9, 3.735912560005618*^9, 3.7360263904281693`*^9, 
   3.738338214591082*^9, 3.738338255972303*^9, 3.738338299642967*^9, {
   3.75414309609628*^9, 3.7541431138035088`*^9}, {3.754384484618182*^9, 
   3.754384512794907*^9}, 3.7543871300811453`*^9, 3.754608826471537*^9},
 FontSize->16,ExpressionUUID->"912421aa-3894-415b-931e-bec10ff48e38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Power", "]"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.739470643871122*^9, 3.739470653047101*^9}, {
   3.740038018370751*^9, 3.7400382251102*^9}, {3.740038281365237*^9, 
   3.7400383036446247`*^9}, {3.740038338148169*^9, 3.740038341555978*^9}, {
   3.740038397138607*^9, 3.740038441601426*^9}, {3.740038472857666*^9, 
   3.740038532848617*^9}, {3.740038599953497*^9, 3.7400387189168453`*^9}, {
   3.740038758475917*^9, 3.7400387672421417`*^9}, {3.740047374798435*^9, 
   3.7400473764199333`*^9}, {3.7401806966960697`*^9, 3.740180697543334*^9}, {
   3.747916780209693*^9, 3.7479168234765177`*^9}, {3.7497430818452063`*^9, 
   3.749743100771366*^9}, {3.749743142440259*^9, 3.749743172901198*^9}, {
   3.749743455045706*^9, 3.7497434673520393`*^9}, {3.749753657476753*^9, 
   3.749753661526771*^9}, {3.749851637762883*^9, 3.749851649920735*^9}, {
   3.7503421500477867`*^9, 3.750342150593059*^9}, {3.750357909601777*^9, 
   3.75035791225455*^9}, {3.7514124853986692`*^9, 3.751412487201974*^9}, {
   3.7515587952528563`*^9, 3.751558828142271*^9}, {3.7515602791045513`*^9, 
   3.75156028040341*^9}, {3.75414309609652*^9, 3.754143113803712*^9}, {
   3.754384125265614*^9, 3.754384125749943*^9}, {3.754384484618483*^9, 
   3.754384512795226*^9}, {3.754385926739571*^9, 3.7543859324297037`*^9}, {
   3.754386644962385*^9, 3.754386656578006*^9}, {3.7543866943408422`*^9, 
   3.7543866949535627`*^9}, {3.754386801668117*^9, 3.754386803595443*^9}, {
   3.754386908781386*^9, 3.754386925735894*^9}, {3.754386981487494*^9, 
   3.754386994758624*^9}, 3.754387130081334*^9, 3.7546088264728622`*^9},
 FontSize->16,
 CellLabel->
  "In[179]:=",ExpressionUUID->"523b4af4-68a5-4b28-a172-fc0561c750b2"],

Cell["\<\
Convert a list of y - values to an evenly spaced list of (x, y) values. N \
values -> spacing is 1/(N-1).
Convert 2 lists of y-values to an evenly spaced list of (x,y) pairs with a \
gap between them. Spacing is 1/(N-1)\
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731961787412735*^9, 3.735897205944943*^9, 3.736026283177816*^9, 
   3.736026433421797*^9, 3.738336820434924*^9, 3.738338255972569*^9, 
   3.7383382996448793`*^9, {3.754143096096674*^9, 3.754143113803841*^9}, {
   3.754383868539587*^9, 3.75438389008118*^9}, 3.754384364986289*^9, {
   3.7543844079171047`*^9, 3.754384444150877*^9}, 3.754384512795376*^9, 
   3.754384669734274*^9, 3.7543849293747396`*^9, {3.7543858504106417`*^9, 
   3.754385851229516*^9}, 3.754387130081518*^9, 3.754608826472993*^9},
 FontSize->16,ExpressionUUID->"802e4f4c-f1ae-4198-88cf-12d0b7b4e8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"vec2pts", ",", "vec2pts2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"vec2pts", "[", "v_List", "]"}], " ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "v", "]"}], "-", "1"}], ")"}]}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}]}], ";"}],
  FontSize->12], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"vec2pts2", "[", 
     RowBox[{
     "left_List", ",", " ", "right_List", ",", " ", "numPts_Integer"}], "]"}],
     ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1"}], ")"}]}], ",", 
            RowBox[{"left", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "left", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1", "-", 
               RowBox[{"Length", "[", "right", "]"}], "+", "k"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1"}], ")"}]}], ",", 
            RowBox[{"right", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "right", "]"}]}], "}"}]}], "]"}]}], "}"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontSize->12]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711921088552628*^9, 3.7119211097961493`*^9}, {
   3.731790604059466*^9, 3.731790611498961*^9}, {3.731952779424247*^9, 
   3.7319528041177073`*^9}, {3.731961748306985*^9, 3.731961805662774*^9}, {
   3.7321275767966757`*^9, 3.732127577936163*^9}, 3.732129892137265*^9, {
   3.732129940318245*^9, 3.732129940653027*^9}, {3.735120065648696*^9, 
   3.735120066906206*^9}, 3.7351201214823503`*^9, {3.735377940960054*^9, 
   3.735377941563971*^9}, {3.7355817944550047`*^9, 3.7355817962972813`*^9}, {
   3.7355822009311733`*^9, 3.735582201422387*^9}, {3.735806093213682*^9, 
   3.7358061110431337`*^9}, 3.735815886447948*^9, 3.735897205945092*^9, {
   3.7360126517264853`*^9, 3.736012675379636*^9}, {3.736012779179078*^9, 
   3.736012794617731*^9}, {3.736013011623317*^9, 3.736013018096143*^9}, {
   3.736013574415472*^9, 3.736013578074375*^9}, 3.736013735899682*^9, {
   3.7360260970178328`*^9, 3.736026128249078*^9}, {3.736026199085821*^9, 
   3.736026199436565*^9}, 3.736026245978737*^9, 3.736026283178073*^9, 
   3.73602643342202*^9, {3.736071633658515*^9, 3.7360716341888647`*^9}, {
   3.7360718157709017`*^9, 3.736071822870947*^9}, {3.736071862547578*^9, 
   3.7360718675907173`*^9}, {3.7374525545456343`*^9, 3.737452574407715*^9}, 
   3.7383368204351387`*^9, 3.738338255972747*^9, 3.738338299645056*^9, {
   3.7395593503768053`*^9, 3.7395593524148912`*^9}, {3.739559403816723*^9, 
   3.73955940484562*^9}, {3.7516476984794703`*^9, 3.7516477106767683`*^9}, {
   3.7516479823105927`*^9, 3.7516479856507587`*^9}, {3.754143096096828*^9, 
   3.754143113803988*^9}, {3.7543844079173717`*^9, 3.754384444151209*^9}, 
   3.754384512795582*^9, 3.75438466973461*^9, 3.754384929375008*^9, {
   3.7543858627351*^9, 3.7543859226831503`*^9}, 3.7543871300816517`*^9, 
   3.754608826473733*^9, {3.755280604362906*^9, 3.755280605016005*^9}, {
   3.755280806436697*^9, 3.755280842135542*^9}, 3.7554359720845137`*^9, 
   3.755684910115588*^9, {3.755705464431643*^9, 3.755705465005785*^9}, {
   3.7559731295403633`*^9, 3.755973132256159*^9}},
 FontSize->16,
 CellLabel->
  "In[182]:=",ExpressionUUID->"2eb0914a-b7bd-4a4a-80fa-ac69b2ebd63e"],

Cell[TextData[{
 "Transformations:\n",
 StyleBox["taylorToBezier, a u x u transform from first u Taylor coefficients \
to first u of n+1 Bernstein coefficients of order n, with u <= n+1.\nThe \
transformation for (n,u) is the top left uxu submatrix of the transformation \
for (n,v) when v > u.\ndataToTaylor, a u x u transform from u uniformly \
spaced data points with spacing 1/n to u Taylor coefficients.\ndataToBezier, \
a u x u transform from a set of u evenly spaced data points with spacing 1/n \
to the first u of n+1 Bernstein coefficients of order n, with u <= n+1.\nThe \
transformation has a reflection symmetry - T(i,j) = T(n-i,n-j) - but not a \
submatrix property like taylorToBezier\[CloseCurlyQuote]s", "Text"]
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731515991976057*^9, 3.7315160168658743`*^9}, {
   3.7319618468465567`*^9, 3.73196185810015*^9}, 3.735897741532148*^9, 
   3.73602629600515*^9, 3.736026433422143*^9, {3.7381456099696074`*^9, 
   3.738145642483931*^9}, 3.738145693586835*^9, {3.738336626367819*^9, 
   3.738336632923174*^9}, 3.738336847120315*^9, 3.7383382559734898`*^9, 
   3.738338299645796*^9, {3.739009051145157*^9, 3.739009063636244*^9}, {
   3.7541222143676233`*^9, 3.7541222657735167`*^9}, 3.7541413743168287`*^9, 
   3.754143113804927*^9, {3.7543850030014877`*^9, 3.754385005904833*^9}, {
   3.754385351916408*^9, 3.7543854000099363`*^9}, {3.7543854308614283`*^9, 
   3.754385458328477*^9}, {3.7543859980787983`*^9, 3.754386025432249*^9}, 
   3.754387130081771*^9, {3.754485487398271*^9, 3.754485582197139*^9}, {
   3.7544879341860456`*^9, 3.754487934547057*^9}, {3.754493841047365*^9, 
   3.754493859972951*^9}, 3.754608826473879*^9, {3.7548200689752197`*^9, 
   3.75482021346402*^9}},
 FontSize->16,ExpressionUUID->"33188028-e5c7-4f01-8c46-f6e5ee9beff8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "taylorToBezierMatrix", ",", "dataToTaylorMatrix", ",", 
    "dataToBezierMatrix"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"taylorToBezierMatrix", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#1", "<", "#2"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{
           RowBox[{"n", "+", "1", "-", "#2"}], ",", 
           RowBox[{"n", "+", "1", "-", "#1"}]}], "]"}], "/", 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", 
           RowBox[{"#1", "-", "1"}]}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "u"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"dataToTaylorMatrix", "[", 
     RowBox[{
      RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "^", 
        RowBox[{"(", "rowl", ")"}]}], 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"colj", "+", "k"}], ")"}]}], " ", 
             RowBox[{
              RowBox[{"StirlingS1", "[", 
               RowBox[{"k", ",", "rowl"}], "]"}], "/", " ", 
              RowBox[{"Factorial", "[", 
               RowBox[{"k", "-", "colj"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"colj", ",", "rowl"}], "}"}], "]"}], ",", 
              RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}], "/", 
          RowBox[{"Factorial", "[", "colj", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"colj", ",", "0", ",", 
           RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"rowl", ",", "0", ",", 
        RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}]}], ";"}],
  FontSize->14], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataToBezierMatrix", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"taylorToBezierMatrix", "[", 
     RowBox[{"n", ",", "u"}], "]"}], " ", ".", " ", 
    RowBox[{"dataToTaylorMatrix", "[", 
     RowBox[{"n", ",", "u"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731794490925537*^9, 3.731794506955234*^9}, {
   3.731882929619594*^9, 3.731882935394905*^9}, {3.731961868662656*^9, 
   3.731961888511642*^9}, {3.73196194981362*^9, 3.731961952356213*^9}, {
   3.731961999193293*^9, 3.731962002073203*^9}, 3.735377868957844*^9, 
   3.735897741532358*^9, {3.736026114129704*^9, 3.736026125843461*^9}, 
   3.736026296005555*^9, 3.73602643342239*^9, {3.7362433797898197`*^9, 
   3.736243380328628*^9}, {3.736287208290736*^9, 3.736287209456901*^9}, {
   3.737984483890965*^9, 3.737984511962612*^9}, {3.737984990237115*^9, 
   3.737985004848363*^9}, 3.738336665554935*^9, 3.738336847120494*^9, 
   3.7383368898034*^9, {3.738338104887143*^9, 3.7383381185668087`*^9}, 
   3.738338255973734*^9, 3.738338299646023*^9, {3.7383944178988028`*^9, 
   3.738394418397745*^9}, {3.7383944850289516`*^9, 3.738394609851923*^9}, {
   3.738394799224453*^9, 3.7383948017422743`*^9}, {3.73841729500432*^9, 
   3.738417327357477*^9}, {3.738949610616933*^9, 3.738949614244711*^9}, {
   3.7389508591309566`*^9, 3.7389508818419533`*^9}, {3.739008187496028*^9, 
   3.7390081961649923`*^9}, {3.739008392954417*^9, 3.739008393379183*^9}, {
   3.739008440355089*^9, 3.7390084407932367`*^9}, {3.739009017776005*^9, 
   3.7390090376137533`*^9}, {3.749555186743133*^9, 3.749555197584284*^9}, {
   3.74955525035618*^9, 3.749555278432848*^9}, {3.749555388295278*^9, 
   3.7495553939160967`*^9}, {3.749555466053526*^9, 3.749555466295764*^9}, {
   3.7495564413708982`*^9, 3.749556479919909*^9}, {3.749556516602826*^9, 
   3.749556547683037*^9}, {3.749579162417766*^9, 3.749579168627864*^9}, {
   3.749579224457796*^9, 3.749579229589809*^9}, 3.7541413743169403`*^9, 
   3.754143113805045*^9, {3.754385331636599*^9, 3.7543853327892447`*^9}, 
   3.754385979432186*^9, {3.7543865960332737`*^9, 3.7543866393542852`*^9}, 
   3.754387130081893*^9, {3.754486996667405*^9, 3.7544870033418417`*^9}, {
   3.754487784837748*^9, 3.754487895868473*^9}, {3.754487971335367*^9, 
   3.754487979520487*^9}, {3.754488072639188*^9, 3.754488075075388*^9}, {
   3.754488116685781*^9, 3.7544881248640203`*^9}, {3.754488182728508*^9, 
   3.754488183950274*^9}, {3.754493913004739*^9, 3.754493914650666*^9}, {
   3.754494057841743*^9, 3.754494060230774*^9}, {3.754494097561964*^9, 
   3.754494099523501*^9}, {3.7545720727185717`*^9, 3.754572072958062*^9}, {
   3.754572270963994*^9, 3.754572279510808*^9}, {3.754572440914484*^9, 
   3.7545724412451687`*^9}, {3.7545725515363283`*^9, 3.75457255674135*^9}, 
   3.754608826475161*^9, {3.754819798488879*^9, 3.754819801188841*^9}, {
   3.754819849399111*^9, 3.754819849678618*^9}, {3.754820448664645*^9, 
   3.754820449200594*^9}, {3.7548205069530354`*^9, 3.7548205079373083`*^9}, {
   3.7548223029984703`*^9, 3.754822304307889*^9}, {3.7548223521355677`*^9, 
   3.754822353379417*^9}, {3.754846520380213*^9, 3.754846576696081*^9}, {
   3.7548669091343946`*^9, 3.7548669092760267`*^9}, {3.7548669771462803`*^9, 
   3.754866977387639*^9}, 3.754958062775313*^9, {3.754958137540442*^9, 
   3.7549581529975758`*^9}, {3.755093511244752*^9, 3.755093540097097*^9}, {
   3.755116490998178*^9, 3.7551165213699627`*^9}, {3.7551166347256107`*^9, 
   3.755116648511799*^9}, {3.755247338067531*^9, 3.75524742682732*^9}, 
   3.7552474926263*^9},
 FontSize->16,
 CellLabel->
  "In[185]:=",ExpressionUUID->"88cb083b-6412-4f74-9ce1-1880850bac1b"],

Cell["\<\
Create a function evaluating the Taylor series given a set of Taylor \
coefficients.
Use this instead of Series to handle the Normal and Evaluate call\
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711918900134482*^9, 3.711918929700522*^9}, {
   3.731517086595916*^9, 3.731517087373741*^9}, 3.731952822863143*^9, 
   3.73589727444311*^9, 3.736026326714252*^9, 3.736026433422798*^9, {
   3.737746306926179*^9, 3.73774632243104*^9}, 3.738336942094256*^9, 
   3.7383382559744263`*^9, 3.738338299646661*^9, {3.7383430448806973`*^9, 
   3.738343083394471*^9}, {3.750355969958082*^9, 3.750355970459041*^9}, 
   3.754141374318205*^9, 3.7541431138060427`*^9, {3.754386202031747*^9, 
   3.754386232304257*^9}, 3.754386323216593*^9, {3.754386542633604*^9, 
   3.754386558976225*^9}, {3.754386829415042*^9, 3.754386867960476*^9}, 
   3.754387130082223*^9, 3.754608826476097*^9},
 FontSize->16,ExpressionUUID->"faf73c06-db0a-4ef5-90cf-01af02531896"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getTaylor", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTaylor", "[", "v_List", "]"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "k", "]"}], "]"}], 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.754386461742337*^9, 3.754386558976416*^9}, {
   3.7543867780476007`*^9, 3.754386787026963*^9}, 3.754387130082326*^9, 
   3.754608826476757*^9, {3.754846974062871*^9, 3.754847012747313*^9}, {
   3.754848035212688*^9, 3.7548480357000217`*^9}, {3.754848111371355*^9, 
   3.754848111542493*^9}},
 FontSize->16,
 CellLabel->
  "In[189]:=",ExpressionUUID->"ba259a72-d1e1-4d0c-8900-546301101a65"],

Cell[TextData[{
 "Create parametric Bezier function from Bernstein coefficients.\nUse ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s representation for this, so we don't have to code de Casteljau's \
algorithm"
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711918900134482*^9, 3.711918929700522*^9}, {
   3.731517086595916*^9, 3.731517087373741*^9}, 3.731952822863143*^9, 
   3.73589727444311*^9, 3.736026326714252*^9, 3.736026433422798*^9, {
   3.737746306926179*^9, 3.73774632243104*^9}, 3.738336942094256*^9, 
   3.7383382559744263`*^9, 3.738338299646661*^9, {3.7383430448806973`*^9, 
   3.738343083394471*^9}, {3.750355969958082*^9, 3.750355970459041*^9}, 
   3.754141374318205*^9, 3.7541431138060427`*^9, {3.754386202031747*^9, 
   3.7543862171607933`*^9}, {3.754386873439093*^9, 3.754386876909111*^9}, 
   3.7543871300825157`*^9, 3.754608826476912*^9, {3.7561392028034773`*^9, 
   3.756139203363161*^9}},
 FontSize->16,ExpressionUUID->"3b0ad7fd-dd0d-445e-a2e3-b0c2cac4f854"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getBezier", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBezier", "[", "v_List", "]"}], " ", ":=", "  ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "v", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"const", "[", 
      RowBox[{"v", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
     RowBox[{"BezierFunction", "[", " ", 
      RowBox[{"vec2pts", "[", "v", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.735897741532681*^9, {3.736011926226245*^9, 3.7360119547429667`*^9}, {
   3.7360128006961203`*^9, 3.73601281023013*^9}, {3.7360129922719727`*^9, 
   3.7360129997495117`*^9}, {3.736013551171611*^9, 3.7360135636565228`*^9}, 
   3.736026326714551*^9, 3.736026433422934*^9, 3.738336942094459*^9, 
   3.73833825597456*^9, 3.7383382996467867`*^9, {3.739546444136469*^9, 
   3.7395464445907784`*^9}, {3.7397207282430353`*^9, 3.739720739188971*^9}, {
   3.74973117402295*^9, 3.749731206868979*^9}, {3.749731331461752*^9, 
   3.749731356718264*^9}, {3.749731477361455*^9, 3.7497314975249567`*^9}, {
   3.751234457953278*^9, 3.7512344659450293`*^9}, 3.7512349155208178`*^9, {
   3.751239537170937*^9, 3.7512396055537863`*^9}, {3.75123969834319*^9, 
   3.751239698440075*^9}, {3.751647961955497*^9, 3.751647969951325*^9}, {
   3.751649375669798*^9, 3.751649378441306*^9}, 3.754141374318309*^9, 
   3.754143113806158*^9, {3.7543868897851353`*^9, 3.754386902076387*^9}, 
   3.754387130082705*^9, 3.754608826477573*^9, {3.754610312934773*^9, 
   3.7546103136766787`*^9}},
 FontSize->16,
 CellLabel->
  "In[191]:=",ExpressionUUID->"67abda04-21ef-4c91-9d41-85df673c975e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "A", " ", "handy", " ", "function", " ", "for", " ", "blending", " ", 
   "colors"}], "Subsection",
  FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.732102558470532*^9, 3.732102596924732*^9}, {
   3.732114111910469*^9, 3.732114125581332*^9}, 3.732127502718733*^9, {
   3.732127533911353*^9, 3.732127550674966*^9}, {3.732127754237446*^9, 
   3.732127756993832*^9}, 3.7321288693227873`*^9, 3.73212891241963*^9, {
   3.732129415088895*^9, 3.732129425875176*^9}, {3.732129531845398*^9, 
   3.732129539033947*^9}, {3.732129953096222*^9, 3.732129958382139*^9}, {
   3.732130142641169*^9, 3.732130145759368*^9}, {3.73213018008291*^9, 
   3.732130206552321*^9}, {3.732130261505451*^9, 3.732130293497067*^9}, 
   3.7321304563241577`*^9, {3.7353779265778437`*^9, 3.735377936022112*^9}, {
   3.735471217068565*^9, 3.735471217900042*^9}, {3.7354969877023487`*^9, 
   3.735497092407927*^9}, {3.735544390943672*^9, 3.735544490189165*^9}, {
   3.735544543651828*^9, 3.735544607064198*^9}, {3.7355446616688232`*^9, 
   3.735544742578315*^9}, {3.735545139566977*^9, 3.735545208603848*^9}, {
   3.735552823769908*^9, 3.735552851835826*^9}, {3.7355578082832813`*^9, 
   3.735557818485927*^9}, {3.735559931339283*^9, 3.735559941100843*^9}, {
   3.735573240997778*^9, 3.735573249815032*^9}, {3.735594938713717*^9, 
   3.7355949439199944`*^9}, {3.735648909098857*^9, 3.735648910443869*^9}, {
   3.735648983570158*^9, 3.735648984393262*^9}, {3.735649018992484*^9, 
   3.7356490199346046`*^9}, {3.7356492326335163`*^9, 3.735649234654158*^9}, {
   3.735649268966217*^9, 3.735649270315702*^9}, {3.7356493152226543`*^9, 
   3.7356493612592983`*^9}, {3.735649663487281*^9, 3.73564968664286*^9}, {
   3.735649720842136*^9, 3.735649721309225*^9}, {3.735649819354648*^9, 
   3.735649838128467*^9}, {3.735649906570437*^9, 3.735649947850012*^9}, {
   3.735650030120523*^9, 3.735650081311432*^9}, {3.7356501412093973`*^9, 
   3.7356501459930677`*^9}, {3.7356501829128036`*^9, 3.735650226245116*^9}, {
   3.735650478307385*^9, 3.735650504144185*^9}, 3.735650624026601*^9, 
   3.735650660339768*^9, {3.7356506916645107`*^9, 3.735650694678915*^9}, {
   3.735650850326685*^9, 3.735650857932954*^9}, 3.735650893815444*^9, {
   3.735650948606904*^9, 3.735650978500313*^9}, {3.73565101058393*^9, 
   3.7356510304238977`*^9}, {3.7356511971156178`*^9, 
   3.7356512182962713`*^9}, {3.7356512709238234`*^9, 
   3.7356513073063374`*^9}, {3.735651347298937*^9, 3.735651348684575*^9}, {
   3.7356514107478657`*^9, 3.7356514157977667`*^9}, {3.735651508217677*^9, 
   3.7356515107373667`*^9}, {3.735651739144951*^9, 3.73565174051714*^9}, {
   3.7356517708043747`*^9, 3.7356517755452013`*^9}, {3.735651843042183*^9, 
   3.735651843200083*^9}, {3.7356520861355057`*^9, 3.735652086311399*^9}, {
   3.735652142066935*^9, 3.735652153016406*^9}, {3.735652193319667*^9, 
   3.7356521942960052`*^9}, {3.7356564414616823`*^9, 3.735656463366888*^9}, {
   3.735656644584326*^9, 3.735656703445451*^9}, {3.735656769066917*^9, 
   3.735656785443611*^9}, {3.735657005341816*^9, 3.7356570078911123`*^9}, {
   3.7356570629144077`*^9, 3.735657089789373*^9}, {3.735657145670114*^9, 
   3.735657174772538*^9}, {3.7356572735232277`*^9, 3.735657273850128*^9}, {
   3.73565732821902*^9, 3.735657328398617*^9}, {3.735657507029476*^9, 
   3.735657507622349*^9}, {3.735657582698598*^9, 3.735657590116972*^9}, {
   3.735657669862496*^9, 3.735657673802615*^9}, {3.735657744208853*^9, 
   3.735657757338828*^9}, {3.735657868896912*^9, 3.735657876664234*^9}, {
   3.735657947959414*^9, 3.735657948256514*^9}, {3.735658138909597*^9, 
   3.735658151303543*^9}, {3.735658185755516*^9, 3.7356581862153797`*^9}, {
   3.735658243972733*^9, 3.735658244319949*^9}, {3.73565831268548*^9, 
   3.735658312820302*^9}, 3.735658362380023*^9, {3.735658731353294*^9, 
   3.735658757122815*^9}, {3.735658798617049*^9, 3.735658800032707*^9}, {
   3.735658890604041*^9, 3.7356589063903437`*^9}, {3.73565894091717*^9, 
   3.7356589416763563`*^9}, {3.7356590386338673`*^9, 3.73565904342778*^9}, {
   3.735659125278323*^9, 3.735659137557932*^9}, {3.735659194111389*^9, 
   3.735659226093783*^9}, {3.735659348101001*^9, 3.735659350441386*^9}, {
   3.7356593845342293`*^9, 3.7356593896012707`*^9}, {3.735659446647326*^9, 
   3.735659500662261*^9}, {3.735659546539844*^9, 3.735659631429043*^9}, {
   3.735659785703455*^9, 3.735659788769508*^9}, 3.735660005142871*^9, {
   3.7356602596693563`*^9, 3.7356602638360577`*^9}, {3.735660421077979*^9, 
   3.735660481426803*^9}, {3.735660575078257*^9, 3.735660585952731*^9}, {
   3.735660617496057*^9, 3.735660619342904*^9}, {3.735661285821167*^9, 
   3.735661322529772*^9}, 3.7356614215336246`*^9, {3.735661461387319*^9, 
   3.735661487733156*^9}, {3.735662102446289*^9, 3.735662104937661*^9}, {
   3.735662164035537*^9, 3.735662191962673*^9}, {3.735662473827285*^9, 
   3.735662477153921*^9}, 3.735662551319089*^9, 3.735662595138855*^9, {
   3.7356626379706593`*^9, 3.735662642630128*^9}, {3.735662753734091*^9, 
   3.735662757084713*^9}, {3.735662839759568*^9, 3.735662858015263*^9}, {
   3.7356630553615313`*^9, 3.7356630572435503`*^9}, {3.735663116950877*^9, 
   3.735663118034788*^9}, 3.735663171039967*^9, {3.735667787985681*^9, 
   3.7356677920390387`*^9}, {3.735668081677809*^9, 3.7356680821259127`*^9}, {
   3.735668117460107*^9, 3.735668122696991*^9}, {3.735668199237842*^9, 
   3.735668203102934*^9}, {3.735668234494392*^9, 3.735668237676284*^9}, {
   3.73566826964065*^9, 3.7356682714232388`*^9}, {3.735679345887114*^9, 
   3.735679349645239*^9}, 3.735679415446059*^9, {3.735679535877398*^9, 
   3.735679539947708*^9}, {3.735716822120146*^9, 3.735716826017959*^9}, {
   3.735717193607283*^9, 3.735717211845129*^9}, {3.7357185021155376`*^9, 
   3.735718506415629*^9}, {3.7358047147111263`*^9, 3.735804799875762*^9}, {
   3.735805424270052*^9, 3.735805478092518*^9}, {3.735812575126211*^9, 
   3.735812576628275*^9}, {3.7358126265955677`*^9, 3.735812686176869*^9}, {
   3.735812752605093*^9, 3.735812752898879*^9}, {3.735812824005891*^9, 
   3.735812844020234*^9}, {3.735812897639289*^9, 3.735812897951201*^9}, {
   3.7358129513483257`*^9, 3.7358129564518213`*^9}, {3.735813241213028*^9, 
   3.735813245002002*^9}, {3.7358134784055557`*^9, 3.735813510833126*^9}, {
   3.735813637742559*^9, 3.735813639460161*^9}, {3.735815871832745*^9, 
   3.73581588319838*^9}, {3.735816242932254*^9, 3.735816260339443*^9}, {
   3.735816608974957*^9, 3.735816615630777*^9}, {3.735817121819501*^9, 
   3.7358171433285933`*^9}, {3.735818934579434*^9, 3.7358189393627577`*^9}, {
   3.7358189789150867`*^9, 3.735819008394449*^9}, {3.735896881234867*^9, 
   3.735896904338406*^9}, {3.735896944596465*^9, 3.735897023375228*^9}, {
   3.735897110973425*^9, 3.7358971521010647`*^9}, 3.735897185261899*^9, 
   3.7358972268437147`*^9, 3.735897284960593*^9, 3.7358977415329943`*^9, {
   3.735996146616042*^9, 3.735996166430722*^9}, {3.73599719299754*^9, 
   3.735997219430043*^9}, {3.735997254342575*^9, 3.735997259048862*^9}, {
   3.73600471967866*^9, 3.736004742521473*^9}, {3.736004777881364*^9, 
   3.7360047944411793`*^9}, {3.736009724822525*^9, 3.736009750739831*^9}, {
   3.736009813768564*^9, 3.7360098200550203`*^9}, {3.736010375102098*^9, 
   3.7360103954618*^9}, {3.736011014752948*^9, 3.736011019627995*^9}, {
   3.736011779648005*^9, 3.736011794075474*^9}, {3.736012510523621*^9, 
   3.7360125471590357`*^9}, {3.73601360306706*^9, 3.736013615448307*^9}, {
   3.7360138849032917`*^9, 3.736013917137372*^9}, {3.73601437929885*^9, 
   3.736014444133556*^9}, {3.736014552279443*^9, 3.736014609988225*^9}, {
   3.736015079214229*^9, 3.736015083907708*^9}, {3.736029460184594*^9, 
   3.736029471689818*^9}, {3.736060494124907*^9, 3.736060503506702*^9}, {
   3.7360637552643433`*^9, 3.736063769630118*^9}, 3.7360638247862186`*^9, {
   3.736063907784808*^9, 3.736063943566558*^9}, {3.736064039261862*^9, 
   3.73606404853127*^9}, {3.7360640819687843`*^9, 3.736064115334218*^9}, {
   3.736064165296238*^9, 3.736064166357782*^9}, {3.7360642555311728`*^9, 
   3.7360642747374496`*^9}, {3.736069149383876*^9, 3.736069166894781*^9}, {
   3.736069216397773*^9, 3.7360692267739353`*^9}, {3.736069257710615*^9, 
   3.736069269549946*^9}, {3.736069377265367*^9, 3.736069399494419*^9}, 
   3.7360694437663097`*^9, {3.736069475077023*^9, 3.7360694826447897`*^9}, {
   3.736069545940703*^9, 3.73606957544727*^9}, {3.73606962312125*^9, 
   3.7360696439539747`*^9}, {3.7360697301236258`*^9, 
   3.7360697627038193`*^9}, {3.7360698550376577`*^9, 3.736069910953578*^9}, {
   3.736069962639583*^9, 3.7360699818446817`*^9}, {3.7360701351315393`*^9, 
   3.736070149502872*^9}, {3.7360702781226473`*^9, 3.736070309877666*^9}, {
   3.7360704370945873`*^9, 3.736070476877026*^9}, {3.7360705735490437`*^9, 
   3.736070581434545*^9}, {3.7360722297050047`*^9, 3.73607225787475*^9}, {
   3.736072344049917*^9, 3.7360723578438263`*^9}, {3.736072540319373*^9, 
   3.7360725700046787`*^9}, {3.736072874373708*^9, 3.736072888881075*^9}, 
   3.736072975562001*^9, {3.736073208189991*^9, 3.736073216608439*^9}, {
   3.736074252473456*^9, 3.736074253697016*^9}, {3.737583105200396*^9, 
   3.737583149273025*^9}, {3.737583233297176*^9, 3.737583242414022*^9}, {
   3.737583274904525*^9, 3.737583277054326*^9}, {3.737583321606761*^9, 
   3.737583321989436*^9}, {3.737583382026021*^9, 3.73758338231382*^9}, {
   3.737583470402184*^9, 3.737583478080389*^9}, {3.737583529292481*^9, 
   3.7375835428344193`*^9}, {3.737583580866963*^9, 3.737583606937386*^9}, {
   3.737583647050335*^9, 3.737583663753199*^9}, {3.737583714611822*^9, 
   3.737583766296604*^9}, {3.737584069841462*^9, 3.737584134580638*^9}, {
   3.737584189437498*^9, 3.73758419333123*^9}, {3.7375842449055023`*^9, 
   3.737584246319572*^9}, {3.7376161329083357`*^9, 3.737616133393921*^9}, {
   3.7376161635957737`*^9, 3.737616163771865*^9}, {3.7376162681422377`*^9, 
   3.737616272437068*^9}, {3.737616324824353*^9, 3.7376163254790173`*^9}, {
   3.7376274183744297`*^9, 3.737627421155357*^9}, {3.7376274765552597`*^9, 
   3.7376274772968903`*^9}, {3.7376275224444027`*^9, 3.737627532644855*^9}, {
   3.737627744457905*^9, 3.737627776087906*^9}, {3.737628227409569*^9, 
   3.737628228150621*^9}, {3.7376284219486723`*^9, 3.737628424507503*^9}, {
   3.737629098727312*^9, 3.737629138227416*^9}, {3.7376296907590847`*^9, 
   3.737629691372527*^9}, {3.737886230220046*^9, 3.7378862414963713`*^9}, 
   3.737904998577546*^9, {3.737905086237756*^9, 3.7379050908476133`*^9}, {
   3.738060126307167*^9, 3.738060145190583*^9}, {3.738060246608797*^9, 
   3.7380602704241753`*^9}, {3.738060305651835*^9, 3.73806064449373*^9}, {
   3.738060692221726*^9, 3.738060692407413*^9}, {3.738063309246949*^9, 
   3.7380633103679*^9}, {3.7380636083317957`*^9, 3.738063695223586*^9}, {
   3.738063757560666*^9, 3.738063788381259*^9}, 3.738063897590468*^9, {
   3.7380639519796047`*^9, 3.7380639764985228`*^9}, {3.738064021996833*^9, 
   3.7380640224957237`*^9}, {3.7380641237675056`*^9, 3.738064132541601*^9}, 
   3.738064199953803*^9, {3.738064235750361*^9, 3.73806423630132*^9}, {
   3.7380643532275743`*^9, 3.7380643594905157`*^9}, {3.738064542601453*^9, 
   3.738064585701955*^9}, 3.738064716048737*^9, {3.738064778422545*^9, 
   3.7380648272702723`*^9}, {3.7380649863302183`*^9, 
   3.7380649866072493`*^9}, {3.738065050991549*^9, 3.738065066253873*^9}, {
   3.738065152295841*^9, 3.738065183416922*^9}, {3.7380653110048313`*^9, 
   3.738065369501004*^9}, {3.738065693145309*^9, 3.7380657000089483`*^9}, {
   3.738065825663471*^9, 3.7380658319658813`*^9}, {3.738065917268165*^9, 
   3.738065938270413*^9}, {3.73806638877108*^9, 3.738066416537117*^9}, {
   3.738066873956883*^9, 3.738066886530813*^9}, {3.738067164065469*^9, 
   3.738067171603098*^9}, {3.7380684819357157`*^9, 3.738068482370283*^9}, 
   3.738068547549898*^9, {3.7380701305767107`*^9, 3.73807014853202*^9}, {
   3.73807020697453*^9, 3.7380703760341873`*^9}, {3.7380705009723167`*^9, 
   3.7380705230107117`*^9}, {3.738070595356567*^9, 3.738070616337229*^9}, {
   3.738070953959182*^9, 3.7380709814808283`*^9}, {3.738071086575954*^9, 
   3.738071184047433*^9}, {3.738071226084917*^9, 3.7380713195574617`*^9}, {
   3.7380714131055183`*^9, 3.738071440354623*^9}, {3.7380716251471157`*^9, 
   3.7380716392590027`*^9}, {3.738071766125103*^9, 3.7380717744904213`*^9}, {
   3.738071876317552*^9, 3.73807202447581*^9}, {3.738072059420164*^9, 
   3.738072119190864*^9}, {3.738072173069127*^9, 3.738072184591444*^9}, 
   3.738336955301879*^9, 3.738338255975171*^9, 3.738338299647402*^9, {
   3.738345177779957*^9, 3.7383452298960752`*^9}, {3.738345325466111*^9, 
   3.7383454065951967`*^9}, {3.738345488403368*^9, 3.738345519405736*^9}, {
   3.738345572520175*^9, 3.738345576026328*^9}, {3.738750630787716*^9, 
   3.738750631850519*^9}, {3.738916901497798*^9, 3.738916902990119*^9}, {
   3.738916972368675*^9, 3.738917000487556*^9}, {3.738949491787883*^9, 
   3.738949497738669*^9}, {3.738949893639947*^9, 3.738949895149749*^9}, {
   3.739027402368133*^9, 3.739027414030789*^9}, {3.739027459120232*^9, 
   3.7390276187476263`*^9}, {3.7390276751154413`*^9, 
   3.7390276824353313`*^9}, {3.739027724193676*^9, 3.739027806193705*^9}, {
   3.73902787123553*^9, 3.739027871718473*^9}, {3.739028960833784*^9, 
   3.739028976987287*^9}, {3.739029069297614*^9, 3.739029074226367*^9}, {
   3.739029121063493*^9, 3.739029125818853*^9}, {3.739029173158266*^9, 
   3.739029177595796*^9}, {3.7390304594770203`*^9, 3.739030619075742*^9}, {
   3.7390315971133327`*^9, 3.739031630836677*^9}, {3.7390317151679277`*^9, 
   3.739031756649603*^9}, {3.739032300023691*^9, 3.739032344042932*^9}, {
   3.739032497018454*^9, 3.7390324974147577`*^9}, {3.739032759460058*^9, 
   3.7390328725469093`*^9}, 3.7390329337919407`*^9, {3.739033056409433*^9, 
   3.739033071854867*^9}, {3.739033163499449*^9, 3.7390332003926897`*^9}, 
   3.739033326934861*^9, 3.7390334969196577`*^9, {3.73903359704207*^9, 
   3.739033607588441*^9}, {3.739033869461527*^9, 3.73903387478139*^9}, {
   3.7390339275551157`*^9, 3.739033928558723*^9}, {3.739034056746669*^9, 
   3.739034103865707*^9}, {3.739034159634879*^9, 3.739034172048512*^9}, {
   3.739034278075027*^9, 3.739034383622189*^9}, {3.739034419439253*^9, 
   3.739034516254603*^9}, {3.7390345475499697`*^9, 3.739034659351832*^9}, {
   3.739034825851264*^9, 3.739034925287147*^9}, {3.739266590046399*^9, 
   3.739266603949102*^9}, 3.7392672832551537`*^9, {3.739267316492694*^9, 
   3.7392673230424757`*^9}, {3.739267365701989*^9, 3.739267489686923*^9}, {
   3.7392675415387497`*^9, 3.739267596904351*^9}, {3.739445861995351*^9, 
   3.739445865467003*^9}, {3.739473147393931*^9, 3.7394731493456907`*^9}, {
   3.739473192605424*^9, 3.7394733086851254`*^9}, {3.7395189834549437`*^9, 
   3.739518984276642*^9}, {3.7395190652857647`*^9, 3.739519141325289*^9}, {
   3.739519183579854*^9, 3.739519192793034*^9}, 3.7395194451661577`*^9, {
   3.7395209299859943`*^9, 3.739520946591774*^9}, {3.739521195736208*^9, 
   3.739521200697063*^9}, 3.739530972042251*^9, {3.739531247089264*^9, 
   3.739531315921474*^9}, {3.739532091938456*^9, 3.739532094504354*^9}, {
   3.739532243327567*^9, 3.739532244939783*^9}, {3.7397453215135193`*^9, 
   3.739745549450139*^9}, {3.739745580038732*^9, 3.739745615272418*^9}, {
   3.739747036627203*^9, 3.73974703937719*^9}, {3.7397472435583553`*^9, 
   3.739747293836514*^9}, {3.7397783932812653`*^9, 3.739778426422077*^9}, {
   3.739779626804604*^9, 3.739779627364358*^9}, {3.740260846112743*^9, 
   3.740260894331525*^9}, {3.7402609879265203`*^9, 3.740261094517726*^9}, {
   3.740261133941517*^9, 3.740261139372734*^9}, 3.740261419157898*^9, {
   3.749745507147835*^9, 3.7497455215268307`*^9}, {3.74974617774559*^9, 
   3.7497461884038773`*^9}, 3.749753729054751*^9, {3.749852864555781*^9, 
   3.74985286591755*^9}, 3.749852902803667*^9, {3.751412556589727*^9, 
   3.751412564145056*^9}, {3.751560129817213*^9, 3.75156017256548*^9}, {
   3.751560240243009*^9, 3.751560241343515*^9}, 3.754072864411167*^9, {
   3.754072970262003*^9, 3.754072978689069*^9}, {3.754073133513612*^9, 
   3.754073206435289*^9}, {3.75407334376059*^9, 3.754073349369935*^9}, 
   3.754141321553521*^9, 3.754143113806361*^9, {3.754386938301261*^9, 
   3.754386975544094*^9}, {3.7543870172745457`*^9, 3.754387075665242*^9}, 
   3.7543871165053263`*^9, 3.7546088264782057`*^9},
 FontSize->16,ExpressionUUID->"367dfbb4-5237-404a-8971-7378dcb3f1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ramp", "[", 
    RowBox[{"x_", ",", "ml_", ",", "mr_", ",", "m_"}], "]"}], ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"x", "<", 
          RowBox[{"ml", "/", "m"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"x", ">", 
          RowBox[{"1", "-", 
           RowBox[{"mr", "/", "m"}]}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"x", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "-", "ml"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"m", "-", "mr", "-", "ml"}], ")"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.732102558470532*^9, 3.732102596924732*^9}, {
   3.732114111910469*^9, 3.732114125581332*^9}, 3.732127502718733*^9, {
   3.732127533911353*^9, 3.732127550674966*^9}, {3.732127754237446*^9, 
   3.732127756993832*^9}, 3.7321288693227873`*^9, 3.73212891241963*^9, {
   3.732129415088895*^9, 3.732129425875176*^9}, {3.732129531845398*^9, 
   3.732129539033947*^9}, {3.732129953096222*^9, 3.732129958382139*^9}, {
   3.732130142641169*^9, 3.732130145759368*^9}, {3.73213018008291*^9, 
   3.732130206552321*^9}, {3.732130261505451*^9, 3.732130293497067*^9}, 
   3.7321304563241577`*^9, {3.7353779265778437`*^9, 3.735377936022112*^9}, {
   3.735471217068565*^9, 3.735471217900042*^9}, {3.7354969877023487`*^9, 
   3.735497092407927*^9}, {3.735544390943672*^9, 3.735544490189165*^9}, {
   3.735544543651828*^9, 3.735544607064198*^9}, {3.7355446616688232`*^9, 
   3.735544742578315*^9}, {3.735545139566977*^9, 3.735545208603848*^9}, {
   3.735552823769908*^9, 3.735552851835826*^9}, {3.7355578082832813`*^9, 
   3.735557818485927*^9}, {3.735559931339283*^9, 3.735559941100843*^9}, {
   3.735573240997778*^9, 3.735573249815032*^9}, {3.735594938713717*^9, 
   3.7355949439199944`*^9}, {3.735648909098857*^9, 3.735648910443869*^9}, {
   3.735648983570158*^9, 3.735648984393262*^9}, {3.735649018992484*^9, 
   3.7356490199346046`*^9}, {3.7356492326335163`*^9, 3.735649234654158*^9}, {
   3.735649268966217*^9, 3.735649270315702*^9}, {3.7356493152226543`*^9, 
   3.7356493612592983`*^9}, {3.735649663487281*^9, 3.73564968664286*^9}, {
   3.735649720842136*^9, 3.735649721309225*^9}, {3.735649819354648*^9, 
   3.735649838128467*^9}, {3.735649906570437*^9, 3.735649947850012*^9}, {
   3.735650030120523*^9, 3.735650081311432*^9}, {3.7356501412093973`*^9, 
   3.7356501459930677`*^9}, {3.7356501829128036`*^9, 3.735650226245116*^9}, {
   3.735650478307385*^9, 3.735650504144185*^9}, 3.735650624026601*^9, 
   3.735650660339768*^9, {3.7356506916645107`*^9, 3.735650694678915*^9}, {
   3.735650850326685*^9, 3.735650857932954*^9}, 3.735650893815444*^9, {
   3.735650948606904*^9, 3.735650978500313*^9}, {3.73565101058393*^9, 
   3.7356510304238977`*^9}, {3.7356511971156178`*^9, 
   3.7356512182962713`*^9}, {3.7356512709238234`*^9, 
   3.7356513073063374`*^9}, {3.735651347298937*^9, 3.735651348684575*^9}, {
   3.7356514107478657`*^9, 3.7356514157977667`*^9}, {3.735651508217677*^9, 
   3.7356515107373667`*^9}, {3.735651739144951*^9, 3.73565174051714*^9}, {
   3.7356517708043747`*^9, 3.7356517755452013`*^9}, {3.735651843042183*^9, 
   3.735651843200083*^9}, {3.7356520861355057`*^9, 3.735652086311399*^9}, {
   3.735652142066935*^9, 3.735652153016406*^9}, {3.735652193319667*^9, 
   3.7356521942960052`*^9}, {3.7356564414616823`*^9, 3.735656463366888*^9}, {
   3.735656644584326*^9, 3.735656703445451*^9}, {3.735656769066917*^9, 
   3.735656785443611*^9}, {3.735657005341816*^9, 3.7356570078911123`*^9}, {
   3.7356570629144077`*^9, 3.735657089789373*^9}, {3.735657145670114*^9, 
   3.735657174772538*^9}, {3.7356572735232277`*^9, 3.735657273850128*^9}, {
   3.73565732821902*^9, 3.735657328398617*^9}, {3.735657507029476*^9, 
   3.735657507622349*^9}, {3.735657582698598*^9, 3.735657590116972*^9}, {
   3.735657669862496*^9, 3.735657673802615*^9}, {3.735657744208853*^9, 
   3.735657757338828*^9}, {3.735657868896912*^9, 3.735657876664234*^9}, {
   3.735657947959414*^9, 3.735657948256514*^9}, {3.735658138909597*^9, 
   3.735658151303543*^9}, {3.735658185755516*^9, 3.7356581862153797`*^9}, {
   3.735658243972733*^9, 3.735658244319949*^9}, {3.73565831268548*^9, 
   3.735658312820302*^9}, 3.735658362380023*^9, {3.735658731353294*^9, 
   3.735658757122815*^9}, {3.735658798617049*^9, 3.735658800032707*^9}, {
   3.735658890604041*^9, 3.7356589063903437`*^9}, {3.73565894091717*^9, 
   3.7356589416763563`*^9}, {3.7356590386338673`*^9, 3.73565904342778*^9}, {
   3.735659125278323*^9, 3.735659137557932*^9}, {3.735659194111389*^9, 
   3.735659226093783*^9}, {3.735659348101001*^9, 3.735659350441386*^9}, {
   3.7356593845342293`*^9, 3.7356593896012707`*^9}, {3.735659446647326*^9, 
   3.735659500662261*^9}, {3.735659546539844*^9, 3.735659631429043*^9}, {
   3.735659785703455*^9, 3.735659788769508*^9}, 3.735660005142871*^9, {
   3.7356602596693563`*^9, 3.7356602638360577`*^9}, {3.735660421077979*^9, 
   3.735660481426803*^9}, {3.735660575078257*^9, 3.735660585952731*^9}, {
   3.735660617496057*^9, 3.735660619342904*^9}, {3.735661285821167*^9, 
   3.735661322529772*^9}, 3.7356614215336246`*^9, {3.735661461387319*^9, 
   3.735661487733156*^9}, {3.735662102446289*^9, 3.735662104937661*^9}, {
   3.735662164035537*^9, 3.735662191962673*^9}, {3.735662473827285*^9, 
   3.735662477153921*^9}, 3.735662551319089*^9, 3.735662595138855*^9, {
   3.7356626379706593`*^9, 3.735662642630128*^9}, {3.735662753734091*^9, 
   3.735662757084713*^9}, {3.735662839759568*^9, 3.735662858015263*^9}, {
   3.7356630553615313`*^9, 3.7356630572435503`*^9}, {3.735663116950877*^9, 
   3.735663118034788*^9}, 3.735663171039967*^9, {3.735667787985681*^9, 
   3.7356677920390387`*^9}, {3.735668081677809*^9, 3.7356680821259127`*^9}, {
   3.735668117460107*^9, 3.735668122696991*^9}, {3.735668199237842*^9, 
   3.735668203102934*^9}, {3.735668234494392*^9, 3.735668237676284*^9}, {
   3.73566826964065*^9, 3.7356682714232388`*^9}, {3.735679345887114*^9, 
   3.735679349645239*^9}, 3.735679415446059*^9, {3.735679535877398*^9, 
   3.735679539947708*^9}, {3.735716822120146*^9, 3.735716826017959*^9}, {
   3.735717193607283*^9, 3.735717211845129*^9}, {3.7357185021155376`*^9, 
   3.735718506415629*^9}, {3.7358047147111263`*^9, 3.735804799875762*^9}, {
   3.735805424270052*^9, 3.735805478092518*^9}, {3.735812575126211*^9, 
   3.735812576628275*^9}, {3.7358126265955677`*^9, 3.735812686176869*^9}, {
   3.735812752605093*^9, 3.735812752898879*^9}, {3.735812824005891*^9, 
   3.735812844020234*^9}, {3.735812897639289*^9, 3.735812897951201*^9}, {
   3.7358129513483257`*^9, 3.7358129564518213`*^9}, {3.735813241213028*^9, 
   3.735813245002002*^9}, {3.7358134784055557`*^9, 3.735813510833126*^9}, {
   3.735813637742559*^9, 3.735813639460161*^9}, {3.735815871832745*^9, 
   3.73581588319838*^9}, {3.735816242932254*^9, 3.735816260339443*^9}, {
   3.735816608974957*^9, 3.735816615630777*^9}, {3.735817121819501*^9, 
   3.7358171433285933`*^9}, {3.735818934579434*^9, 3.7358189393627577`*^9}, {
   3.7358189789150867`*^9, 3.735819008394449*^9}, {3.735896881234867*^9, 
   3.735896904338406*^9}, {3.735896944596465*^9, 3.735897023375228*^9}, {
   3.735897110973425*^9, 3.7358971521010647`*^9}, 3.735897185261899*^9, 
   3.7358972268437147`*^9, 3.735897284960593*^9, 3.7358977415329943`*^9, {
   3.735996146616042*^9, 3.735996166430722*^9}, {3.73599719299754*^9, 
   3.735997219430043*^9}, {3.735997254342575*^9, 3.735997259048862*^9}, {
   3.73600471967866*^9, 3.736004742521473*^9}, {3.736004777881364*^9, 
   3.7360047944411793`*^9}, {3.736009724822525*^9, 3.736009750739831*^9}, {
   3.736009813768564*^9, 3.7360098200550203`*^9}, {3.736010375102098*^9, 
   3.7360103954618*^9}, {3.736011014752948*^9, 3.736011019627995*^9}, {
   3.736011779648005*^9, 3.736011794075474*^9}, {3.736012510523621*^9, 
   3.7360125471590357`*^9}, {3.73601360306706*^9, 3.736013615448307*^9}, {
   3.7360138849032917`*^9, 3.736013917137372*^9}, {3.73601437929885*^9, 
   3.736014444133556*^9}, {3.736014552279443*^9, 3.736014609988225*^9}, {
   3.736015079214229*^9, 3.736015083907708*^9}, {3.736029460184594*^9, 
   3.736029471689818*^9}, {3.736060494124907*^9, 3.736060503506702*^9}, {
   3.7360637552643433`*^9, 3.736063769630118*^9}, 3.7360638247862186`*^9, {
   3.736063907784808*^9, 3.736063943566558*^9}, {3.736064039261862*^9, 
   3.73606404853127*^9}, {3.7360640819687843`*^9, 3.736064115334218*^9}, {
   3.736064165296238*^9, 3.736064166357782*^9}, {3.7360642555311728`*^9, 
   3.7360642747374496`*^9}, {3.736069149383876*^9, 3.736069166894781*^9}, {
   3.736069216397773*^9, 3.7360692267739353`*^9}, {3.736069257710615*^9, 
   3.736069269549946*^9}, {3.736069377265367*^9, 3.736069399494419*^9}, 
   3.7360694437663097`*^9, {3.736069475077023*^9, 3.7360694826447897`*^9}, {
   3.736069545940703*^9, 3.73606957544727*^9}, {3.73606962312125*^9, 
   3.7360696439539747`*^9}, {3.7360697301236258`*^9, 
   3.7360697627038193`*^9}, {3.7360698550376577`*^9, 3.736069910953578*^9}, {
   3.736069962639583*^9, 3.7360699818446817`*^9}, {3.7360701351315393`*^9, 
   3.736070149502872*^9}, {3.7360702781226473`*^9, 3.736070309877666*^9}, {
   3.7360704370945873`*^9, 3.736070476877026*^9}, {3.7360705735490437`*^9, 
   3.736070581434545*^9}, {3.7360722297050047`*^9, 3.73607225787475*^9}, {
   3.736072344049917*^9, 3.7360723578438263`*^9}, {3.736072540319373*^9, 
   3.7360725700046787`*^9}, {3.736072874373708*^9, 3.736072888881075*^9}, 
   3.736072975562001*^9, {3.736073208189991*^9, 3.736073216608439*^9}, {
   3.736074252473456*^9, 3.736074253697016*^9}, {3.737583105200396*^9, 
   3.737583149273025*^9}, {3.737583233297176*^9, 3.737583242414022*^9}, {
   3.737583274904525*^9, 3.737583277054326*^9}, {3.737583321606761*^9, 
   3.737583321989436*^9}, {3.737583382026021*^9, 3.73758338231382*^9}, {
   3.737583470402184*^9, 3.737583478080389*^9}, {3.737583529292481*^9, 
   3.7375835428344193`*^9}, {3.737583580866963*^9, 3.737583606937386*^9}, {
   3.737583647050335*^9, 3.737583663753199*^9}, {3.737583714611822*^9, 
   3.737583766296604*^9}, {3.737584069841462*^9, 3.737584134580638*^9}, {
   3.737584189437498*^9, 3.73758419333123*^9}, {3.7375842449055023`*^9, 
   3.737584246319572*^9}, {3.7376161329083357`*^9, 3.737616133393921*^9}, {
   3.7376161635957737`*^9, 3.737616163771865*^9}, {3.7376162681422377`*^9, 
   3.737616272437068*^9}, {3.737616324824353*^9, 3.7376163254790173`*^9}, {
   3.7376274183744297`*^9, 3.737627421155357*^9}, {3.7376274765552597`*^9, 
   3.7376274772968903`*^9}, {3.7376275224444027`*^9, 3.737627532644855*^9}, {
   3.737627744457905*^9, 3.737627776087906*^9}, {3.737628227409569*^9, 
   3.737628228150621*^9}, {3.7376284219486723`*^9, 3.737628424507503*^9}, {
   3.737629098727312*^9, 3.737629138227416*^9}, {3.7376296907590847`*^9, 
   3.737629691372527*^9}, {3.737886230220046*^9, 3.7378862414963713`*^9}, 
   3.737904998577546*^9, {3.737905086237756*^9, 3.7379050908476133`*^9}, {
   3.738060126307167*^9, 3.738060145190583*^9}, {3.738060246608797*^9, 
   3.7380602704241753`*^9}, {3.738060305651835*^9, 3.73806064449373*^9}, {
   3.738060692221726*^9, 3.738060692407413*^9}, {3.738063309246949*^9, 
   3.7380633103679*^9}, {3.7380636083317957`*^9, 3.738063695223586*^9}, {
   3.738063757560666*^9, 3.738063788381259*^9}, 3.738063897590468*^9, {
   3.7380639519796047`*^9, 3.7380639764985228`*^9}, {3.738064021996833*^9, 
   3.7380640224957237`*^9}, {3.7380641237675056`*^9, 3.738064132541601*^9}, 
   3.738064199953803*^9, {3.738064235750361*^9, 3.73806423630132*^9}, {
   3.7380643532275743`*^9, 3.7380643594905157`*^9}, {3.738064542601453*^9, 
   3.738064585701955*^9}, 3.738064716048737*^9, {3.738064778422545*^9, 
   3.7380648272702723`*^9}, {3.7380649863302183`*^9, 
   3.7380649866072493`*^9}, {3.738065050991549*^9, 3.738065066253873*^9}, {
   3.738065152295841*^9, 3.738065183416922*^9}, {3.7380653110048313`*^9, 
   3.738065369501004*^9}, {3.738065693145309*^9, 3.7380657000089483`*^9}, {
   3.738065825663471*^9, 3.7380658319658813`*^9}, {3.738065917268165*^9, 
   3.738065938270413*^9}, {3.73806638877108*^9, 3.738066416537117*^9}, {
   3.738066873956883*^9, 3.738066886530813*^9}, {3.738067164065469*^9, 
   3.738067171603098*^9}, {3.7380684819357157`*^9, 3.738068482370283*^9}, 
   3.738068547549898*^9, {3.7380701305767107`*^9, 3.73807014853202*^9}, {
   3.73807020697453*^9, 3.7380703760341873`*^9}, {3.7380705009723167`*^9, 
   3.7380705230107117`*^9}, {3.738070595356567*^9, 3.738070616337229*^9}, {
   3.738070953959182*^9, 3.7380709814808283`*^9}, {3.738071086575954*^9, 
   3.738071184047433*^9}, {3.738071226084917*^9, 3.7380713195574617`*^9}, {
   3.7380714131055183`*^9, 3.738071440354623*^9}, {3.7380716251471157`*^9, 
   3.7380716392590027`*^9}, {3.738071766125103*^9, 3.7380717744904213`*^9}, {
   3.738071876317552*^9, 3.73807202447581*^9}, {3.738072059420164*^9, 
   3.738072119190864*^9}, {3.738072173069127*^9, 3.738072184591444*^9}, 
   3.738336955301879*^9, 3.738338255975171*^9, 3.738338299647402*^9, {
   3.738345177779957*^9, 3.7383452298960752`*^9}, {3.738345325466111*^9, 
   3.7383454065951967`*^9}, {3.738345488403368*^9, 3.738345519405736*^9}, {
   3.738345572520175*^9, 3.738345576026328*^9}, {3.738750630787716*^9, 
   3.738750631850519*^9}, {3.738916901497798*^9, 3.738916902990119*^9}, {
   3.738916972368675*^9, 3.738917000487556*^9}, {3.738949491787883*^9, 
   3.738949497738669*^9}, {3.738949893639947*^9, 3.738949895149749*^9}, {
   3.739027402368133*^9, 3.739027414030789*^9}, {3.739027459120232*^9, 
   3.7390276187476263`*^9}, {3.7390276751154413`*^9, 
   3.7390276824353313`*^9}, {3.739027724193676*^9, 3.739027806193705*^9}, {
   3.73902787123553*^9, 3.739027871718473*^9}, {3.739028960833784*^9, 
   3.739028976987287*^9}, {3.739029069297614*^9, 3.739029074226367*^9}, {
   3.739029121063493*^9, 3.739029125818853*^9}, {3.739029173158266*^9, 
   3.739029177595796*^9}, {3.7390304594770203`*^9, 3.739030619075742*^9}, {
   3.7390315971133327`*^9, 3.739031630836677*^9}, {3.7390317151679277`*^9, 
   3.739031756649603*^9}, {3.739032300023691*^9, 3.739032344042932*^9}, {
   3.739032497018454*^9, 3.7390324974147577`*^9}, {3.739032759460058*^9, 
   3.7390328725469093`*^9}, 3.7390329337919407`*^9, {3.739033056409433*^9, 
   3.739033071854867*^9}, {3.739033163499449*^9, 3.7390332003926897`*^9}, 
   3.739033326934861*^9, 3.7390334969196577`*^9, {3.73903359704207*^9, 
   3.739033607588441*^9}, {3.739033869461527*^9, 3.73903387478139*^9}, {
   3.7390339275551157`*^9, 3.739033928558723*^9}, {3.739034056746669*^9, 
   3.739034103865707*^9}, {3.739034159634879*^9, 3.739034172048512*^9}, {
   3.739034278075027*^9, 3.739034383622189*^9}, {3.739034419439253*^9, 
   3.739034516254603*^9}, {3.7390345475499697`*^9, 3.739034659351832*^9}, {
   3.739034825851264*^9, 3.739034925287147*^9}, {3.739266590046399*^9, 
   3.739266603949102*^9}, 3.7392672832551537`*^9, {3.739267316492694*^9, 
   3.7392673230424757`*^9}, {3.739267365701989*^9, 3.739267489686923*^9}, {
   3.7392675415387497`*^9, 3.739267596904351*^9}, {3.739445861995351*^9, 
   3.739445865467003*^9}, {3.739473147393931*^9, 3.7394731493456907`*^9}, {
   3.739473192605424*^9, 3.7394733086851254`*^9}, {3.7395189834549437`*^9, 
   3.739518984276642*^9}, {3.7395190652857647`*^9, 3.739519141325289*^9}, {
   3.739519183579854*^9, 3.739519192793034*^9}, 3.7395194451661577`*^9, {
   3.7395209299859943`*^9, 3.739520946591774*^9}, {3.739521195736208*^9, 
   3.739521200697063*^9}, 3.739530972042251*^9, {3.739531247089264*^9, 
   3.739531315921474*^9}, {3.739532091938456*^9, 3.739532094504354*^9}, {
   3.739532243327567*^9, 3.739532244939783*^9}, {3.7397453215135193`*^9, 
   3.739745549450139*^9}, {3.739745580038732*^9, 3.739745615272418*^9}, {
   3.739747036627203*^9, 3.73974703937719*^9}, {3.7397472435583553`*^9, 
   3.739747293836514*^9}, {3.7397783932812653`*^9, 3.739778426422077*^9}, {
   3.739779626804604*^9, 3.739779627364358*^9}, {3.740260846112743*^9, 
   3.740260894331525*^9}, {3.7402609879265203`*^9, 3.740261094517726*^9}, {
   3.740261133941517*^9, 3.740261139372734*^9}, 3.740261419157898*^9, {
   3.749745507147835*^9, 3.7497455215268307`*^9}, {3.74974617774559*^9, 
   3.7497461884038773`*^9}, 3.749753729054751*^9, {3.749852864555781*^9, 
   3.74985286591755*^9}, 3.749852902803667*^9, {3.751412556589727*^9, 
   3.751412564145056*^9}, {3.751560129817213*^9, 3.75156017256548*^9}, {
   3.751560240243009*^9, 3.751560241343515*^9}, 3.754072864411167*^9, {
   3.754072970262003*^9, 3.754072978689069*^9}, {3.754073133513612*^9, 
   3.754073206435289*^9}, {3.75407334376059*^9, 3.754073349369935*^9}, 
   3.754141321553521*^9, 3.754143113806361*^9, {3.754386938301261*^9, 
   3.754386975544094*^9}, {3.7543870172745457`*^9, 3.754387075665242*^9}, 
   3.754387116505473*^9, 3.754608826480709*^9},
 FontSize->16,
 CellLabel->
  "In[193]:=",ExpressionUUID->"c9af6d59-1c83-498c-aeed-5ff41c940aff"],

Cell[TextData[{
 "The functions to analyze\n",
 StyleBox["For each parameterized probability density defined here, must \
define functions returning the density and the cumulative probability as \
functions of x and the parameters. You can let ", "Text"],
 StyleBox["Mathematica", "Text",
  FontSlant->"Italic"],
 StyleBox[" figure out one given the other by integrating or differentiating, \
but it may slow down updating substantially.", "Text"]
}], "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.7319637757304583`*^9, 3.7319637861338577`*^9}, {
   3.735898548761734*^9, 3.7358986616736298`*^9}, {3.735898721527143*^9, 
   3.735898784030986*^9}, 3.7359126994511147`*^9, 3.73616128656539*^9, {
   3.737534568185649*^9, 3.737534592392858*^9}, 3.738338255975267*^9, 
   3.738338299647493*^9, 3.7541431138065147`*^9},
 FontSize->16,ExpressionUUID->"c4d61151-5cba-4628-aa24-a2c7d698803c"],

Cell[TextData[StyleBox["Test", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, 3.749249767575053*^9, 
   3.754143113806664*^9},
 FontSize->16,
 CellLabel->
  "In[1529]:=",ExpressionUUID->"1c34b377-656a-4cf7-87af-be565ee0a602"],

Cell["\<\
ClearAll[test,testDensity,testCumul];
testDensity:=Function[x,(1-x)^2+0.5 x (1-x)+x^2];
testCumul:=Function[x,1];\
\>", "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, 3.754143113806794*^9},
 FontSize->16,
 CellLabel->
  "In[194]:=",ExpressionUUID->"260b623f-98e8-404a-b6d7-1085d44f21b5"],

Cell[TextData[StyleBox["Binomial distribution", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, {3.7497456947757597`*^9, 
   3.749745696158333*^9}, 3.7541431138069363`*^9},
 FontSize->16,ExpressionUUID->"48db0d1a-cecf-4c5d-8b09-df2604874f66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"binom", ",", "discreteDensity", ",", "discreteCumul"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"binom", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", "p_"}], "]"}], ":=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"n", ",", "k"}], "]"}], 
       RowBox[{"p", "^", "k"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteDensity", "[", "p_List", "]"}], " ", ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"p", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "p", "]"}], "-", "1"}], ")"}]}], "-", 
            "0.5"}], "]"}], "+", "1"}], ")"}], "//", "N"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteCumul", "[", "p_List", "]"}], " ", ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "p", "]"}], "-", "1"}], ")"}]}], "-", 
             "0.5"}], "]"}], "+", "1"}]}], "}"}]}], "]"}], "-", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.737531886321293*^9, 3.73753195197768*^9}, {
   3.737532113218192*^9, 3.737532187111287*^9}, {3.737532314367282*^9, 
   3.737532328152959*^9}, {3.7375324099648523`*^9, 3.737532438986512*^9}, 
   3.7375324916253633`*^9, {3.7375325338146057`*^9, 3.737532547234668*^9}, {
   3.737533555581559*^9, 3.73753373099868*^9}, {3.7375339427119513`*^9, 
   3.7375339469901667`*^9}, {3.737533980341501*^9, 3.7375339862835484`*^9}, {
   3.7375342558534613`*^9, 3.737534396688287*^9}, {3.7375345271270113`*^9, 
   3.737534527974811*^9}, {3.737534821176162*^9, 3.7375348272624483`*^9}, {
   3.737534874126359*^9, 3.737534916952495*^9}, {3.737534979571538*^9, 
   3.7375350001670322`*^9}, {3.737535062547394*^9, 3.737535096617594*^9}, {
   3.737535500318544*^9, 3.737535500684906*^9}, {3.737535565670382*^9, 
   3.737535580509572*^9}, {3.737535968841031*^9, 3.7375360918629713`*^9}, {
   3.737536173284389*^9, 3.737536282217926*^9}, {3.737538707033025*^9, 
   3.737538707816728*^9}, 3.737538900319604*^9, 3.737539416963769*^9, {
   3.7375778478278913`*^9, 3.737577849753892*^9}, {3.7375778949201097`*^9, 
   3.737577895269844*^9}, {3.737578156482383*^9, 3.7375781629579687`*^9}, {
   3.7375782178120127`*^9, 3.737578319892728*^9}, {3.737578384627439*^9, 
   3.737578456061039*^9}, {3.737578497361822*^9, 3.737578648650193*^9}, {
   3.737578729675352*^9, 3.737578792504963*^9}, {3.737578839904051*^9, 
   3.7375788400229816`*^9}, {3.7375788873108187`*^9, 3.737578914297316*^9}, {
   3.7375789970518913`*^9, 3.73757905670201*^9}, {3.7375791293745203`*^9, 
   3.737579244813169*^9}, {3.7375792895056047`*^9, 3.7375793136358547`*^9}, {
   3.737579358036264*^9, 3.737579366938898*^9}, {3.737579446492518*^9, 
   3.737579464091166*^9}, {3.737579526594549*^9, 3.737579599189126*^9}, {
   3.737579645863612*^9, 3.737579652797533*^9}, {3.737579813076392*^9, 
   3.737579844829397*^9}, {3.737579906135076*^9, 3.73757991040447*^9}, {
   3.7375799605425987`*^9, 3.7375799773271017`*^9}, {3.7375800124226313`*^9, 
   3.737580017429914*^9}, {3.737580137116846*^9, 3.737580157555428*^9}, {
   3.737581675185586*^9, 3.737581712187735*^9}, {3.737581746663404*^9, 
   3.737581750222834*^9}, 3.737646356096923*^9, {3.737671421178342*^9, 
   3.737671435654121*^9}, {3.737671470894717*^9, 3.7376716232911158`*^9}, 
   3.737671831916197*^9, {3.737671893864747*^9, 3.737671931695128*^9}, {
   3.737671966596856*^9, 3.737671967747532*^9}, {3.737672016174775*^9, 
   3.7376720597513857`*^9}, {3.737787945113186*^9, 3.737787950022223*^9}, {
   3.737803219721178*^9, 3.7378032269653387`*^9}, {3.737803500945188*^9, 
   3.737803643177516*^9}, {3.737803677205325*^9, 3.73780388025289*^9}, {
   3.737804271452938*^9, 3.737804273798962*^9}, {3.7378043390042973`*^9, 
   3.737804398187953*^9}, {3.737808394515728*^9, 3.737808398744735*^9}, {
   3.737814883844871*^9, 3.73781492223402*^9}, {3.7378153787265043`*^9, 
   3.737815387974098*^9}, {3.737885796734564*^9, 3.737885813220943*^9}, {
   3.737902963426457*^9, 3.7379029637381353`*^9}, {3.737903287267095*^9, 
   3.737903292089574*^9}, 3.73790355536304*^9, 3.73833825597605*^9, 
   3.738338299647861*^9, {3.738454879382358*^9, 3.738454879844726*^9}, {
   3.738454910293809*^9, 3.7384549106281567`*^9}, {3.7389265748884487`*^9, 
   3.738926582116252*^9}, {3.7390870679376*^9, 3.739087079009006*^9}, {
   3.739087773776256*^9, 3.739087792698391*^9}, 3.739257974599049*^9, {
   3.74026228404888*^9, 3.74026229895909*^9}, {3.74026243311159*^9, 
   3.740262445759438*^9}, {3.740263823406497*^9, 3.740263845157762*^9}, {
   3.740263923120159*^9, 3.740263923542428*^9}, {3.747931642977962*^9, 
   3.747931643526474*^9}, {3.747931693873671*^9, 3.747931697661931*^9}, {
   3.7479317832880983`*^9, 3.747931794232519*^9}, {3.7497456455489893`*^9, 
   3.749745661907137*^9}, {3.749745873279249*^9, 3.749745875641663*^9}, 
   3.749852458340616*^9, {3.751648778981842*^9, 3.751648786208725*^9}, 
   3.754143113807166*^9, {3.755684455599575*^9, 3.7556844650419827`*^9}, {
   3.7556845021137533`*^9, 3.755684534001993*^9}, {3.755684586263932*^9, 
   3.7556846038341827`*^9}},
 FontSize->16,
 CellLabel->
  "In[197]:=",ExpressionUUID->"6c9343cf-da94-4a8a-b757-78307e785f6b"],

Cell[TextData[StyleBox["Sum of m Bernoulli distributions with uniformly \
distributed p parameters", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737646257135179*^9, 3.73764632364014*^9}, {3.737646372598955*^9, 
   3.737646403643125*^9}, 3.7383382559761477`*^9, 3.738338299647945*^9, {
   3.7392711527610607`*^9, 3.739271173859455*^9}, 3.754143113807321*^9},
 FontSize->16,ExpressionUUID->"ee747a6e-d5a0-45c8-ac85-c497c816176e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "bSum", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bSum", "[", 
   RowBox[{
    RowBox[{"m_Integer", "?", "NonNegative"}], ",", "pt_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "meanp", ",", "p", ",", "probs", ",", "n", ",", "ss", ",", "numSets", 
      ",", "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pt", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pt", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
        "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probs", " ", "=", 
      RowBox[{"{", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"p", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"probs", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{"Subsets", "[", 
            RowBox[{"tmp", ",", 
             RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"numSets", " ", "=", " ", 
           RowBox[{"Length", "[", "ss", "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ss", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"p", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Complement", "[", 
                    RowBox[{"tmp", ",", 
                    RowBox[{"ss", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"m", "-", "n"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "numSets"}], "}"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probs", ",", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "probs", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.737646336949757*^9, 3.737646350473671*^9}, {
   3.737646391774693*^9, 3.7376465630169888`*^9}, {3.737646601208292*^9, 
   3.737646602182227*^9}, {3.737646679341971*^9, 3.737646691828206*^9}, 
   3.737647315263301*^9, {3.737651573895666*^9, 3.737651703562004*^9}, {
   3.737655986119542*^9, 3.7376560002688627`*^9}, {3.737666164573682*^9, 
   3.737666172493001*^9}, {3.737666281945801*^9, 3.737666295730221*^9}, 
   3.737666350993842*^9, 3.73766646876191*^9, {3.73766649938465*^9, 
   3.737666506368555*^9}, {3.7376666335238132`*^9, 3.737666637234067*^9}, {
   3.737667052803689*^9, 3.737667097470405*^9}, {3.7376672312473307`*^9, 
   3.7376672318206463`*^9}, {3.7376673637685547`*^9, 
   3.7376673646864223`*^9}, {3.737667512399136*^9, 3.7376675208034277`*^9}, {
   3.73766764817099*^9, 3.737667653289712*^9}, {3.737667691147472*^9, 
   3.737667693528853*^9}, {3.737670259860404*^9, 3.737670283803771*^9}, {
   3.737670323379758*^9, 3.737670365223727*^9}, {3.737670396862391*^9, 
   3.737670498504664*^9}, {3.7376705679517612`*^9, 3.7376706269606047`*^9}, {
   3.737670680855104*^9, 3.737670863022977*^9}, {3.737670933560128*^9, 
   3.737670980364614*^9}, 3.7376710232312317`*^9, {3.7376710573185463`*^9, 
   3.7376711577661943`*^9}, {3.737671192874289*^9, 3.737671222230876*^9}, {
   3.737671258225136*^9, 3.737671258686247*^9}, {3.737671383847481*^9, 
   3.737671384452806*^9}, {3.737703315844173*^9, 3.737703316972281*^9}, {
   3.737790461351042*^9, 3.7377904666077414`*^9}, {3.73779808614454*^9, 
   3.737798118299214*^9}, {3.737800175012341*^9, 3.737800187041254*^9}, {
   3.737800620598452*^9, 3.737800621766637*^9}, {3.737800854567192*^9, 
   3.7378008714885473`*^9}, {3.7378032381812887`*^9, 3.737803242880054*^9}, {
   3.7378038920173798`*^9, 3.737803920234764*^9}, {3.737902994204815*^9, 
   3.7379030265172167`*^9}, 3.737903160219104*^9, {3.737903276292016*^9, 
   3.737903281194396*^9}, {3.737903560458089*^9, 3.737903561037418*^9}, 
   3.7379074701619873`*^9, 3.738338255976431*^9, 3.7383382996482277`*^9, 
   3.73927104413689*^9, 3.739271140683585*^9, 3.739779678180855*^9, 
   3.754143113807596*^9},
 FontSize->16,
 CellLabel->
  "In[201]:=",ExpressionUUID->"c7b1519e-bd54-4653-aa54-7d8674e5c994"],

Cell[TextData[StyleBox["A 2-parameter (a, \[Epsilon]) family of unimodal \
probability functions, a simple pole at (a, \[Epsilon]i).", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737646257135179*^9, 3.73764632364014*^9}, 3.738338255976513*^9, 
   3.7383382996483107`*^9, 3.7541431138077517`*^9, {3.7548596354724617`*^9, 
   3.754859671265167*^9}},
 FontSize->16,ExpressionUUID->"d832c35e-4b33-40cc-a956-b4961faa2cc6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"cumulP", ",", "densP", ",", "poleDensity", ",", "poleCumul"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"densP", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
        SuperscriptBox["\[Epsilon]", "2"]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulP", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "/", "\[Epsilon]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "a"}], ")"}], "/", "\[Epsilon]"}], "]"}], "+", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"a", "/", "\[Epsilon]"}], "]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]", "^", "2"}], " ", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "a"}], ")"}], "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]", "^", "2"}], "+", 
           RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}], "/", "2"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poleDensity", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"densP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "x", "]"}], "/", 
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "1.0", "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poleCumul", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "x", "]"}], "/", 
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "1.0", "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898454326414*^9, {3.7358986904205847`*^9, 3.73589871113377*^9}, {
   3.735898872135193*^9, 3.7358988912423983`*^9}, {3.735899547372711*^9, 
   3.73589962721205*^9}, {3.735899768514532*^9, 3.7358997714712067`*^9}, {
   3.735899863515256*^9, 3.735899877668038*^9}, {3.735907509012054*^9, 
   3.735907513883072*^9}, {3.735907591370254*^9, 3.735907645016827*^9}, 
   3.7359078237326317`*^9, {3.735908327690773*^9, 3.735908356544723*^9}, {
   3.735908624220248*^9, 3.735908635358655*^9}, {3.7359096218295794`*^9, 
   3.735909843084895*^9}, {3.735911228872504*^9, 3.735911240941436*^9}, 
   3.7359112765546503`*^9, 3.7359126994516783`*^9, {3.7359396172897987`*^9, 
   3.735939757322338*^9}, {3.735940063138294*^9, 3.735940063497984*^9}, {
   3.735940265967228*^9, 3.735940276956369*^9}, {3.735990601743145*^9, 
   3.7359906271835403`*^9}, {3.735990668601775*^9, 3.7359907258802853`*^9}, {
   3.7359907649947*^9, 3.735990803198934*^9}, {3.7359908388830967`*^9, 
   3.7359908637543497`*^9}, {3.735990900322216*^9, 3.735991019173235*^9}, 
   3.7359913082810097`*^9, {3.735991513414805*^9, 3.735991791549687*^9}, {
   3.735991822574284*^9, 3.7359919300014763`*^9}, {3.735992827592359*^9, 
   3.7359928297008047`*^9}, {3.735992928019713*^9, 3.735993010766301*^9}, 
   3.735993167088216*^9, {3.7359935977803907`*^9, 3.73599367581383*^9}, {
   3.735996093862649*^9, 3.735996130129492*^9}, {3.7359970151666*^9, 
   3.735997020747998*^9}, {3.73600485357478*^9, 3.736004899513832*^9}, {
   3.736005002224728*^9, 3.7360050383083973`*^9}, 3.736013844055142*^9, {
   3.736025886494748*^9, 3.736025905661578*^9}, {3.736026473193685*^9, 
   3.736026473600013*^9}, {3.736026511188542*^9, 3.7360265381349783`*^9}, {
   3.7360292594429913`*^9, 3.736029265138176*^9}, {3.7360294421300793`*^9, 
   3.73602944564781*^9}, {3.736029897691383*^9, 3.736029949199732*^9}, {
   3.736060524746869*^9, 3.736060565737711*^9}, 3.73606062104947*^9, {
   3.736060709292077*^9, 3.736060762884686*^9}, {3.7360608319291077`*^9, 
   3.736060833310987*^9}, {3.7360610418778057`*^9, 3.736061044644044*^9}, {
   3.7361022733717127`*^9, 3.736102277767427*^9}, 3.7361612865659246`*^9, {
   3.736288620635769*^9, 3.736288754487686*^9}, {3.736288789399177*^9, 
   3.736288798125044*^9}, {3.736290593408996*^9, 3.736290597295961*^9}, 
   3.736290629539263*^9, {3.736754964645846*^9, 3.736755111115017*^9}, {
   3.736755171778453*^9, 3.7367552981673317`*^9}, {3.7367553387492743`*^9, 
   3.7367553828281193`*^9}, {3.736755413578918*^9, 3.7367555443360786`*^9}, {
   3.7367555839610023`*^9, 3.7367556446187067`*^9}, {3.7367556996570063`*^9, 
   3.736755732754785*^9}, {3.736755829540156*^9, 3.7367558672961206`*^9}, {
   3.7367559089870872`*^9, 3.736756001172892*^9}, {3.7367561651446238`*^9, 
   3.736756168903118*^9}, {3.7367694675843067`*^9, 3.736769493460244*^9}, {
   3.7367697828407087`*^9, 3.736769814224971*^9}, {3.736769896673592*^9, 
   3.7367700997519827`*^9}, {3.736770156505452*^9, 3.736770156559758*^9}, {
   3.736770489877425*^9, 3.736770490236188*^9}, {3.736864690040619*^9, 
   3.7368647356110287`*^9}, {3.736864767543346*^9, 3.736864802101315*^9}, {
   3.7368648331124983`*^9, 3.736865051267127*^9}, {3.736865086112262*^9, 
   3.736865155239406*^9}, {3.736865367055551*^9, 3.736865384206764*^9}, {
   3.736865477825595*^9, 3.7368654793252697`*^9}, {3.736865601216936*^9, 
   3.736865602455225*^9}, {3.736865669444368*^9, 3.7368657823929*^9}, {
   3.7368659211886168`*^9, 3.73686592151534*^9}, {3.7368660257281313`*^9, 
   3.7368660268094063`*^9}, {3.736866281004071*^9, 3.736866299784539*^9}, {
   3.736866335558733*^9, 3.736866391895143*^9}, {3.736866438460935*^9, 
   3.736866459592395*^9}, {3.736866512663084*^9, 3.736866526001642*^9}, {
   3.736866579201152*^9, 3.7368666003098783`*^9}, 3.7368668065761642`*^9, {
   3.7368669254361887`*^9, 3.7368669326615477`*^9}, {3.736867006712708*^9, 
   3.736867075248969*^9}, {3.736867287634159*^9, 3.7368672946697483`*^9}, {
   3.736867330818149*^9, 3.7368673710021267`*^9}, {3.736868761680132*^9, 
   3.736868783148178*^9}, {3.736869936082715*^9, 3.7368699930956173`*^9}, {
   3.736870076516234*^9, 3.736870151453331*^9}, 3.73687018503034*^9, {
   3.736870243842136*^9, 3.736870249151005*^9}, {3.7368702909053392`*^9, 
   3.736870304970777*^9}, 3.736870353031806*^9, {3.73687041400137*^9, 
   3.73687046720225*^9}, {3.7368725566617317`*^9, 3.736872557669557*^9}, {
   3.736872614085992*^9, 3.7368726683672237`*^9}, {3.736872735317577*^9, 
   3.7368727383739433`*^9}, {3.7368727699473753`*^9, 
   3.7368727982343187`*^9}, {3.7368728336091146`*^9, 
   3.7368728344491997`*^9}, {3.7368893168272877`*^9, 
   3.7368893719594088`*^9}, {3.73693223813505*^9, 3.7369322498183804`*^9}, 
   3.7369323051297913`*^9, {3.736975137201873*^9, 3.736975141183916*^9}, {
   3.7369752022695017`*^9, 3.736975214190365*^9}, {3.7372378079893503`*^9, 
   3.737237828882903*^9}, {3.737237936432222*^9, 3.7372379404695787`*^9}, 
   3.737237995983798*^9, 3.737238047631641*^9, {3.737238082513006*^9, 
   3.7372380830401773`*^9}, {3.737238667515856*^9, 3.73723867595782*^9}, {
   3.737271333022602*^9, 3.737271334211413*^9}, {3.7372713734638777`*^9, 
   3.737271394999257*^9}, {3.7372715843378563`*^9, 3.737271601052511*^9}, {
   3.737271734635717*^9, 3.737271788698053*^9}, {3.7372718197068663`*^9, 
   3.7372718234890203`*^9}, {3.737273633602469*^9, 3.737273805479383*^9}, {
   3.737273883609269*^9, 3.737273884054497*^9}, {3.7372821268731194`*^9, 
   3.737282141908787*^9}, 3.737282246425291*^9, {3.7372861641833773`*^9, 
   3.7372861701227007`*^9}, 3.73728635118745*^9, {3.737287907053813*^9, 
   3.737287917179388*^9}, 3.7372880920205297`*^9, {3.737291416319409*^9, 
   3.737291432976218*^9}, {3.737300527348225*^9, 3.73730052910469*^9}, {
   3.737300613048005*^9, 3.737300757058311*^9}, {3.737300800906597*^9, 
   3.7373008087928877`*^9}, {3.73730084433739*^9, 3.737300851532393*^9}, {
   3.737301005435967*^9, 3.73730111326385*^9}, {3.7373011633010693`*^9, 
   3.737301169603229*^9}, {3.737370353949821*^9, 3.737370356741892*^9}, {
   3.73737041988614*^9, 3.737370426462532*^9}, {3.737455505892397*^9, 
   3.7374555512427*^9}, {3.737455659044181*^9, 3.7374556608519583`*^9}, 
   3.737480717628152*^9, {3.7375319607224903`*^9, 3.737532032544648*^9}, {
   3.737532072999752*^9, 3.737532104718546*^9}, {3.737539457602384*^9, 
   3.7375394580967207`*^9}, {3.737539521084559*^9, 3.73753952430648*^9}, 
   3.73763012568908*^9, 3.738338255976781*^9, 3.7383382996485653`*^9, {
   3.7390501176984653`*^9, 3.7390502100378942`*^9}, {3.7392710320157413`*^9, 
   3.739271040507855*^9}, 3.754143113807993*^9},
 FontSize->16,
 CellLabel->
  "In[203]:=",ExpressionUUID->"41f8ec12-f622-403f-9509-6c1044b40bb6"],

Cell[TextData[StyleBox["Partition function for 2-D Ising model onm a lattice \
in an external field", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729303*^9}, 3.735899684760001*^9, 3.736161286566001*^9, {
   3.737357395799263*^9, 3.737357398126008*^9}, {3.737369994169845*^9, 
   3.7373699968531303`*^9}, 3.7383382559768763`*^9, 3.738338299648665*^9, {
   3.7400361280533867`*^9, 3.7400361597614*^9}, 3.754143113808154*^9, {
   3.755708451810215*^9, 3.755708460010436*^9}},
 FontSize->16,ExpressionUUID->"af612f0b-ae36-4f80-9907-55ffccbbd50f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "numConfigs1DIsing", ",", "isingDoS1D", ",", "densI", ",", "cumulI", ",", 
     "ising1D"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "the", " ", "number", " ", "of", " ", "configurations", " ", "of", " ", 
      "a", " ", "1"}], "-", 
     RowBox[{
     "D", " ", "chain", " ", "with", " ", "periodic", " ", "boundary", " ", 
      "conditions", " ", "and", " ", "n", " ", "sites", " ", "that", " ", 
      "have", " ", "\[IndentingNewLine]", "s", " ", "spins", " ", "flipped", 
      " ", "and", " ", "f", " ", "pairs", " ", "of", " ", "spins", " ", 
      "frustrated", " ", "will", " ", "be", " ", "in", " ", 
      RowBox[{
       RowBox[{"counts", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", 
          RowBox[{"s", "+", "1"}], ",", 
          RowBox[{"f", "+", "1"}]}], "]"}], "]"}], ".", " ", "Uses"}], " ", 
      "a", " ", "recurrence", " ", "relation", " ", "that", " ", "requires", 
      " ", "counts", " ", "to", " ", "have", " ", "been", " ", "initialized", 
      " ", "for", " ", "all", " ", 
      RowBox[{"n", "'"}]}]}], "<", 
    RowBox[{"n", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numConfigs1DIsing", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"s_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"f_Integer", "?", "NonNegative"}], ",", "counts_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "rtn", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rtn", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EvenQ", "[", "f", "]"}], " ", "||", 
         RowBox[{"(", 
          RowBox[{"f", ">", 
           RowBox[{
            RowBox[{"2", "s"}], "-", "1"}]}], " ", ")"}], "||", " ", 
         RowBox[{"(", 
          RowBox[{"f", ">", 
           RowBox[{"n", "+", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "<", "3"}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"s", ">", "1"}], ")"}], " ", "&&", " ", 
           RowBox[{"(", 
            RowBox[{"s", "\[LessEqual]", "n"}], ")"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"rtn", "=", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", " ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "\[Equal]", "1"}], ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"s", "\[Equal]", "1"}], ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"s", "\[Equal]", "n"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"rtn", " ", "=", " ", "1"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"n", "\[GreaterEqual]", "f"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"rtn", "=", 
                RowBox[{"counts", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "-", "1"}], ",", 
                   RowBox[{"s", "-", "1"}], ",", "f"}], "]"}], "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", ">", "1"}], ")"}], " ", "&&", " ", 
               RowBox[{"(", 
                RowBox[{"s", " ", ">", " ", "1"}], ")"}], " ", "&&", " ", 
               RowBox[{"(", 
                RowBox[{"f", " ", ">", " ", "2"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"rtn", " ", "=", " ", 
               RowBox[{"rtn", " ", "+", " ", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{"counts", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", 
                    RowBox[{"s", "-", "1"}], ",", 
                    RowBox[{"f", "-", "2"}]}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"f", "-", "3"}], ",", 
                    RowBox[{"s", "-", "2"}]}], "]"}], ",", 
                    RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "rtn"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "density", " ", "of", " ", "states", " ", "function", " ", 
     "for", " ", "a", " ", "1", " ", "dimensional", " ", "Ising", " ", 
     "model", " ", "with", " ", "n", " ", "sites", " ", "in", " ", "an", " ", 
     "external", " ", 
     RowBox[{"field", ".", " ", "counts"}], " ", "can", " ", "be", " ", "an", 
     " ", "empty", " ", "list", " ", "on", " ", 
     RowBox[{"input", ".", " ", "Returns"}], " ", "a", " ", "list", " ", "of",
      " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", "+", "1"}], ",", 
       RowBox[{"m", "+", "2"}]}], ")"}]}], "-", 
    RowBox[{
    "dimensional", " ", "arrays", " ", "for", " ", "each", " ", "m", " ", 
     RowBox[{"in", " ", "[", 
      RowBox[{"1", ",", "n"}], "]"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isingDoS1D", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", "counts_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mycounts", ",", "mat", ",", "rules"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", " ", ">", " ", "1"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "counts", "]"}], "<", 
           RowBox[{"n", "-", "1"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"mycounts", " ", "=", " ", 
         RowBox[{"isingDoS1D", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "counts"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mycounts", " ", "=", " ", "counts"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", "1"}], "}"}], "\[Rule]", "1"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rules", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"rules", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "n"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rules", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"rules", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "3"}], "}"}], "\[Rule]", "n"}], "}"}]}], 
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"rules", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"rules", ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"s", "+", "1"}], ",", 
                    RowBox[{"f", "+", "1"}]}], "}"}], "\[Rule]", 
                  RowBox[{"numConfigs1DIsing", "[", 
                   RowBox[{"n", ",", 
                    RowBox[{"s", "+", "1"}], ",", 
                    RowBox[{"f", "+", "1"}], ",", "mycounts"}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "2", ",", 
                  RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<rules for n:\>\"", ",", "n", ",", " ", "\"\< \>\"", ",", 
          "rules"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"mat", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"rules", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", 
            RowBox[{"n", "+", "1"}]}], "}"}], ",", "0"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"MatrixForm", "[", "mat", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mycounts", ",", "mat"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "mycounts", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "mycounts"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, {3.736075932504421*^9, 3.736075946015728*^9}, 
   3.736075981593196*^9, 3.73616128656625*^9, 3.7369322601711397`*^9, 
   3.7369322935233994`*^9, {3.7373574097023563`*^9, 3.7373575140437202`*^9}, {
   3.737385574026482*^9, 3.737385612202183*^9}, {3.737386812679132*^9, 
   3.737386813970861*^9}, {3.737389378303644*^9, 3.737389388928886*^9}, 
   3.738338255977098*^9, 3.738338299648872*^9, {3.738950226819643*^9, 
   3.738950231976351*^9}, {3.740036168000227*^9, 3.740036219319195*^9}, {
   3.7400362617765017`*^9, 3.740036278383411*^9}, {3.740036338489291*^9, 
   3.740036381238064*^9}, {3.740037971953627*^9, 3.7400379802805443`*^9}, {
   3.740045607894362*^9, 3.7400456151155357`*^9}, {3.740045659319628*^9, 
   3.740045744466529*^9}, {3.740046472920994*^9, 3.740046508874208*^9}, {
   3.740046556309042*^9, 3.7400467527800903`*^9}, {3.740046861693116*^9, 
   3.74004686820085*^9}, {3.740046956300091*^9, 3.740046956665234*^9}, {
   3.740047261765596*^9, 3.7400473172777576`*^9}, {3.740060808326494*^9, 
   3.740060811876367*^9}, {3.740061282289858*^9, 3.7400612959897623`*^9}, {
   3.740178357604425*^9, 3.7401783810583143`*^9}, {3.7401784485316668`*^9, 
   3.740178449593624*^9}, {3.74018001478762*^9, 3.740180019649459*^9}, 
   3.7402480453097878`*^9, {3.740248104306658*^9, 3.740248135671788*^9}, {
   3.7402494071147118`*^9, 3.740249441904221*^9}, {3.740249476737877*^9, 
   3.7402495707774076`*^9}, {3.740249670081923*^9, 3.740249670532776*^9}, {
   3.740249707622436*^9, 3.740249707838723*^9}, {3.740305770793913*^9, 
   3.740305775102912*^9}, 3.740306862692932*^9, {3.740306908260989*^9, 
   3.740306971585284*^9}, {3.740307139507625*^9, 3.740307175790572*^9}, {
   3.740307262340871*^9, 3.740307352578806*^9}, {3.7403073880038567`*^9, 
   3.740307402970755*^9}, {3.740307605213231*^9, 3.740307620053833*^9}, {
   3.74030840426982*^9, 3.740308411013072*^9}, {3.7403084563746157`*^9, 
   3.74030845666702*^9}, {3.740320941318943*^9, 3.740320965908925*^9}, {
   3.740321004759136*^9, 3.740321005639454*^9}, {3.74032110023108*^9, 
   3.740321102267017*^9}, {3.740321238460163*^9, 3.740321381181258*^9}, {
   3.7403214444346533`*^9, 3.7403215857680597`*^9}, {3.74032161631679*^9, 
   3.740321616736602*^9}, {3.7497543416492968`*^9, 3.749754356316204*^9}, {
   3.7497544020640087`*^9, 3.7497544264831448`*^9}, {3.7497544808308353`*^9, 
   3.7497545150728283`*^9}, {3.749754551296647*^9, 3.749754555163857*^9}, {
   3.749754590657971*^9, 3.74975463823813*^9}, {3.74975467872375*^9, 
   3.749754696592944*^9}, {3.749754741529245*^9, 3.7497548060394583`*^9}, {
   3.7497548367522497`*^9, 3.749754904770163*^9}, {3.749754960632443*^9, 
   3.749754960959813*^9}, {3.749755006976028*^9, 3.749755018524159*^9}, {
   3.74975508876819*^9, 3.74975510531415*^9}, {3.749755336687519*^9, 
   3.7497553374645357`*^9}, {3.749755458095154*^9, 3.749755458450584*^9}, {
   3.749755495855858*^9, 3.749755496715114*^9}, {3.7497556537734003`*^9, 
   3.749755720505209*^9}, {3.749755961194981*^9, 3.749755966890429*^9}, {
   3.749756068530993*^9, 3.749756117566379*^9}, {3.7497562464836407`*^9, 
   3.749756246872057*^9}, 3.7497563921763687`*^9, {3.749756436508492*^9, 
   3.749756486265397*^9}, {3.749756542259749*^9, 3.749756542577465*^9}, {
   3.749756725793293*^9, 3.749756729936118*^9}, {3.749756952544895*^9, 
   3.7497570283090467`*^9}, {3.749757120047575*^9, 3.749757120151751*^9}, {
   3.749757228800415*^9, 3.7497572549095*^9}, {3.749757355688545*^9, 
   3.749757356366269*^9}, {3.7497573926811447`*^9, 3.749757417716941*^9}, {
   3.7497575173678713`*^9, 3.749757524630719*^9}, 3.749757556385682*^9, {
   3.7497578117141933`*^9, 3.74975781189992*^9}, {3.749757892809986*^9, 
   3.749757900161586*^9}, {3.7497579976877823`*^9, 3.749758026073656*^9}, {
   3.7497581092825403`*^9, 3.749758110247122*^9}, {3.749758184015523*^9, 
   3.7497581957926617`*^9}, {3.749758420443143*^9, 3.749758425673297*^9}, {
   3.749758517217265*^9, 3.7497585385670443`*^9}, {3.7497586661170473`*^9, 
   3.7497586662770767`*^9}, {3.749758718980178*^9, 3.749758774303853*^9}, {
   3.7497588337220163`*^9, 3.749758869413723*^9}, {3.7497590168192883`*^9, 
   3.749759030984611*^9}, {3.74975907547795*^9, 3.7497591103038473`*^9}, {
   3.749759152713088*^9, 3.749759179460466*^9}, {3.749759287452856*^9, 
   3.749759305523571*^9}, {3.749759401143754*^9, 3.749759433773615*^9}, {
   3.7497594941351967`*^9, 3.7497595820043497`*^9}, {3.749759621531036*^9, 
   3.749759632454981*^9}, {3.7497597013328867`*^9, 3.74975970202754*^9}, {
   3.749840216308161*^9, 3.74984029046154*^9}, {3.749853359120463*^9, 
   3.7498533828749113`*^9}, {3.751842003297143*^9, 3.75184201220474*^9}, {
   3.751842052272525*^9, 3.75184205502168*^9}, {3.751842200234396*^9, 
   3.751842207852544*^9}, {3.7520235143360443`*^9, 3.7520235324183702`*^9}, {
   3.7520239013044567`*^9, 3.752023910435636*^9}, 3.752063408654961*^9, {
   3.752063477195746*^9, 3.7520634773337812`*^9}, {3.752064207992816*^9, 
   3.752064214223528*^9}, {3.7520643732330227`*^9, 3.752064373680773*^9}, {
   3.7520644991384478`*^9, 3.752064507313011*^9}, 3.752065981516295*^9, {
   3.7520661576708403`*^9, 3.752066163415257*^9}, {3.752075660586691*^9, 
   3.752075660775589*^9}, {3.752171989402215*^9, 3.752172013770129*^9}, {
   3.7521725823639793`*^9, 3.7521725840056667`*^9}, 3.754143113808805*^9, {
   3.7557084719814997`*^9, 3.755708536623094*^9}, {3.7563832784101877`*^9, 
   3.756383291019985*^9}, {3.75676367137127*^9, 3.756763684734447*^9}},
 FontSize->16,
 CellLabel->
  "In[208]:=",ExpressionUUID->"270cde5e-42f0-42be-a3ba-9affa07662ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cumulI", "[", 
     RowBox[{"x_", ",", "dos_", ",", "hFrac_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "norm", ",", "p", ",", "q", ",", "rat", ",", "rtn"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "dos", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rat", "=", 
        RowBox[{"Rationalize", "[", "hFrac", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"Numerator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"Denominator", "[", "rat", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"norm", " ", "=", " ", 
          RowBox[{
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RowBox[{"q", " ", "n"}]}], ")"}], "/", "2"}], ")"}]}], "/", 
           RowBox[{"2", "^", "n"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"norm", " ", "=", " ", 
        RowBox[{"1", "/", 
         RowBox[{"2", "^", "n"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"rtn", " ", "=", "norm"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"rtn", " ", "=", 
           RowBox[{"-", 
            RowBox[{"Log", "[", 
             RowBox[{"norm", " ", 
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"dos", "[", 
                   RowBox[{"[", 
                    RowBox[{"s", "+", "1"}], "]"}], "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"f", "+", "1"}], "]"}], "]"}], 
                 RowBox[{"x", "^", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"p", 
                    RowBox[{"(", 
                    RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
                    RowBox[{"q", " ", "s"}]}], ")"}]}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "0", ",", "n"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
             "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "rtn"}]}], " ", "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"densI", "[", 
    RowBox[{"x_", ",", "dos_", ",", "hFrac_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "norm", ",", "p", ",", "q", ",", "rat", ",", "rtn"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Length", "[", "dos", "]"}], "-", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rat", "=", 
       RowBox[{"Rationalize", "[", "hFrac", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Numerator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"Denominator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"norm", " ", "=", " ", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p", "+", 
               RowBox[{"q", " ", "n"}]}], ")"}], "/", "2"}], ")"}]}], "/", 
          RowBox[{"2", "^", "n"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"norm", " ", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"cumulI", "[", 
          RowBox[{"x", ",", "dos", ",", "hFrac"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"x", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"rtn", " ", "=", "1.0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rtn", " ", "=", 
          RowBox[{"norm", " ", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{"p", 
                  RowBox[{"(", 
                   RowBox[{"f", "-", "s"}], ")"}]}], "+", 
                 RowBox[{"q", " ", "s"}]}], "\[NotEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"p", 
                   RowBox[{"(", 
                    RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
                  RowBox[{"q", " ", "s"}]}], ")"}], 
                RowBox[{
                 RowBox[{"dos", "[", 
                  RowBox[{"[", 
                   RowBox[{"s", "+", "1"}], "]"}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"f", "+", "1"}], "]"}], "]"}], 
                RowBox[{"x", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"p", 
                    RowBox[{"(", 
                    RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
                   RowBox[{"q", " ", "s"}], "-", "1"}], ")"}]}]}], ",", "0"}],
               "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "0", ",", "n"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", "rtn"}]}], 
    " ", "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ising1D", "[", 
    RowBox[{"dos_", ",", "hFrac_", ",", "isMonotonic_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"If", "[", 
      RowBox[{"isMonotonic", ",", 
       RowBox[{"cumulI", "[", 
        RowBox[{
         RowBox[{"1", "-", "x"}], ",", "dos", ",", "hFrac"}], "]"}], ",", 
       RowBox[{"densI", "[", 
        RowBox[{
         RowBox[{"1", "-", "x"}], ",", "dos", ",", "hFrac"}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}], "\n"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, {3.736075932504421*^9, 3.736075946015728*^9}, 
   3.736075981593196*^9, 3.73616128656625*^9, 3.7369322601711397`*^9, 
   3.7369322935233994`*^9, {3.7373574097023563`*^9, 3.7373575140437202`*^9}, {
   3.737385574026482*^9, 3.737385612202183*^9}, {3.737386812679132*^9, 
   3.737386813970861*^9}, {3.737389378303644*^9, 3.737389388928886*^9}, 
   3.738338255977098*^9, 3.738338299648872*^9, {3.738950226819643*^9, 
   3.738950231976351*^9}, {3.740036168000227*^9, 3.740036219319195*^9}, {
   3.7400362617765017`*^9, 3.740036278383411*^9}, {3.740036338489291*^9, 
   3.740036381238064*^9}, {3.740037971953627*^9, 3.7400379802805443`*^9}, {
   3.740045607894362*^9, 3.7400456151155357`*^9}, {3.740045659319628*^9, 
   3.740045744466529*^9}, {3.740046472920994*^9, 3.740046508874208*^9}, {
   3.740046556309042*^9, 3.7400467527800903`*^9}, {3.740046861693116*^9, 
   3.74004686820085*^9}, {3.740046956300091*^9, 3.740046956665234*^9}, {
   3.740047261765596*^9, 3.7400473172777576`*^9}, {3.740060808326494*^9, 
   3.740060811876367*^9}, {3.740061282289858*^9, 3.7400612959897623`*^9}, {
   3.740178357604425*^9, 3.7401783810583143`*^9}, {3.7401784485316668`*^9, 
   3.740178449593624*^9}, {3.74018001478762*^9, 3.740180019649459*^9}, 
   3.7402480453097878`*^9, {3.740248104306658*^9, 3.740248135671788*^9}, {
   3.7402494071147118`*^9, 3.740249441904221*^9}, {3.740249476737877*^9, 
   3.7402495707774076`*^9}, {3.740249670081923*^9, 3.740249670532776*^9}, {
   3.740249707622436*^9, 3.740249707838723*^9}, {3.740305770793913*^9, 
   3.740305775102912*^9}, 3.740306862692932*^9, {3.740306908260989*^9, 
   3.740306971585284*^9}, {3.740307139507625*^9, 3.740307175790572*^9}, {
   3.740307262340871*^9, 3.740307352578806*^9}, {3.7403073880038567`*^9, 
   3.740307402970755*^9}, {3.740307605213231*^9, 3.740307620053833*^9}, {
   3.74030840426982*^9, 3.740308411013072*^9}, {3.7403084563746157`*^9, 
   3.74030845666702*^9}, {3.740320941318943*^9, 3.740320965908925*^9}, {
   3.740321004759136*^9, 3.740321005639454*^9}, {3.74032110023108*^9, 
   3.740321102267017*^9}, {3.740321238460163*^9, 3.740321381181258*^9}, {
   3.7403214444346533`*^9, 3.7403215857680597`*^9}, {3.74032161631679*^9, 
   3.740321616736602*^9}, {3.7497543416492968`*^9, 3.749754356316204*^9}, {
   3.7497544020640087`*^9, 3.7497544264831448`*^9}, {3.7497544808308353`*^9, 
   3.7497545150728283`*^9}, {3.749754551296647*^9, 3.749754555163857*^9}, {
   3.749754590657971*^9, 3.74975463823813*^9}, {3.74975467872375*^9, 
   3.749754696592944*^9}, {3.749754741529245*^9, 3.7497548060394583`*^9}, {
   3.7497548367522497`*^9, 3.749754904770163*^9}, {3.749754960632443*^9, 
   3.749754960959813*^9}, {3.749755006976028*^9, 3.749755018524159*^9}, {
   3.74975508876819*^9, 3.74975510531415*^9}, {3.749755336687519*^9, 
   3.7497553374645357`*^9}, {3.749755458095154*^9, 3.749755458450584*^9}, {
   3.749755495855858*^9, 3.749755496715114*^9}, {3.7497556537734003`*^9, 
   3.749755720505209*^9}, {3.749755961194981*^9, 3.749755966890429*^9}, {
   3.749756068530993*^9, 3.749756117566379*^9}, {3.7497562464836407`*^9, 
   3.749756246872057*^9}, 3.7497563921763687`*^9, {3.749756436508492*^9, 
   3.749756486265397*^9}, {3.749756542259749*^9, 3.749756542577465*^9}, {
   3.749756725793293*^9, 3.749756729936118*^9}, {3.749756952544895*^9, 
   3.749757011879548*^9}, {3.752061820112084*^9, 3.7520618637648897`*^9}, {
   3.752061906561948*^9, 3.7520619100952*^9}, {3.752061980228513*^9, 
   3.752061980714641*^9}, {3.752062085051798*^9, 3.752062091112266*^9}, {
   3.752062149258667*^9, 3.752062196226427*^9}, {3.7520622939727163`*^9, 
   3.7520623959791803`*^9}, {3.752062529416876*^9, 3.752062529830785*^9}, {
   3.752062987045789*^9, 3.752062987261327*^9}, {3.752063112315823*^9, 
   3.75206311743244*^9}, 3.752063429477763*^9, {3.752063558238772*^9, 
   3.752063593403368*^9}, {3.752063632019219*^9, 3.752063633370273*^9}, {
   3.75206452082215*^9, 3.752064521298764*^9}, {3.75206464762593*^9, 
   3.752064687531008*^9}, {3.752065119524378*^9, 3.752065121757626*^9}, {
   3.7520654575767307`*^9, 3.7520654915834723`*^9}, 3.752065607541902*^9, {
   3.752065689129075*^9, 3.752065690562786*^9}, {3.7520657846329613`*^9, 
   3.752065811404766*^9}, 3.7520659225657*^9, 3.7520659614232283`*^9, {
   3.7520661755288982`*^9, 3.752066183510303*^9}, {3.7520672289256983`*^9, 
   3.7520672469468946`*^9}, {3.7520677923458548`*^9, 3.752067793606346*^9}, {
   3.7521519114412203`*^9, 3.7521519119493647`*^9}, {3.7521579504689903`*^9, 
   3.7521580218600893`*^9}, {3.752158098596374*^9, 3.752158132697138*^9}, 
   3.752158181744391*^9, {3.7521582525949783`*^9, 3.752158269239259*^9}, {
   3.7521583241401663`*^9, 3.7521583690163107`*^9}, 3.75215844383097*^9, {
   3.752158516598613*^9, 3.752158535476699*^9}, {3.7521588678551598`*^9, 
   3.7521588843148327`*^9}, {3.7521716250087633`*^9, 3.752171626433301*^9}, {
   3.752172297104886*^9, 3.75217229791397*^9}, {3.752172401858302*^9, 
   3.752172408601709*^9}, {3.752180029122714*^9, 3.752180032803252*^9}, 
   3.754143113809085*^9, {3.755708539104336*^9, 3.7557085395685673`*^9}, {
   3.755708654725253*^9, 3.755708724259432*^9}, {3.755708776472433*^9, 
   3.755708817412314*^9}, {3.7557089256269503`*^9, 3.7557089910881233`*^9}, {
   3.7557090590305557`*^9, 3.755709062971937*^9}, {3.755711201112894*^9, 
   3.7557112531609173`*^9}, {3.755711381315722*^9, 3.755711409146913*^9}, {
   3.755711646308214*^9, 3.755711649421398*^9}, 3.755712201012615*^9, {
   3.755712364008243*^9, 3.75571239430536*^9}, 3.755712510776856*^9, {
   3.755712563937002*^9, 3.755712564381164*^9}, 3.756383292301705*^9, {
   3.756763884536268*^9, 3.756763904411768*^9}},
 FontSize->16,
 CellLabel->
  "In[211]:=",ExpressionUUID->"6d6e2063-6715-4e8c-aa32-89fa7b4ba93b"],

Cell[TextData[StyleBox["S - T reliability for a toy network", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, 3.736075932504421*^9, {3.73610231765766*^9, 
   3.736102356888423*^9}, {3.736161278140469*^9, 3.736161286566317*^9}, 
   3.7383382559771843`*^9, 3.7383382996489573`*^9, 3.754143113809247*^9},
 FontSize->16,ExpressionUUID->"e677af55-14b1-4e6e-94ba-dba297de1e94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "densT", ",", "cumulT", ",", "toyCumul", ",", "toyDensity", ",", 
    "toyNorm"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStruts", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"m", "+", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numCuts", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"b", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], "^", "m"}]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyNorm", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "+", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"b", "+", "2"}], ")"}]}], ")"}]}], "-", 
    RowBox[{"b", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{"m", ",", "k"}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"k", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"2", "+", "b", "+", 
             RowBox[{"k", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "m"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulT", "[", 
    RowBox[{"x_", ",", "m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "b"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], "x", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"densT", "[", 
    RowBox[{"x_", ",", "m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], ")"}]}], 
    " ", "+", 
    RowBox[{"b", " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"b", "-", "1"}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], 
         ")"}]}]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"1", "m", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"m", "-", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], 
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"a", "-", "2"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyCumul", "[", 
    RowBox[{
     RowBox[{"m_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"a_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"b_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"cumulT", "[", 
      RowBox[{"x", ",", "m", ",", "a", ",", "b"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyDensity", "[", 
    RowBox[{
     RowBox[{"m_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"a_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"b_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"densT", "[", 
      RowBox[{"x", ",", "m", ",", "a", ",", "b"}], "]"}]}], "]"}]}], 
  ";"}], "\n"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.736076001808326*^9, 3.736076167960123*^9}, {
   3.736076205929563*^9, 3.736076248072939*^9}, {3.736076284623266*^9, 
   3.7360763484590273`*^9}, {3.7360764450659513`*^9, 3.736076562994182*^9}, {
   3.736076601234433*^9, 3.7360766413953238`*^9}, {3.7360766855636053`*^9, 
   3.7360768455065804`*^9}, {3.7360772093569393`*^9, 3.736077231005711*^9}, {
   3.736077313149336*^9, 3.736077322032032*^9}, {3.736077450603072*^9, 
   3.736077451727007*^9}, {3.736081806035843*^9, 3.736081860914267*^9}, {
   3.736082107819503*^9, 3.736082123436122*^9}, {3.7360821631405973`*^9, 
   3.7360821809286337`*^9}, {3.7360823589944153`*^9, 3.736082359978203*^9}, {
   3.7360825721297073`*^9, 3.7360825818628807`*^9}, {3.736082659857297*^9, 
   3.7360826656895742`*^9}, {3.7360827179735317`*^9, 3.736082721983499*^9}, 
   3.736102356888619*^9, {3.736161278141015*^9, 3.736161286566595*^9}, {
   3.736161430371258*^9, 3.736161453717517*^9}, {3.736161490894451*^9, 
   3.736161491460311*^9}, {3.736161535906417*^9, 3.736161544064344*^9}, {
   3.736162760701065*^9, 3.736162785037026*^9}, {3.7361676342874002`*^9, 
   3.736167640484209*^9}, {3.736932269625902*^9, 3.736932298369713*^9}, {
   3.737312663830988*^9, 3.7373127342456503`*^9}, {3.737312869959814*^9, 
   3.737312891149584*^9}, {3.737312924750495*^9, 3.7373129302777042`*^9}, {
   3.73731299834015*^9, 3.737313032548991*^9}, {3.7373229268277397`*^9, 
   3.737323018857375*^9}, {3.737370008316661*^9, 3.737370015703443*^9}, {
   3.73737572575825*^9, 3.7373757908089323`*^9}, {3.737375831863811*^9, 
   3.737376204642528*^9}, {3.737376333390551*^9, 3.7373763338094893`*^9}, {
   3.737376368489933*^9, 3.737376388869651*^9}, {3.737376500972351*^9, 
   3.7373766421796217`*^9}, {3.737376689220996*^9, 3.737376713984009*^9}, {
   3.737376757003845*^9, 3.737376787857627*^9}, 3.737376878194013*^9, {
   3.737376917755658*^9, 3.7373769233765907`*^9}, {3.737376978747848*^9, 
   3.737376979051117*^9}, {3.737377034671735*^9, 3.737377058090547*^9}, 
   3.737377251330285*^9, {3.737377310381014*^9, 3.737377525776593*^9}, {
   3.7373776613580313`*^9, 3.73737767017415*^9}, {3.737377734536677*^9, 
   3.737377745243202*^9}, 3.737377844555265*^9, {3.7373791496849957`*^9, 
   3.737379156041759*^9}, {3.737379189984817*^9, 3.737379199720562*^9}, {
   3.7373842215840054`*^9, 3.737384224985898*^9}, {3.737493880381371*^9, 
   3.737494021320215*^9}, {3.737539842895915*^9, 3.737539862614959*^9}, {
   3.7375400189439783`*^9, 3.7375400692452087`*^9}, {3.737540149080035*^9, 
   3.7375401658905487`*^9}, {3.737540196178122*^9, 3.7375402762744713`*^9}, {
   3.7375403123975687`*^9, 3.737540350488851*^9}, 3.737577781621702*^9, 
   3.738060720492256*^9, 3.7383382559774523`*^9, 3.738338299649229*^9, {
   3.7390503005806503`*^9, 3.739050308506813*^9}, {3.75173316000113*^9, 
   3.751733382049892*^9}, {3.7517347089117804`*^9, 3.75173474394454*^9}, {
   3.752275070675064*^9, 3.752275121284769*^9}, {3.752275342733267*^9, 
   3.75227535507451*^9}, {3.75227668836712*^9, 3.75227670707871*^9}, 
   3.75414311380956*^9, {3.756144570234387*^9, 3.756144775273213*^9}, {
   3.756145504976727*^9, 3.756145507776881*^9}},
 FontSize->16,
 CellLabel->
  "In[214]:=",ExpressionUUID->"07ea8395-fd8c-4819-9e00-4f77786192a5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Draw", " ", "a", " ", 
   StyleBox[
    RowBox[{"sim", 
     StyleBox["p", "Subsection",
      FontWeight->"Plain"], "le"}]], " ", "toy", " ", "network"}], 
  "Subsection",
  FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.7318806328969107`*^9, 3.7318807272254133`*^9}, {
   3.731880767790504*^9, 3.731880956179974*^9}, {3.731880995072299*^9, 
   3.731880995240395*^9}, {3.731881064818372*^9, 3.731881205780549*^9}, {
   3.731881573049594*^9, 3.731881592914332*^9}, {3.731881628162381*^9, 
   3.731881628474963*^9}, {3.731882637151958*^9, 3.731882643318391*^9}, {
   3.731882676038987*^9, 3.731882684571333*^9}, {3.731882735963982*^9, 
   3.731882738569145*^9}, {3.731882872531081*^9, 3.731882880937747*^9}, {
   3.731882952071525*^9, 3.731882953957863*^9}, {3.7318832867956038`*^9, 
   3.7318833056574697`*^9}, {3.731883382602648*^9, 3.731883383217956*^9}, {
   3.7319518346861467`*^9, 3.731951937765183*^9}, {3.7319519831338587`*^9, 
   3.731952032236443*^9}, {3.731952080128631*^9, 3.731952104698859*^9}, 
   3.73195217787407*^9, {3.7319522463877983`*^9, 3.731952285233266*^9}, {
   3.731952858125266*^9, 3.731953056440221*^9}, {3.7319531755624228`*^9, 
   3.731953221361116*^9}, {3.731962338650422*^9, 3.7319623676115313`*^9}, {
   3.7319624302867928`*^9, 3.731962579385372*^9}, {3.731962617552309*^9, 
   3.731962745086937*^9}, {3.731962825260992*^9, 3.731962826780466*^9}, {
   3.731962951866626*^9, 3.7319629627678547`*^9}, {3.731963151262588*^9, 
   3.731963157742003*^9}, {3.731963191713439*^9, 3.731963201175355*^9}, {
   3.731963378133741*^9, 3.731963414178279*^9}, {3.731963456352751*^9, 
   3.7319634588150873`*^9}, {3.73196349557165*^9, 3.731963498171373*^9}, {
   3.731963607932173*^9, 3.7319636245236397`*^9}, 3.731963756517591*^9, {
   3.73196381917629*^9, 3.731963885141327*^9}, {3.731963922832724*^9, 
   3.7319639348562517`*^9}, {3.7319640037578487`*^9, 
   3.7319640042673893`*^9}, {3.731964066851684*^9, 3.73196407392922*^9}, {
   3.731964180178504*^9, 3.731964244128545*^9}, {3.731964348479067*^9, 
   3.7319643881965933`*^9}, {3.73196442306057*^9, 3.7319644875540533`*^9}, {
   3.731964531701462*^9, 3.731964552766262*^9}, 3.731964831780744*^9, {
   3.731964905166669*^9, 3.73196490795695*^9}, 3.7319649529066887`*^9, {
   3.7319650051003027`*^9, 3.731965022377656*^9}, {3.731965114656776*^9, 
   3.731965117319151*^9}, {3.731966528452489*^9, 3.7319665344508877`*^9}, {
   3.731966583837459*^9, 3.731966634843083*^9}, {3.731966692136701*^9, 
   3.731966748666151*^9}, {3.7319667833995657`*^9, 3.731966808912509*^9}, {
   3.731966866480592*^9, 3.731966933143693*^9}, {3.731966997910872*^9, 
   3.7319670049746428`*^9}, {3.731967113521659*^9, 3.7319671644561033`*^9}, {
   3.7319672112024517`*^9, 3.731967237382059*^9}, {3.7319672703926973`*^9, 
   3.731967315612167*^9}, {3.731967346521644*^9, 3.7319674050062323`*^9}, {
   3.731967437847918*^9, 3.731967714743937*^9}, {3.731967928811968*^9, 
   3.731967941370634*^9}, 3.731967972219634*^9, {3.7319680060197773`*^9, 
   3.731968013217461*^9}, {3.731968081831965*^9, 3.731968109926355*^9}, {
   3.732015050985611*^9, 3.732015090652083*^9}, {3.732015141281753*^9, 
   3.73201516387407*^9}, {3.73201527987934*^9, 3.732015292593286*^9}, {
   3.732015336777575*^9, 3.7320153371672163`*^9}, {3.73201537971169*^9, 
   3.732015385037603*^9}, {3.732016540777287*^9, 3.7320166808192177`*^9}, {
   3.732016744680934*^9, 3.732016745010745*^9}, {3.732016809834805*^9, 
   3.732016880841538*^9}, 3.732016919118569*^9, {3.7320170445064774`*^9, 
   3.732017068584816*^9}, 3.732017114658999*^9, {3.732017152693425*^9, 
   3.732017238863933*^9}, {3.732017305520022*^9, 3.732017313531651*^9}, {
   3.732017347106992*^9, 3.73201734846172*^9}, {3.732017437946837*^9, 
   3.7320175310908813`*^9}, {3.732017570909155*^9, 3.732017578570999*^9}, {
   3.732017629404128*^9, 3.7320176491758223`*^9}, {3.732017698594245*^9, 
   3.732017712112096*^9}, {3.7320177515006113`*^9, 3.732017753438781*^9}, {
   3.732017783934601*^9, 3.73201779834718*^9}, {3.7320178547386017`*^9, 
   3.7320178575964746`*^9}, {3.7320180048369837`*^9, 3.73201802489398*^9}, {
   3.73201812870833*^9, 3.732018134039022*^9}, {3.7320181681236963`*^9, 
   3.7320182391105013`*^9}, {3.732018318188488*^9, 3.732018324011141*^9}, {
   3.7320184261469793`*^9, 3.7320184344672527`*^9}, {3.73201847416187*^9, 
   3.732018476045013*^9}, {3.732018562793003*^9, 3.732018567528575*^9}, {
   3.732018608763535*^9, 3.73201863659193*^9}, {3.732018668987688*^9, 
   3.7320186699688063`*^9}, {3.732018703102358*^9, 3.732018812133499*^9}, {
   3.7320188793516207`*^9, 3.732018897033128*^9}, {3.732018953793017*^9, 
   3.732019006468753*^9}, {3.732019048189001*^9, 3.7320190576884193`*^9}, {
   3.7320191086953583`*^9, 3.732019121173099*^9}, {3.732019222688501*^9, 
   3.732019240074844*^9}, {3.7320193069097033`*^9, 3.732019355767461*^9}, {
   3.7320197672171*^9, 3.732019839562286*^9}, {3.732019874957264*^9, 
   3.732019909727232*^9}, {3.7320199790084887`*^9, 3.73202000119803*^9}, 
   3.732020036681872*^9, {3.73203449214537*^9, 3.732034591037158*^9}, {
   3.7320346257328663`*^9, 3.7320346342278547`*^9}, {3.7320346876768007`*^9, 
   3.732034744619301*^9}, {3.732034786622962*^9, 3.7320347919873343`*^9}, {
   3.732034843333008*^9, 3.732034847614414*^9}, {3.732035444030692*^9, 
   3.7320356357923317`*^9}, {3.73203573941322*^9, 3.732035742335343*^9}, {
   3.732035789887232*^9, 3.732035859636406*^9}, {3.732035924618279*^9, 
   3.732035928316916*^9}, {3.732035969222745*^9, 3.7320359932146063`*^9}, {
   3.732036088295072*^9, 3.732036091734847*^9}, {3.732036138356141*^9, 
   3.7320361387899237`*^9}, {3.732036200148234*^9, 3.7320362005236197`*^9}, {
   3.732036250410893*^9, 3.7320362779079247`*^9}, {3.7320363096730833`*^9, 
   3.732036347671194*^9}, {3.732036446230427*^9, 3.732036451075796*^9}, {
   3.732036524418353*^9, 3.732036537265004*^9}, {3.732036587178994*^9, 
   3.732036703588461*^9}, {3.7320367336451893`*^9, 3.732036739384376*^9}, {
   3.7320367725741243`*^9, 3.7320368781178102`*^9}, {3.7320369109171877`*^9, 
   3.7320369631893463`*^9}, {3.732036994280363*^9, 3.732037006088423*^9}, {
   3.732037053707872*^9, 3.732037095545133*^9}, {3.7320372850390863`*^9, 
   3.732037308062518*^9}, {3.7320373593532887`*^9, 3.732037359668895*^9}, {
   3.7320374024097843`*^9, 3.73203740975145*^9}, {3.73203744340372*^9, 
   3.7320375020481358`*^9}, {3.73203764356316*^9, 3.7320376541772823`*^9}, {
   3.732037706952169*^9, 3.732037707202962*^9}, {3.73203779477706*^9, 
   3.732037795193715*^9}, {3.7320406955217237`*^9, 3.732040766461721*^9}, {
   3.73204086122619*^9, 3.732040892321754*^9}, {3.7320410612288647`*^9, 
   3.732041073773896*^9}, {3.73204115168152*^9, 3.732041166972312*^9}, {
   3.732041245211214*^9, 3.732041245867303*^9}, {3.7320412824449253`*^9, 
   3.732041415301139*^9}, {3.732042006702133*^9, 3.732042011808378*^9}, {
   3.732060186029913*^9, 3.732060203570712*^9}, {3.73209319110117*^9, 
   3.7320932428892097`*^9}, {3.732093991939704*^9, 3.732093993922947*^9}, {
   3.732094065514061*^9, 3.732094109065442*^9}, 3.7320941504780197`*^9, {
   3.732094669392294*^9, 3.7320946747037077`*^9}, {3.732094748874557*^9, 
   3.732094798057049*^9}, {3.7320950173298607`*^9, 3.732095044142215*^9}, {
   3.73209513829534*^9, 3.732095160348584*^9}, {3.7320952028368397`*^9, 
   3.732095281905785*^9}, {3.732095314113628*^9, 3.732095424522565*^9}, 
   3.73209547138684*^9, {3.7320955749987164`*^9, 3.732095614757381*^9}, {
   3.732095940209179*^9, 3.732095994065175*^9}, {3.732096110159668*^9, 
   3.732096209687265*^9}, {3.7320962415026693`*^9, 3.732096314037977*^9}, {
   3.73209636823195*^9, 3.7320963825244207`*^9}, {3.7320964158000803`*^9, 
   3.732096442989237*^9}, {3.7320964811170588`*^9, 3.7320964866040382`*^9}, {
   3.732096521939522*^9, 3.732096593289495*^9}, {3.732096896619953*^9, 
   3.732097047345828*^9}, {3.7320971529914837`*^9, 3.732097179280325*^9}, {
   3.732097266709311*^9, 3.732097267554947*^9}, {3.7320973128823767`*^9, 
   3.732097326195074*^9}, {3.732097378959565*^9, 3.7320974126850367`*^9}, {
   3.732097476962433*^9, 3.7320975579323463`*^9}, {3.7320976365056562`*^9, 
   3.732097638774764*^9}, {3.732097731972705*^9, 3.7320977558622713`*^9}, {
   3.732098113810482*^9, 3.732098264941729*^9}, {3.7320983050764503`*^9, 
   3.732098312489339*^9}, {3.7320983586709337`*^9, 3.732098383489937*^9}, {
   3.73209880618968*^9, 3.732098886618194*^9}, {3.732098925042959*^9, 
   3.732099010232319*^9}, {3.732099078098895*^9, 3.732099291115057*^9}, {
   3.7320995378122053`*^9, 3.732099540811161*^9}, 3.732099727008102*^9, {
   3.732099800530018*^9, 3.732099811303247*^9}, {3.732100777335082*^9, 
   3.732100783173876*^9}, {3.732100996776939*^9, 3.7321009998956747`*^9}, 
   3.732101376830003*^9, {3.732101522301873*^9, 3.732101568403507*^9}, {
   3.7321019840498343`*^9, 3.73210203001466*^9}, 3.732102073721912*^9, 
   3.732102215614256*^9, {3.732102341867532*^9, 3.732102344826129*^9}, {
   3.7321024329581842`*^9, 3.732102449376041*^9}, 3.732102487530984*^9, {
   3.732114163783525*^9, 3.732114228721541*^9}, {3.732114275170065*^9, 
   3.732114289680703*^9}, 3.732114339682633*^9, {3.732114431622731*^9, 
   3.732114498730641*^9}, {3.732114531316506*^9, 3.732114588660266*^9}, {
   3.732114633357102*^9, 3.732114688689788*^9}, {3.732115137671144*^9, 
   3.732115195982992*^9}, {3.732115361142811*^9, 3.73211540473217*^9}, {
   3.732116252184219*^9, 3.7321163321368923`*^9}, {3.732116614582768*^9, 
   3.7321169168602457`*^9}, {3.732117027483149*^9, 3.732117071453843*^9}, {
   3.732117172114958*^9, 3.732117255415*^9}, {3.732117302817409*^9, 
   3.732117338829441*^9}, {3.732117388942157*^9, 3.7321174350933933`*^9}, {
   3.732117474087274*^9, 3.732117526010499*^9}, {3.732117562903288*^9, 
   3.732117581247011*^9}, {3.732117705692486*^9, 3.732117837742976*^9}, {
   3.732118026401354*^9, 3.7321180663248463`*^9}, {3.732118099324553*^9, 
   3.732118104539165*^9}, {3.7321183241174726`*^9, 3.732118351932502*^9}, {
   3.7321184109983377`*^9, 3.7321184560195513`*^9}, {3.732118519176272*^9, 
   3.732118533946547*^9}, {3.732118572418301*^9, 3.732118586342189*^9}, {
   3.732118713560184*^9, 3.73211872459376*^9}, {3.732118757900477*^9, 
   3.732118758921569*^9}, 3.732118800292746*^9, {3.73211886590317*^9, 
   3.732118883186109*^9}, {3.7321189429614363`*^9, 3.732118970754583*^9}, {
   3.7321190502428637`*^9, 3.732119076641067*^9}, 3.7321191088094*^9, {
   3.732119145264935*^9, 3.732119167012175*^9}, {3.7321192132031727`*^9, 
   3.732119226844471*^9}, 3.7321192591302757`*^9, {3.732119295692582*^9, 
   3.732119296022867*^9}, {3.7321195622068443`*^9, 3.73211964988933*^9}, {
   3.732119703748108*^9, 3.732119712425599*^9}, {3.73211975350036*^9, 
   3.732119768528224*^9}, {3.732119830043655*^9, 3.732119875061966*^9}, {
   3.732119912276248*^9, 3.732119927934145*^9}, {3.732120145014042*^9, 
   3.732120164739337*^9}, {3.732120226386971*^9, 3.732120228528522*^9}, {
   3.732120267628337*^9, 3.732120267929908*^9}, {3.7321203019620047`*^9, 
   3.7321203337125874`*^9}, {3.732120437168233*^9, 3.732120443069499*^9}, {
   3.732120595042354*^9, 3.732120595287128*^9}, {3.732120664110276*^9, 
   3.7321207137594433`*^9}, {3.7321207655215387`*^9, 3.732120771359586*^9}, {
   3.732120884166655*^9, 3.732121031062858*^9}, {3.732121091015358*^9, 
   3.7321210954987087`*^9}, {3.732121166486668*^9, 3.732121167986925*^9}, {
   3.7321212723370657`*^9, 3.732121346193357*^9}, {3.732121376586645*^9, 
   3.732121394795536*^9}, 3.73212179385291*^9, {3.732122588002667*^9, 
   3.732122625865732*^9}, {3.73212270609303*^9, 3.732122777682488*^9}, {
   3.732122846708263*^9, 3.732122853874672*^9}, {3.732122957792938*^9, 
   3.732123008265082*^9}, {3.7321230704988613`*^9, 3.732123143529513*^9}, {
   3.7321231840583677`*^9, 3.732123187272167*^9}, {3.73212325398239*^9, 
   3.7321232640269403`*^9}, {3.732123420092288*^9, 3.732123441297947*^9}, {
   3.732123481615498*^9, 3.7321234927286997`*^9}, {3.732123561469347*^9, 
   3.732123564218587*^9}, {3.732123642814185*^9, 3.73212376317239*^9}, {
   3.7321238063354053`*^9, 3.732123840380582*^9}, {3.732123957649968*^9, 
   3.732124007427272*^9}, {3.7321244248785057`*^9, 3.732124435457488*^9}, {
   3.732124605842689*^9, 3.7321246075275183`*^9}, {3.7321246423065557`*^9, 
   3.732124790040059*^9}, {3.732125001684536*^9, 3.732125012556492*^9}, {
   3.7321253656482763`*^9, 3.7321253952012568`*^9}, {3.732125491737005*^9, 
   3.732125527445704*^9}, {3.73212557936801*^9, 3.732125616846225*^9}, {
   3.732126177247345*^9, 3.732126181658292*^9}, {3.732126261440917*^9, 
   3.7321262899939423`*^9}, {3.732126673857821*^9, 3.732126683922616*^9}, 
   3.7321280642439003`*^9, {3.732128098468481*^9, 3.732128155748681*^9}, 
   3.732128928831441*^9, {3.7321289708307743`*^9, 3.732129013373907*^9}, {
   3.7321291553381643`*^9, 3.7321291593669643`*^9}, {3.732129216576181*^9, 
   3.732129218141452*^9}, {3.732129335955057*^9, 3.732129340313067*^9}, {
   3.732129691046843*^9, 3.732129754021215*^9}, {3.732130043486978*^9, 
   3.732130075640213*^9}, {3.7321305133318*^9, 3.732130517118058*^9}, {
   3.7321307792022057`*^9, 3.7321308180386868`*^9}, {3.732130855733745*^9, 
   3.732130869313942*^9}, {3.732131593846785*^9, 3.732131594123602*^9}, {
   3.732132720413369*^9, 3.732132788630994*^9}, {3.732148070558756*^9, 
   3.73214813022855*^9}, {3.732148227037177*^9, 3.732148232196052*^9}, {
   3.732148352666771*^9, 3.732148357618425*^9}, {3.732148397990882*^9, 
   3.732148452680162*^9}, {3.7321485278341722`*^9, 3.7321485536932364`*^9}, {
   3.7321486353570023`*^9, 3.732148685127976*^9}, {3.732148715801382*^9, 
   3.732148723318343*^9}, {3.732148756479673*^9, 3.732148770301849*^9}, {
   3.7321488083365088`*^9, 3.732148814220881*^9}, {3.732148881623218*^9, 
   3.732148918285351*^9}, {3.732148993492818*^9, 3.732149041226247*^9}, {
   3.732149124155065*^9, 3.732149135033278*^9}, {3.73214919650497*^9, 
   3.732149254620613*^9}, 3.73214934499361*^9, {3.732149518250189*^9, 
   3.73214952149679*^9}, {3.7321794727796926`*^9, 3.7321795104376307`*^9}, {
   3.732179806229435*^9, 3.7321798608778677`*^9}, {3.732186890074548*^9, 
   3.732186892099483*^9}, {3.732273668440584*^9, 3.73227367858226*^9}, {
   3.732274068908832*^9, 3.732274115150938*^9}, {3.732274152704187*^9, 
   3.7322742780883293`*^9}, {3.73227432619989*^9, 3.732274528666891*^9}, {
   3.732274606204081*^9, 3.732274706162095*^9}, {3.732279063352776*^9, 
   3.7322793431682653`*^9}, {3.732279406041354*^9, 3.7322795441205378`*^9}, {
   3.732279597040884*^9, 3.732279598448518*^9}, {3.7322797796417522`*^9, 
   3.732279803254964*^9}, {3.7322798737133408`*^9, 3.732279884527659*^9}, {
   3.7322799312475224`*^9, 3.7322799426305857`*^9}, {3.732280022728263*^9, 
   3.7322800774388647`*^9}, {3.73228021335325*^9, 3.732280224279903*^9}, {
   3.7322803191037617`*^9, 3.732280322072605*^9}, {3.7322803887296658`*^9, 
   3.732280547606296*^9}, {3.732280581272107*^9, 3.732280583569257*^9}, {
   3.732280657433313*^9, 3.7322806721194677`*^9}, 3.732280719340022*^9, {
   3.732280753379817*^9, 3.7322809753159533`*^9}, {3.732281110197443*^9, 
   3.7322811779625797`*^9}, {3.732281212365209*^9, 3.732281223830912*^9}, {
   3.732281281091206*^9, 3.732281319579575*^9}, {3.732281359736813*^9, 
   3.732281445086295*^9}, {3.732281482299931*^9, 3.7322815490680313`*^9}, {
   3.732281682568099*^9, 3.732281691558013*^9}, {3.73228173372097*^9, 
   3.73228177752662*^9}, {3.7322818178139877`*^9, 3.7322820314892473`*^9}, {
   3.73228213606045*^9, 3.732282173294774*^9}, {3.73228222079532*^9, 
   3.732282334536606*^9}, {3.732282376530509*^9, 3.732282383313693*^9}, {
   3.732282436048172*^9, 3.732282452846439*^9}, {3.732282528830146*^9, 
   3.732282545322377*^9}, {3.732282576925108*^9, 3.7322831332698174`*^9}, {
   3.732283166532042*^9, 3.732283235437557*^9}, {3.732283389113247*^9, 
   3.732283392023337*^9}, {3.732283428168215*^9, 3.7322834293419027`*^9}, {
   3.732283505107938*^9, 3.732283507824996*^9}, {3.732283559301176*^9, 
   3.7322836060890923`*^9}, {3.732283642424747*^9, 3.7322836511840763`*^9}, {
   3.732283694319878*^9, 3.732283804196093*^9}, {3.732283835941242*^9, 
   3.732283850315888*^9}, {3.732283920931375*^9, 3.732283949428362*^9}, {
   3.732283981850519*^9, 3.732284020321094*^9}, {3.732284187582177*^9, 
   3.732284207842355*^9}, {3.732289198545928*^9, 3.7322892777295713`*^9}, {
   3.732293264154922*^9, 3.73229326569785*^9}, {3.732293305723425*^9, 
   3.732293372099641*^9}, {3.732293405129694*^9, 3.732293428105321*^9}, {
   3.7322934669170303`*^9, 3.73229350009263*^9}, {3.7322942758856487`*^9, 
   3.732294315108076*^9}, {3.7322945388006277`*^9, 3.732294716857369*^9}, {
   3.732294761921857*^9, 3.732294790111483*^9}, {3.732361892744691*^9, 
   3.7323619587382*^9}, {3.7323619889461727`*^9, 3.732362193300148*^9}, {
   3.7323622393742657`*^9, 3.7323625766863413`*^9}, {3.732362652473363*^9, 
   3.732362936777048*^9}, {3.732362971911919*^9, 3.732362975733976*^9}, {
   3.732363009604783*^9, 3.732363099444395*^9}, {3.7323631303033037`*^9, 
   3.7323631631721907`*^9}, {3.732363216745565*^9, 3.732363285514771*^9}, 
   3.7323633459235697`*^9, {3.7323633770120373`*^9, 3.732363555994933*^9}, {
   3.732363646067868*^9, 3.732363686122983*^9}, {3.732363764586631*^9, 
   3.732363824242152*^9}, {3.732363888129147*^9, 3.732363924189187*^9}, 
   3.732364020145775*^9, {3.7323640503937893`*^9, 3.732364053107752*^9}, {
   3.732364114408519*^9, 3.732364120561975*^9}, 3.732364268471068*^9, {
   3.732375199214329*^9, 3.732375365859263*^9}, 3.7323754401330013`*^9, {
   3.732376947245214*^9, 3.732376968872691*^9}, {3.732377436648839*^9, 
   3.7323775838594646`*^9}, {3.73237816178828*^9, 3.732378329159795*^9}, {
   3.7323785368415813`*^9, 3.7323785662977467`*^9}, {3.7323786110967607`*^9, 
   3.732378612393483*^9}, {3.7323786623843107`*^9, 3.7323787119257383`*^9}, {
   3.732378892146102*^9, 3.7323789064991007`*^9}, 3.732378947262628*^9, {
   3.732379004230036*^9, 3.7323790082390757`*^9}, {3.732379071010144*^9, 
   3.732379102171975*^9}, {3.732379275544279*^9, 3.732379283415038*^9}, {
   3.732379490800548*^9, 3.7323795384640837`*^9}, {3.7323796028481607`*^9, 
   3.732379607711328*^9}, {3.7323804743172693`*^9, 3.732380475097829*^9}, {
   3.732382320852851*^9, 3.73238251058881*^9}, {3.732382647250401*^9, 
   3.732382660979651*^9}, {3.732382706184355*^9, 3.7323827263900423`*^9}, 
   3.732382804329302*^9, {3.732383083972378*^9, 3.732383089939131*^9}, {
   3.732383131792316*^9, 3.73238313480304*^9}, 3.732383285130555*^9, 
   3.732383382076099*^9, {3.732383442455065*^9, 3.7323834765031853`*^9}, {
   3.732383706010377*^9, 3.7323837457539043`*^9}, {3.732383890403141*^9, 
   3.732383896795795*^9}, {3.7323839492852592`*^9, 3.732383988324451*^9}, 
   3.7323840732364388`*^9, {3.732384335502445*^9, 3.7323843358795033`*^9}, {
   3.7323844556361647`*^9, 3.732384476731126*^9}, {3.732384519574108*^9, 
   3.732384528776597*^9}, {3.7323845892812233`*^9, 3.7323846965087557`*^9}, 
   3.732384735368063*^9, {3.732384789334811*^9, 3.732384794573783*^9}, {
   3.732384938843073*^9, 3.7323850357427597`*^9}, {3.7323850761720333`*^9, 
   3.7323851023584833`*^9}, 3.7323851438425493`*^9, {3.732385197798852*^9, 
   3.73238519846247*^9}, {3.732385247292966*^9, 3.732385258152028*^9}, {
   3.732385297400917*^9, 3.7323853042019*^9}, {3.7323853759225473`*^9, 
   3.732385377236526*^9}, {3.732385412587988*^9, 3.732385486461357*^9}, {
   3.732385520549205*^9, 3.732385552571205*^9}, {3.732385626963504*^9, 
   3.732385627771641*^9}, {3.7323857372417803`*^9, 3.7323857482029*^9}, {
   3.732385780897373*^9, 3.73238581480584*^9}, {3.7323858934969463`*^9, 
   3.732385897307267*^9}, {3.732385933263183*^9, 3.732385947626875*^9}, 
   3.732385979811343*^9, {3.7323860701485653`*^9, 3.73238608016076*^9}, {
   3.7323861122998247`*^9, 3.732386151703895*^9}, {3.7323862000301867`*^9, 
   3.732386236420909*^9}, {3.732386267239481*^9, 3.732386269029723*^9}, {
   3.73238630420308*^9, 3.732386329032552*^9}, {3.732386397105*^9, 
   3.732386411262719*^9}, 3.7323864413722973`*^9, {3.732386676841408*^9, 
   3.732386811083894*^9}, {3.732386857348381*^9, 3.732386903058589*^9}, {
   3.732386934690527*^9, 3.732386965514001*^9}, 3.732394160891323*^9, 
   3.732394202442793*^9, {3.73239442823394*^9, 3.732394430501254*^9}, 
   3.732394545587414*^9, {3.732394590490328*^9, 3.732394614925569*^9}, 
   3.73239466325071*^9, {3.732394754473633*^9, 3.732394755136915*^9}, {
   3.732394941810315*^9, 3.732394944440241*^9}, {3.732395011433588*^9, 
   3.732395031713478*^9}, {3.732395284781308*^9, 3.732395293284244*^9}, {
   3.7323954011725197`*^9, 3.7323954354521008`*^9}, {3.73239548431282*^9, 
   3.732395487681872*^9}, {3.732395539391083*^9, 3.7323955443346*^9}, {
   3.732395650683731*^9, 3.7323956633947697`*^9}, {3.7323957351571608`*^9, 
   3.7323957544181147`*^9}, {3.732395805117869*^9, 3.7323958080464067`*^9}, {
   3.7323959032131453`*^9, 3.7323959378824253`*^9}, {3.732396040519202*^9, 
   3.732396043086269*^9}, {3.732396122391658*^9, 3.732396197328886*^9}, {
   3.7323963011508837`*^9, 3.7323963499253683`*^9}, {3.7323965130442944`*^9, 
   3.732396539782796*^9}, {3.732396595842229*^9, 3.732396616049129*^9}, {
   3.7323970488382607`*^9, 3.7323970612056627`*^9}, {3.732397161800601*^9, 
   3.732397175383821*^9}, {3.732397254573127*^9, 3.732397263519684*^9}, {
   3.7323974169855957`*^9, 3.732397423328457*^9}, {3.7323975128182487`*^9, 
   3.732397525581169*^9}, {3.732397564861061*^9, 3.732397575475802*^9}, {
   3.732397755518031*^9, 3.732397755680997*^9}, {3.732397802199634*^9, 
   3.732397811478698*^9}, {3.732397888118148*^9, 3.732397904142561*^9}, {
   3.7323981329318533`*^9, 3.7323982025496483`*^9}, {3.732398252460122*^9, 
   3.7323983088030453`*^9}, {3.732399210999797*^9, 3.732399211285838*^9}, {
   3.73239936438485*^9, 3.732399367568097*^9}, {3.732399430888941*^9, 
   3.732399431177013*^9}, {3.73239953228161*^9, 3.7323995417895327`*^9}, {
   3.7323996355829687`*^9, 3.7323996360789413`*^9}, {3.732399702292564*^9, 
   3.732399786608097*^9}, {3.732399914578052*^9, 3.732399982424481*^9}, {
   3.732400098215192*^9, 3.7324001405901546`*^9}, {3.732400180854784*^9, 
   3.7324002292620173`*^9}, {3.7324002754783087`*^9, 3.732400372890719*^9}, 
   3.732400533754648*^9, {3.7324005688529453`*^9, 3.732400616153861*^9}, {
   3.732400920192856*^9, 3.73240092056038*^9}, {3.7324010312386007`*^9, 
   3.73240105067738*^9}, 3.732401247061887*^9, {3.7324013999330378`*^9, 
   3.7324014074489403`*^9}, {3.732401513867844*^9, 3.732401516123019*^9}, {
   3.73240169530547*^9, 3.7324016993824*^9}, {3.732401875034315*^9, 
   3.7324018839768753`*^9}, {3.732401934104825*^9, 3.732401934922728*^9}, {
   3.7324021373225727`*^9, 3.7324021455549088`*^9}, {3.732402308353957*^9, 
   3.732402332390952*^9}, {3.732402491067347*^9, 3.732402491831929*^9}, {
   3.735151886195064*^9, 3.735151948930167*^9}, {3.735151997593934*^9, 
   3.735152013426894*^9}, {3.7351520443615093`*^9, 3.735152096078773*^9}, {
   3.735152135521109*^9, 3.7351522294949408`*^9}, {3.735152346671906*^9, 
   3.735152347150243*^9}, 3.7351534725812397`*^9, {3.735155790719459*^9, 
   3.735155950889803*^9}, {3.735156141923098*^9, 3.735156171150934*^9}, {
   3.735156211032825*^9, 3.735156283758759*^9}, {3.7351563160705557`*^9, 
   3.735156393494046*^9}, {3.735156466537365*^9, 3.73515652078424*^9}, {
   3.735156552046887*^9, 3.7351565906914253`*^9}, {3.735157043192966*^9, 
   3.735157166194296*^9}, {3.735157228315424*^9, 3.735157252185543*^9}, {
   3.7351573537745256`*^9, 3.7351573608352633`*^9}, {3.735199811946425*^9, 
   3.7351998232250443`*^9}, {3.735199880011477*^9, 3.735199880192416*^9}, {
   3.735199945641967*^9, 3.735199949470378*^9}, {3.735199987306293*^9, 
   3.735200005967978*^9}, {3.7352000940916567`*^9, 3.735200099136683*^9}, 
   3.735200215572707*^9, {3.735200254866179*^9, 3.735200265664349*^9}, {
   3.735200344638871*^9, 3.735200378611691*^9}, 3.735200894091618*^9, {
   3.7352009374937267`*^9, 3.7352009753851624`*^9}, {3.7352011355928593`*^9, 
   3.735201149541634*^9}, {3.7352316744976263`*^9, 3.735231688499096*^9}, {
   3.7352317260037193`*^9, 3.735231759096321*^9}, {3.735231795301963*^9, 
   3.735231819564394*^9}, 3.7352319574200993`*^9, {3.735232248957859*^9, 
   3.735232300378283*^9}, {3.735232361288506*^9, 3.7352323614615583`*^9}, {
   3.73525201201575*^9, 3.735252090610137*^9}, {3.735252668857283*^9, 
   3.735252704880176*^9}, {3.7352528726755333`*^9, 3.735252875809238*^9}, {
   3.735286418391507*^9, 3.735286444478215*^9}, 3.735286679974226*^9, {
   3.735287309705509*^9, 3.735287322224452*^9}, {3.7353018397900267`*^9, 
   3.735301877625361*^9}, {3.735301978000839*^9, 3.735301985795951*^9}, {
   3.735302024201598*^9, 3.735302074832006*^9}, {3.73530211401764*^9, 
   3.735302116917947*^9}, {3.735302160166738*^9, 3.7353021709183493`*^9}, {
   3.735302638516354*^9, 3.735302671607609*^9}, {3.735302798360808*^9, 
   3.735302798660632*^9}, {3.7353028314341*^9, 3.735302831719645*^9}, {
   3.7353030182302923`*^9, 3.735303024781302*^9}, {3.7353031179366417`*^9, 
   3.735303118287011*^9}, {3.735303184720951*^9, 3.735303224030155*^9}, {
   3.735303418870944*^9, 3.7353034196355247`*^9}, {3.735303669596986*^9, 
   3.735303673906687*^9}, {3.735303787516962*^9, 3.7353037912257223`*^9}, {
   3.7353039721786203`*^9, 3.735304023421339*^9}, {3.735304081024536*^9, 
   3.735304107089891*^9}, {3.7353041997676353`*^9, 3.735304331668806*^9}, {
   3.735304617086594*^9, 3.735304626063149*^9}, {3.735304664407427*^9, 
   3.7353046847647753`*^9}, {3.735318864136848*^9, 3.735318868796288*^9}, {
   3.7353189275118303`*^9, 3.735318940493795*^9}, {3.7353190030098677`*^9, 
   3.7353190083571568`*^9}, {3.735319047718416*^9, 3.735319071434371*^9}, {
   3.735319169595831*^9, 3.735319172610652*^9}, 3.7353192554835587`*^9, {
   3.735319347363605*^9, 3.735319391703952*^9}, {3.735319422357616*^9, 
   3.735319527994053*^9}, {3.735319616557394*^9, 3.7353196352202883`*^9}, {
   3.735320103670064*^9, 3.7353201317399473`*^9}, {3.735320264465069*^9, 
   3.735320425488306*^9}, {3.735320545814582*^9, 3.735320550747683*^9}, {
   3.735320643943378*^9, 3.735320668308813*^9}, {3.735320702199771*^9, 
   3.7353207121011543`*^9}, {3.7353208162917337`*^9, 3.735320827915968*^9}, {
   3.735320889045105*^9, 3.735320920425868*^9}, {3.735321079334736*^9, 
   3.735321093295146*^9}, {3.7353211889780912`*^9, 3.735321193875607*^9}, {
   3.735321314782215*^9, 3.735321340956476*^9}, {3.735321411974704*^9, 
   3.735321414653754*^9}, {3.735321703130512*^9, 3.735321717543274*^9}, {
   3.7353217510778923`*^9, 3.73532176642319*^9}, {3.735321980097026*^9, 
   3.735321986504871*^9}, {3.7353312448441057`*^9, 3.735331251860478*^9}, {
   3.73533294451989*^9, 3.735332961141321*^9}, {3.735332997713808*^9, 
   3.7353331413211317`*^9}, {3.735333254160665*^9, 3.7353332639043837`*^9}, {
   3.735333540720544*^9, 3.735333552757634*^9}, {3.735333605933652*^9, 
   3.735333609826845*^9}, {3.735333650701724*^9, 3.735333654315205*^9}, {
   3.735333692492737*^9, 3.73533371093896*^9}, {3.735334435762171*^9, 
   3.7353344398317747`*^9}, {3.735334893235812*^9, 3.735334920118607*^9}, {
   3.735379797869072*^9, 3.735379877338726*^9}, {3.735379942269443*^9, 
   3.735380028638461*^9}, {3.735380098137721*^9, 3.735380109421548*^9}, 
   3.7353803254613323`*^9, {3.735380618417004*^9, 3.7353806533951178`*^9}, 
   3.7353807004782057`*^9, {3.735380756061873*^9, 3.735380768487171*^9}, {
   3.735380929305818*^9, 3.735380941981318*^9}, {3.735381270471713*^9, 
   3.735381275616499*^9}, {3.735381358297792*^9, 3.735381371454788*^9}, {
   3.735381473655114*^9, 3.735381482668517*^9}, {3.73538156764895*^9, 
   3.73538158407948*^9}, {3.7353816166197853`*^9, 3.735381736104597*^9}, {
   3.7353817738722687`*^9, 3.735381868364682*^9}, {3.735381937101376*^9, 
   3.735381952365588*^9}, {3.735382027134993*^9, 3.7353820294556713`*^9}, {
   3.735382077584992*^9, 3.735382098834557*^9}, {3.7353830575136957`*^9, 
   3.735383062954999*^9}, {3.735383124528561*^9, 3.7353831309823008`*^9}, {
   3.7353833264958057`*^9, 3.735383343854212*^9}, {3.735383399014551*^9, 
   3.735383516047103*^9}, {3.735383567760036*^9, 3.735383590686607*^9}, {
   3.735383621959025*^9, 3.73538367662433*^9}, {3.7353838378662243`*^9, 
   3.735383863178166*^9}, {3.735383913651352*^9, 3.7353839504340477`*^9}, {
   3.7353839810837927`*^9, 3.735383990980641*^9}, 3.735384068590713*^9, {
   3.735384420989957*^9, 3.735384566665325*^9}, {3.7353846094680567`*^9, 
   3.735384725279724*^9}, {3.73538477570671*^9, 3.7353847853153563`*^9}, 
   3.735384907027261*^9, {3.7353849610135803`*^9, 3.735384969727393*^9}, {
   3.735385034837678*^9, 3.7353850501957197`*^9}, {3.735385138885785*^9, 
   3.735385142168783*^9}, {3.735393908376552*^9, 3.735393923381262*^9}, {
   3.735394775755773*^9, 3.7353947826097393`*^9}, {3.735394825506873*^9, 
   3.7353948486996183`*^9}, {3.735394893189426*^9, 3.7353948984055223`*^9}, 
   3.735395087112401*^9, {3.735395158794302*^9, 3.735395167239794*^9}, 
   3.735395229229179*^9, {3.735395259849166*^9, 3.735395262049642*^9}, {
   3.735395370416587*^9, 3.735395377241303*^9}, {3.735395445323833*^9, 
   3.7353954743910913`*^9}, {3.735400709101923*^9, 3.735400754100305*^9}, {
   3.735400923166266*^9, 3.735400942481082*^9}, {3.7354010911951857`*^9, 
   3.735401151651915*^9}, 3.735401224853599*^9, {3.7354012822886133`*^9, 
   3.735401282732634*^9}, {3.73540133958724*^9, 3.735401358688643*^9}, {
   3.735401524711014*^9, 3.735401531858863*^9}, {3.7354015884424753`*^9, 
   3.735401592181665*^9}, {3.735401801299017*^9, 3.735401801680327*^9}, {
   3.735401833006177*^9, 3.735401878131599*^9}, {3.735402018332315*^9, 
   3.73540204060108*^9}, {3.73540210080802*^9, 3.7354021064430017`*^9}, {
   3.735402188243105*^9, 3.7354021979672737`*^9}, {3.735402406166258*^9, 
   3.735402431675331*^9}, {3.7354041840534286`*^9, 3.73540422543328*^9}, {
   3.735404285373362*^9, 3.735404386903644*^9}, {3.735404428300359*^9, 
   3.735404453883745*^9}, {3.735404518179903*^9, 3.735404547560596*^9}, {
   3.7354045818044786`*^9, 3.735404599923361*^9}, {3.735404676400576*^9, 
   3.735404697429908*^9}, {3.735404760896847*^9, 3.73540476573363*^9}, {
   3.7354048622957287`*^9, 3.7354048656958103`*^9}, {3.735404984331813*^9, 
   3.735404997250699*^9}, {3.735405062575873*^9, 3.7354050766739073`*^9}, {
   3.7354051404948473`*^9, 3.735405141857935*^9}, {3.735405391841434*^9, 
   3.7354053945983753`*^9}, {3.7354054261603737`*^9, 3.735405686112588*^9}, {
   3.735405722201866*^9, 3.735405779448648*^9}, {3.7354059346543427`*^9, 
   3.735405971048017*^9}, {3.735406023224943*^9, 3.7354060275377493`*^9}, {
   3.735406067973359*^9, 3.735406071964251*^9}, {3.735406143852209*^9, 
   3.735406204435604*^9}, {3.735406300094511*^9, 3.735406301952813*^9}, {
   3.73540637041073*^9, 3.7354064113254766`*^9}, {3.735406485204486*^9, 
   3.7354064876534367`*^9}, {3.735406567724113*^9, 3.7354065784597883`*^9}, {
   3.735406654117469*^9, 3.7354067106101933`*^9}, {3.735406817198534*^9, 
   3.735406875726136*^9}, {3.7354069281131363`*^9, 3.735406973319886*^9}, {
   3.735407157487288*^9, 3.735407179510404*^9}, {3.735407241750901*^9, 
   3.735407268881691*^9}, {3.73540731548169*^9, 3.7354073163468924`*^9}, {
   3.735407542487638*^9, 3.7354075633394947`*^9}, {3.735407610509302*^9, 
   3.735407626919064*^9}, {3.735407687284206*^9, 3.735407834028936*^9}, {
   3.7354078688598423`*^9, 3.735407872465097*^9}, {3.735408090451016*^9, 
   3.735408097862719*^9}, {3.735408186688951*^9, 3.7354081874007483`*^9}, {
   3.735408226350198*^9, 3.735408298037133*^9}, {3.735471110591382*^9, 
   3.735471181391005*^9}, {3.735474084625988*^9, 3.735474157326644*^9}, {
   3.735474341135276*^9, 3.735474355049426*^9}, {3.735474456650445*^9, 
   3.7354744665493183`*^9}, {3.735474499475995*^9, 3.735474512547914*^9}, {
   3.735474604036042*^9, 3.735474642687345*^9}, {3.7354747620002403`*^9, 
   3.735474968015114*^9}, {3.735475018399047*^9, 3.735475047210165*^9}, {
   3.735475106535159*^9, 3.735475108756097*^9}, {3.735475161026043*^9, 
   3.7354752144400063`*^9}, {3.7354752515142*^9, 3.7354752725841846`*^9}, {
   3.73547545456631*^9, 3.735475455296872*^9}, {3.7354754942075043`*^9, 
   3.735475504982225*^9}, 3.735475535165781*^9, {3.735475617856523*^9, 
   3.7354756980458927`*^9}, {3.735475786571321*^9, 3.735475795159781*^9}, 
   3.7354759809161386`*^9, {3.735476204118655*^9, 3.735476217046845*^9}, {
   3.735477171589816*^9, 3.7354771980064497`*^9}, {3.735477234988421*^9, 
   3.7354772501935987`*^9}, {3.735477293444642*^9, 3.735477295985523*^9}, {
   3.735477353208866*^9, 3.735477359582921*^9}, {3.735477442317231*^9, 
   3.735477494202656*^9}, {3.735477575406487*^9, 3.735477582702512*^9}, {
   3.735496210294972*^9, 3.73549623284942*^9}, {3.735496267152584*^9, 
   3.7354965166590853`*^9}, {3.735496550540474*^9, 3.73549674543471*^9}, {
   3.735496776481846*^9, 3.735496874196555*^9}, {3.735496910092925*^9, 
   3.73549696187344*^9}, {3.7354973396414022`*^9, 3.7354973585029593`*^9}, {
   3.7354973920144*^9, 3.7354974224948*^9}, {3.735497478943983*^9, 
   3.735497526384783*^9}, 3.73549761046703*^9, 3.735497645342082*^9, {
   3.735497698035137*^9, 3.735497716927575*^9}, 3.735498387278373*^9, {
   3.735498430185607*^9, 3.735498458185169*^9}, {3.735498527889277*^9, 
   3.735498536256837*^9}, {3.735498595146904*^9, 3.735498621901205*^9}, {
   3.735498762561233*^9, 3.735498766912108*^9}, {3.735498861183267*^9, 
   3.735498863894312*^9}, {3.735499056373892*^9, 3.735499096101857*^9}, {
   3.7355033643978558`*^9, 3.735503511934258*^9}, {3.7355035514744787`*^9, 
   3.7355036418267612`*^9}, {3.73550370008499*^9, 3.735503702771618*^9}, {
   3.73550378979277*^9, 3.73550381774265*^9}, 3.7355038784516983`*^9, {
   3.735503972940139*^9, 3.735503983548934*^9}, {3.7355040377932*^9, 
   3.735504039642112*^9}, {3.7355040706340103`*^9, 3.735504074665612*^9}, {
   3.7355042405758543`*^9, 3.735504276419508*^9}, {3.735504313179813*^9, 
   3.735504316954129*^9}, 3.735504358437313*^9, {3.735504458044907*^9, 
   3.7355044636980886`*^9}, {3.735504521129505*^9, 3.735504553174472*^9}, {
   3.735504620509293*^9, 3.735504651938676*^9}, {3.735504720115665*^9, 
   3.735504723656839*^9}, {3.735505524819751*^9, 3.735505527977211*^9}, {
   3.735505595214757*^9, 3.735505617140876*^9}, {3.735505775444734*^9, 
   3.735505800742625*^9}, {3.735505904589904*^9, 3.7355059086298447`*^9}, {
   3.7355060354906197`*^9, 3.7355060478190107`*^9}, {3.7355062588546963`*^9, 
   3.735506264366023*^9}, {3.735506373043638*^9, 3.7355063755782433`*^9}, 
   3.735506563923761*^9, {3.735506604498391*^9, 3.7355066060090303`*^9}, {
   3.735506645825119*^9, 3.735506667351646*^9}, {3.735506800644445*^9, 
   3.7355068046967087`*^9}, {3.735516228381282*^9, 3.735516247781864*^9}, 
   3.73551627992181*^9, {3.735516352168194*^9, 3.735516361214419*^9}, {
   3.735516425455681*^9, 3.735516437758363*^9}, {3.735516627592087*^9, 
   3.73551663231767*^9}, {3.7355166844754763`*^9, 3.735516706137726*^9}, {
   3.735516794369294*^9, 3.735516829636517*^9}, {3.7355169003934603`*^9, 
   3.735516918386139*^9}, {3.7355169618894243`*^9, 3.735516973606257*^9}, {
   3.735517122669524*^9, 3.735517166568694*^9}, {3.7355171994178877`*^9, 
   3.7355171999127274`*^9}, {3.735517275086543*^9, 3.735517330945243*^9}, {
   3.735517374657405*^9, 3.735517419953034*^9}, {3.735517455425095*^9, 
   3.7355174564854527`*^9}, {3.7355430215543327`*^9, 3.735543085420127*^9}, {
   3.735543132044485*^9, 3.7355432483315067`*^9}, {3.7355432826811943`*^9, 
   3.7355433334955473`*^9}, {3.735543460702259*^9, 3.73554347799608*^9}, {
   3.7355436056119547`*^9, 3.735543627049613*^9}, {3.7355436990568743`*^9, 
   3.7355437279672613`*^9}, {3.735543810218278*^9, 3.735543875270688*^9}, {
   3.7355439255007877`*^9, 3.735544127650916*^9}, {3.735544163989929*^9, 
   3.7355442244177847`*^9}, {3.735544763734428*^9, 3.7355448688717833`*^9}, {
   3.7355449422527027`*^9, 3.735544945212079*^9}, 3.735551788934483*^9, {
   3.735551844391973*^9, 3.735551983210436*^9}, {3.735552034511587*^9, 
   3.7355520506671143`*^9}, {3.735552089509666*^9, 3.7355521762047453`*^9}, {
   3.7355522065808764`*^9, 3.735552206691812*^9}, {3.73555223865976*^9, 
   3.735552359423841*^9}, {3.735552795997594*^9, 3.735552803591074*^9}, {
   3.735552966292094*^9, 3.73555298267701*^9}, {3.7355530250552692`*^9, 
   3.735553117316554*^9}, 3.735553395824575*^9, {3.735553933447048*^9, 
   3.7355539440426493`*^9}, {3.73555406070219*^9, 3.735554061168702*^9}, {
   3.73555491915738*^9, 3.735554919747553*^9}, 3.7355554044195232`*^9, {
   3.735556068819016*^9, 3.735556076161563*^9}, {3.735556113203816*^9, 
   3.735556181483177*^9}, {3.735556217699807*^9, 3.735556271746058*^9}, {
   3.73555649993469*^9, 3.7355565135817204`*^9}, {3.7355565516971188`*^9, 
   3.7355565910307007`*^9}, {3.735556627843622*^9, 3.735556683575706*^9}, {
   3.735556715048649*^9, 3.735556816582408*^9}, {3.735556857443684*^9, 
   3.735556884032391*^9}, {3.73555691875031*^9, 3.735556935987953*^9}, {
   3.735556966876663*^9, 3.735556971910404*^9}, 3.7355572222255907`*^9, {
   3.7355572546638727`*^9, 3.7355572602117043`*^9}, {3.735557327421914*^9, 
   3.735557379899377*^9}, {3.7355574668554077`*^9, 3.73555746838517*^9}, {
   3.73555796658422*^9, 3.735557977200161*^9}, {3.735558139170991*^9, 
   3.735558141164023*^9}, 3.735558176983965*^9, {3.735558214353855*^9, 
   3.735558215050879*^9}, 3.735558250947103*^9, {3.7355582853792973`*^9, 
   3.735558314968664*^9}, {3.735558393589218*^9, 3.735558443167386*^9}, {
   3.735558509596716*^9, 3.735558551843234*^9}, {3.735558618384015*^9, 
   3.735558765712867*^9}, {3.735558801467061*^9, 3.73555885973177*^9}, {
   3.7355588949100733`*^9, 3.735558897479144*^9}, {3.735559013084383*^9, 
   3.735559016312058*^9}, {3.735559213430909*^9, 3.73555922418902*^9}, {
   3.73555926975951*^9, 3.735559294417466*^9}, {3.7355594714175367`*^9, 
   3.735559514936038*^9}, {3.735559619172976*^9, 3.73555967341042*^9}, {
   3.735559863851859*^9, 3.735559864552046*^9}, {3.7355601299836187`*^9, 
   3.7355601917328653`*^9}, {3.735560258118712*^9, 3.73556031605474*^9}, {
   3.7355604037391777`*^9, 3.7355604806788197`*^9}, {3.7355608737166157`*^9, 
   3.735560892404907*^9}, {3.735560962049074*^9, 3.735560963102207*^9}, {
   3.735561067389525*^9, 3.735561137316825*^9}, {3.73556117723273*^9, 
   3.73556118094615*^9}, {3.735561217211418*^9, 3.735561217700292*^9}, {
   3.735561582778469*^9, 3.7355616014959803`*^9}, {3.7355616320740128`*^9, 
   3.735561633791292*^9}, {3.7355616642850027`*^9, 3.735561667778123*^9}, {
   3.735561826968094*^9, 3.735561833053377*^9}, {3.73556189703309*^9, 
   3.7355618974827757`*^9}, {3.73556230100692*^9, 3.735562301453113*^9}, {
   3.73556261056988*^9, 3.7355626273820066`*^9}, {3.735562771650923*^9, 
   3.7355628597129393`*^9}, {3.735563186487978*^9, 3.7355632331388187`*^9}, {
   3.735563266247745*^9, 3.7355632825669327`*^9}, 3.735563319378097*^9, {
   3.7355633800158367`*^9, 3.735563384485425*^9}, {3.735563548362776*^9, 
   3.735563568101533*^9}, {3.7355639191362867`*^9, 3.7355639237863293`*^9}, {
   3.735571072556902*^9, 3.7355710786084347`*^9}, {3.735571134937521*^9, 
   3.7355711857542686`*^9}, {3.7355714611338987`*^9, 
   3.7355715161343327`*^9}, {3.735571577428249*^9, 3.7355715912700567`*^9}, {
   3.735571624702132*^9, 3.735571681566367*^9}, {3.735571849705845*^9, 
   3.735571928089737*^9}, {3.735571995337118*^9, 3.7355720314504843`*^9}, {
   3.735572114455308*^9, 3.735572114846833*^9}, {3.735572304198018*^9, 
   3.7355723117109327`*^9}, {3.735572510945869*^9, 3.735572520747148*^9}, {
   3.735573009752391*^9, 3.735573048256852*^9}, {3.735573266355488*^9, 
   3.7355733098335943`*^9}, {3.735573405094442*^9, 3.735573542861835*^9}, {
   3.735573592900589*^9, 3.735573644838428*^9}, {3.735576442640867*^9, 
   3.7355767440114317`*^9}, {3.735577085526835*^9, 3.735577090031445*^9}, {
   3.735577153467051*^9, 3.735577170857893*^9}, {3.7355772468093853`*^9, 
   3.735577255436418*^9}, {3.735577391364217*^9, 3.735577398369809*^9}, {
   3.735577727164753*^9, 3.735577742240088*^9}, {3.7355793270645533`*^9, 
   3.735579357885614*^9}, {3.735579404276534*^9, 3.7355794140087147`*^9}, {
   3.735579987460412*^9, 3.735580048921904*^9}, {3.735580084075418*^9, 
   3.735580113764051*^9}, {3.7355801987438173`*^9, 3.7355802548935127`*^9}, {
   3.7355804501990547`*^9, 3.735580491071867*^9}, {3.735580593267838*^9, 
   3.7355806826967688`*^9}, {3.735580720299069*^9, 3.735580737331278*^9}, 
   3.735580823857108*^9, {3.735581039822895*^9, 3.735581070389113*^9}, {
   3.73558121536623*^9, 3.735581224356277*^9}, {3.735581444230425*^9, 
   3.7355814579219522`*^9}, {3.735581642035157*^9, 3.7355816514431467`*^9}, {
   3.735582241203517*^9, 3.735582250164444*^9}, {3.73558228761693*^9, 
   3.735582297108914*^9}, {3.735582363854742*^9, 3.735582379652186*^9}, {
   3.735594782716897*^9, 3.735594786344816*^9}, {3.735595007001461*^9, 
   3.735595013869557*^9}, {3.7355950468291883`*^9, 3.735595046988225*^9}, {
   3.735595157240985*^9, 3.73559517099984*^9}, {3.735595243781933*^9, 
   3.7355952712177134`*^9}, 3.7355954909617243`*^9, {3.7355955749042063`*^9, 
   3.7355955834570312`*^9}, {3.735595718198288*^9, 3.7355957236337957`*^9}, {
   3.735595756452153*^9, 3.735595756741529*^9}, {3.7355959793187*^9, 
   3.735596024800785*^9}, {3.735596059574312*^9, 3.735596075107295*^9}, {
   3.73559615678295*^9, 3.735596157181963*^9}, {3.7355965502526617`*^9, 
   3.7355965955317802`*^9}, {3.7355966959410954`*^9, 
   3.7355967045467863`*^9}, {3.735596775945682*^9, 3.735596784414155*^9}, {
   3.735648398420517*^9, 3.735648416253292*^9}, {3.735648488221479*^9, 
   3.7356484998086967`*^9}, {3.7356485612843637`*^9, 3.735648561501923*^9}, {
   3.735648675719701*^9, 3.7356487200115433`*^9}, 3.7356490797131977`*^9, {
   3.735661739747036*^9, 3.7356619095811768`*^9}, {3.735679649814999*^9, 
   3.735679654654317*^9}, {3.735679757063201*^9, 3.735679794246056*^9}, {
   3.735681438541918*^9, 3.735681576049301*^9}, {3.735681683144145*^9, 
   3.73568173365794*^9}, {3.735681780096445*^9, 3.735681823505847*^9}, {
   3.73568197776797*^9, 3.73568200259907*^9}, {3.7356820570186443`*^9, 
   3.7356820737940598`*^9}, {3.735682151784083*^9, 3.7356821570942593`*^9}, {
   3.735685971246766*^9, 3.735685975559078*^9}, {3.7356860102501373`*^9, 
   3.735686010952882*^9}, {3.7356860917444487`*^9, 3.735686110382316*^9}, {
   3.735686206958349*^9, 3.735686212603098*^9}, {3.735686323492292*^9, 
   3.7356863278277483`*^9}, {3.735686419954256*^9, 3.735686439274712*^9}, {
   3.735686613372813*^9, 3.735686637229754*^9}, {3.7356872274807987`*^9, 
   3.7356873608310204`*^9}, {3.73568739532512*^9, 3.735687513750268*^9}, {
   3.735687559326827*^9, 3.735687565333197*^9}, {3.735687686039382*^9, 
   3.735687699805303*^9}, {3.73568775507159*^9, 3.735687762367043*^9}, {
   3.7357174064921618`*^9, 3.735717427461508*^9}, {3.735717626713763*^9, 
   3.735717664982613*^9}, {3.7357177023278503`*^9, 3.735717729125741*^9}, 
   3.735718021444891*^9, {3.735718148959641*^9, 3.735718151285696*^9}, {
   3.7357182041197147`*^9, 3.735718208597815*^9}, {3.735718369012023*^9, 
   3.73571837096062*^9}, {3.7357184532934647`*^9, 3.7357184561318417`*^9}, {
   3.735718662267887*^9, 3.7357186658664*^9}, {3.7357187360735607`*^9, 
   3.7357188350465927`*^9}, {3.735719158079624*^9, 3.735719161459601*^9}, {
   3.735719231139409*^9, 3.735719353548642*^9}, {3.735719392298894*^9, 
   3.735719416511054*^9}, {3.735719497555133*^9, 3.735719537273676*^9}, {
   3.735719592769779*^9, 3.735719625304943*^9}, {3.7357196780277557`*^9, 
   3.735719686326309*^9}, {3.7357197947843113`*^9, 3.735719822298067*^9}, {
   3.735719884127285*^9, 3.7357199247853107`*^9}, {3.735721132581128*^9, 
   3.735721133081615*^9}, {3.735721363915739*^9, 3.735721364179134*^9}, {
   3.735726695402763*^9, 3.735726698498869*^9}, {3.735726747697275*^9, 
   3.735726753059869*^9}, {3.735726794462708*^9, 3.7357268690737877`*^9}, {
   3.735727125030479*^9, 3.7357271289400797`*^9}, 3.735727240090486*^9, {
   3.735727322024644*^9, 3.735727439204248*^9}, {3.735727531488043*^9, 
   3.735727533234445*^9}, {3.735727876203895*^9, 3.735727896687929*^9}, {
   3.735727935321433*^9, 3.735727935556568*^9}, {3.735728068248897*^9, 
   3.735728074221109*^9}, {3.735728158383741*^9, 3.735728188000258*^9}, {
   3.735728295639715*^9, 3.735728301355998*^9}, {3.735728520564519*^9, 
   3.735728565917007*^9}, {3.735732685883733*^9, 3.7357327199553137`*^9}, {
   3.735732927220196*^9, 3.735732933460103*^9}, {3.735733033406774*^9, 
   3.735733036811964*^9}, {3.735733073033697*^9, 3.735733083024085*^9}, {
   3.735733175144911*^9, 3.7357331783427267`*^9}, {3.7357333398658447`*^9, 
   3.735733344660844*^9}, {3.735733522820366*^9, 3.735733523368164*^9}, {
   3.7357336310291767`*^9, 3.735733640690185*^9}, {3.735733678805628*^9, 
   3.7357337180720177`*^9}, {3.7357338983841343`*^9, 3.735733903218956*^9}, {
   3.735734109801528*^9, 3.7357341365034113`*^9}, {3.735741890005826*^9, 
   3.735741909972117*^9}, {3.735741946231902*^9, 3.735741949884213*^9}, {
   3.735742029498406*^9, 3.735742081102229*^9}, {3.735742269769206*^9, 
   3.735742271063014*^9}, {3.735743464136899*^9, 3.735743464679233*^9}, {
   3.735743522386486*^9, 3.735743526703562*^9}, {3.735743581296644*^9, 
   3.735743585309366*^9}, {3.73580458883092*^9, 3.7358046435252457`*^9}, 
   3.735804691623199*^9, {3.735804831378655*^9, 3.7358048982425623`*^9}, {
   3.73580512087237*^9, 3.735805121445997*^9}, {3.735805159888372*^9, 
   3.73580519970903*^9}, {3.7358053811180058`*^9, 3.735805383158399*^9}, {
   3.735805768274838*^9, 3.73580577737649*^9}, {3.735805929315239*^9, 
   3.735805933355411*^9}, {3.735806281100123*^9, 3.735806368049004*^9}, {
   3.735806471244989*^9, 3.735806472746894*^9}, {3.73581247358628*^9, 
   3.735812476294729*^9}, {3.7358125487462254`*^9, 3.7358125497767*^9}, {
   3.735812979773386*^9, 3.735812992056946*^9}, {3.735813347300907*^9, 
   3.735813350457121*^9}, {3.73581340025764*^9, 3.73581341281347*^9}, {
   3.735814016089065*^9, 3.735814019811479*^9}, 3.7358142615075274`*^9, {
   3.735814367402109*^9, 3.73581437794496*^9}, {3.7358145642320633`*^9, 
   3.735814624907217*^9}, {3.735814679357678*^9, 3.735814684844995*^9}, {
   3.735815062710162*^9, 3.735815064364306*^9}, {3.735815171145624*^9, 
   3.7358151797098093`*^9}, {3.7358153932365017`*^9, 3.735815435162826*^9}, {
   3.735815523441153*^9, 3.735815524599227*^9}, {3.735815562232718*^9, 
   3.735815569190711*^9}, {3.735815627180587*^9, 3.7358156874104156`*^9}, 
   3.735815786798278*^9, {3.7358158390316553`*^9, 3.735815843862722*^9}, {
   3.735816121670751*^9, 3.735816126629168*^9}, {3.735816192481039*^9, 
   3.735816200247161*^9}, {3.735816356565494*^9, 3.7358163597313957`*^9}, {
   3.73581667293859*^9, 3.7358166782660418`*^9}, {3.7358167111300497`*^9, 
   3.7358167214636602`*^9}, {3.735816761488537*^9, 3.735816766415841*^9}, {
   3.735816816418783*^9, 3.7358169527942753`*^9}, {3.735817008154174*^9, 
   3.735817060432766*^9}, 3.73581720831743*^9, {3.735817263950378*^9, 
   3.735817330366252*^9}, {3.7358174111485*^9, 3.735817428882599*^9}, {
   3.7358174773052187`*^9, 3.7358174833812523`*^9}, {3.735817526663658*^9, 
   3.7358175325494213`*^9}, {3.735817597495611*^9, 3.735817701898464*^9}, {
   3.7358177964536448`*^9, 3.7358178370200872`*^9}, 3.735817871995126*^9, 
   3.7358179188658247`*^9, {3.735817966509768*^9, 3.735818004794694*^9}, {
   3.735818098078329*^9, 3.7358181416271467`*^9}, {3.735818223429832*^9, 
   3.735818244260207*^9}, {3.7358183563965683`*^9, 3.7358183909516*^9}, {
   3.735818456316058*^9, 3.735818513220664*^9}, 3.735818800335082*^9, {
   3.735859738383894*^9, 3.735859744665496*^9}, {3.7358599371269827`*^9, 
   3.73585996319131*^9}, {3.73586010388054*^9, 3.735860134344687*^9}, {
   3.7358603569024343`*^9, 3.73586038682241*^9}, {3.735910662138764*^9, 
   3.735910664829471*^9}, {3.735910968419992*^9, 3.735910975851788*^9}, {
   3.735911975769166*^9, 3.735911987809411*^9}, {3.73591201975207*^9, 
   3.73591202603618*^9}, {3.7359121451322947`*^9, 3.735912175089562*^9}, {
   3.7359122145848722`*^9, 3.735912216348415*^9}, {3.735912259858735*^9, 
   3.735912260002742*^9}, {3.735912298809732*^9, 3.735912333283143*^9}, {
   3.735937832442389*^9, 3.735937839265937*^9}, 3.735939309201009*^9, {
   3.735940178944549*^9, 3.73594019385548*^9}, {3.735940230725795*^9, 
   3.7359402358073072`*^9}, {3.7359403782352962`*^9, 3.735940380946807*^9}, {
   3.736005437469408*^9, 3.736005449448138*^9}, {3.736005570657346*^9, 
   3.7360055892574*^9}, {3.736010122972484*^9, 3.736010152515066*^9}, {
   3.736010233371513*^9, 3.736010241061075*^9}, {3.736010665677745*^9, 
   3.736010668296997*^9}, {3.736011325544752*^9, 3.736011345252757*^9}, {
   3.73601138633212*^9, 3.7360113926497803`*^9}, {3.7360114341462927`*^9, 
   3.736011439334531*^9}, {3.7360115496577177`*^9, 3.736011568888481*^9}, {
   3.7360116578768673`*^9, 3.736011680170022*^9}, {3.736011715652236*^9, 
   3.7360117293286467`*^9}, {3.736013169296871*^9, 3.736013188073351*^9}, {
   3.736013671451499*^9, 3.736013675143322*^9}, 3.736014050016932*^9, {
   3.7360141085367393`*^9, 3.736014113510562*^9}, {3.736014512263171*^9, 
   3.7360145175522337`*^9}, {3.736014653988864*^9, 3.736014757830244*^9}, {
   3.736014959166634*^9, 3.736014964794971*^9}, {3.736015250548635*^9, 
   3.736015257131742*^9}, {3.736018915644649*^9, 3.7360189167997017`*^9}, {
   3.736025823053631*^9, 3.7360258450240793`*^9}, {3.736060853173761*^9, 
   3.736060885809679*^9}, {3.736060928747531*^9, 3.736060954402708*^9}, 
   3.7360624576368237`*^9, 3.736062651519918*^9, {3.7360634332663393`*^9, 
   3.736063444784256*^9}, 3.736063502540098*^9, {3.736063551678973*^9, 
   3.736063556947356*^9}, 3.7360702400718403`*^9, {3.736070768051195*^9, 
   3.736070873221291*^9}, {3.736071085862277*^9, 3.736071135330772*^9}, {
   3.736071185979178*^9, 3.736071190359941*^9}, {3.736071259779582*^9, 
   3.7360713303843117`*^9}, {3.736071415690696*^9, 3.736071424880039*^9}, {
   3.7360715318347073`*^9, 3.736071546084262*^9}, {3.736072470865555*^9, 
   3.736072475481205*^9}, {3.736072658709848*^9, 3.736072693352949*^9}, {
   3.736073022829536*^9, 3.7360730596863337`*^9}, {3.736073441842863*^9, 
   3.7360734469333982`*^9}, {3.736073619638742*^9, 3.736073620418756*^9}, {
   3.736073699674665*^9, 3.7360737160485067`*^9}, {3.7360738297365103`*^9, 
   3.7360738374666567`*^9}, 3.736074089372416*^9, {3.7360741324162693`*^9, 
   3.736074134322857*^9}, {3.736074196529546*^9, 3.736074209498136*^9}, {
   3.7360747093005857`*^9, 3.736074722081999*^9}, {3.736075568606811*^9, 
   3.736075578537171*^9}, {3.736161217233898*^9, 3.736161219415326*^9}, {
   3.736161278142199*^9, 3.736161286567848*^9}, 3.7361613839157457`*^9, 
   3.738338255977549*^9, 3.738338299649315*^9, {3.7389501841151667`*^9, 
   3.738950194219404*^9}, 3.754143113809683*^9},
 FontSize->16,ExpressionUUID->"67dbbb11-4224-404d-b1c5-34c09749612a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawToy", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "last"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"last", " ", "=", " ", 
       RowBox[{"1", "+", "b", "+", 
        RowBox[{"m", " ", "a"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"edges", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", "\[Rule]", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "\[Rule]", 
           RowBox[{
            RowBox[{"k", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{"a", "-", "1"}], ")"}]}], "+", "2", "+", "i"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{"a", "-", "1"}], ")"}]}], "+", "3", "+", "i"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", 
              RowBox[{"a", "-", "4"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"k", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "a", "-", "1"}], 
           "\[Rule]", "last"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"{", 
         RowBox[{"0", "->", 
          RowBox[{
           RowBox[{"m", 
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}]}], "+", "2"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"m", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "2", "+", "k"}], 
           "\[Rule]", 
           RowBox[{
            RowBox[{"m", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "3", "+", "k"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"b", "-", "3"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"b", ">", "1"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"edges", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"m", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}], "+", "b"}], "\[Rule]", 
            "last"}], "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"edges", " ", "=", 
       RowBox[{"Flatten", "[", "edges", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"edges", ",", 
          RowBox[{"VertexLabels", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"\"\<S\>\"", ",", 
                  RowBox[{
                   RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", 
                "Above"}], "]"}]}], ",", 
             RowBox[{"last", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"\"\<T\>\"", ",", 
                  RowBox[{
                   RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", 
                "Below"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"EdgeStyle", "\[Rule]", 
           RowBox[{"Arrowheads", "[", "0.071", "]"}]}]}], "]"}], ",", 
        RowBox[{"90", " ", "Degree"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.736150733396758*^9, 3.73615086958261*^9}, {
   3.736150901515905*^9, 3.736151333753436*^9}, {3.736151403219352*^9, 
   3.736151447686452*^9}, {3.73615862286281*^9, 3.7361587077552767`*^9}, {
   3.736158743203849*^9, 3.736158780245133*^9}, {3.7361589963634987`*^9, 
   3.736158996791546*^9}, {3.736159115116067*^9, 3.7361591232155247`*^9}, 
   3.736159165482774*^9, {3.736159299455698*^9, 3.7361593090363007`*^9}, {
   3.736159372886153*^9, 3.736159373734783*^9}, {3.7361595724511003`*^9, 
   3.736159774327341*^9}, {3.736159836390109*^9, 3.736159847899737*^9}, {
   3.7361600128802633`*^9, 3.736160015393713*^9}, 3.736160167105945*^9, 
   3.73616036004422*^9, 3.736161198826997*^9, {3.7361612781424723`*^9, 
   3.736161286568121*^9}, {3.736164091907095*^9, 3.736164179827381*^9}, {
   3.736236523154957*^9, 3.736236536771563*^9}, 3.738338255979813*^9, 
   3.738338299651761*^9, {3.739088275721196*^9, 3.7390883196159983`*^9}, {
   3.7390883732647552`*^9, 3.739088387366384*^9}, {3.739088459247458*^9, 
   3.739088535968131*^9}, {3.752754166225984*^9, 3.7527542917244577`*^9}, {
   3.752754399762089*^9, 3.7527544932311573`*^9}, {3.752754818187324*^9, 
   3.7527548928554697`*^9}, 3.754143113810025*^9, {3.7559740837199802`*^9, 
   3.755974087030645*^9}, {3.755974121192182*^9, 3.7559741385561457`*^9}, {
   3.755974178653069*^9, 3.755974179679907*^9}, {3.7559742297682037`*^9, 
   3.7559742300681458`*^9}, {3.755974414828931*^9, 3.7559744728444843`*^9}},
 FontSize->16,
 CellLabel->
  "In[222]:=",ExpressionUUID->"c621ef94-98d9-45d6-b7a3-7b7b74d02def"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "buildTaylorPlot", ",", "buildBezierPlot", ",", " ", "buildBezierCoefs", 
   ",", "selectTaylorPlots", ",", "selectBezierPlots"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"ColorData", "[", 
    RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colors", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"colors", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectionNames", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<lowest-order\>\"", ",", "\"\<uniform\>\"", ",", "\"\<bimodal\>\"", 
     ",", "\"\<threshold\>\"", ",", "\"\<bounds\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selections", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"selectionNames", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"FontColor", "->", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ttips", "[", "name_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "name", ",", "\[IndentingNewLine]", "\"\<data\>\"", ",", 
     "\"\<Truncated Taylor polynomials match data;\\n estimated derivatives \
and Bernstein coefficients may be wrong\>\"", ",", "\[IndentingNewLine]", 
     "\"\<derivatives\>\"", ",", 
     "\"\<Truncated Taylor polynomials may not match data;\\n Bernstein \
coefficients will be correct\>\"", ",", "\[IndentingNewLine]", 
     "\"\<lowest-order\>\"", ",", 
     "\"\<A(left + right - 1)-degree Bezier polynomial using only known \
coefficients\>\"", ",", "\[IndentingNewLine]", "\"\<uniform\>\"", ",", 
     "\"\<constant\>\"", ",", "\[IndentingNewLine]", "\"\<bimodal\>\"", ",", 
     "\"\<piecewise constant with two jump discontinuities\>\"", ",", 
     "\[IndentingNewLine]", "\"\<threshold\>\"", ",", 
     "\"\<piecewise constant with one jump discontinuity\>\"", ",", 
     "\[IndentingNewLine]", "\"\<bounds\>\"", ",", 
     "\"\<Tight bounds under the assumption that Bezier coefficients are \
non-negative.\>\"", ",", "\[IndentingNewLine]", "\"\<binomial\>\"", ",", 
     "\"\<a binomial distribution with parameters N and p.\\n Illustrates \
fitting an inherently discrete function.\>\"", ",", "\[IndentingNewLine]", 
     "\"\<pole\>\"", ",", 
     "\"\<N uniformly-sampled values from a function with a pole in the \
complex plane.\\n Illustrates fitting samples from a non-polynomial function.\
\>\"", ",", "\[IndentingNewLine]", "\"\<network reliability\>\"", ",", 
     "\"\<the two terminal Moore-Shannon network reliability for the toy \
network illustrated.\\n I.e., the probability of getting a message from \
Source to Terminus when the probability of transmitting over each edge is \
x\\n Illustrates tight bounds when Bernstein coefficients are guaranteed to \
be non-negative.\>\"", ",", "\[IndentingNewLine]", "\"\<Ising\>\"", ",", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<the partition function of an Ising model on a circle with N sites \
in an external field:\\n ``(T) =`` n(s,f) exp{`` [s+``f]}\>\"", ",", 
       StyleBox[
        RowBox[{"Subscript", "[", 
         RowBox[{"Z", ",", "\"\<N,H/J\>\""}], "]"}], "InlineFormula"], 
       StyleBox[",", "InlineFormula"], 
       "\"\<\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)\>\"", 
       ",", 
       StyleBox[
        RowBox[{"2", 
         RowBox[{"J", "/", 
          RowBox[{"(", "kT", ")"}]}]}], "InlineFormula"], 
       StyleBox[",", "InlineFormula"], 
       StyleBox[
        RowBox[{"H", "/", "J"}], "InlineFormula"]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"condNumber", "[", "m_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "@", "#"}], "/", 
      RowBox[{"Last", "@", "#"}]}], "&"}], "@", 
    RowBox[{"SingularValueList", "[", "m", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"const", "[", "x_", "]"}], " ", ":=", " ", "x"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"returns", " ", "a", " ", 
     RowBox[{"matrix", ".", " ", "Each"}], " ", "row", " ", "contains", " ", 
     "a", " ", "possible", " ", "set", " ", "of", " ", "Taylor", " ", 
     RowBox[{"coefficients", ":", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dof", "\[LessEqual]", "0"}], ")"}], " ", "Row", " ", "1"}], 
      ":", " ", 
      RowBox[{"all", " ", "the", " ", "known", " ", "coefficients"}]}]}], ",",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"or", " ", "their", " ", "mean", " ", "if", " ", "dof"}], " ", 
      "\[LessEqual]", " ", 
      RowBox[{"0", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"dof", ">", "0"}], ")"}], " ", "Row", " ", "2"}]}], ":", " ", 
     RowBox[{
     "coefficients", " ", "when", " ", "unknown", " ", "mass", " ", "is", " ",
       "uniformly", " ", "distributed", " ", "across", " ", "unknown", " ", 
      "data", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "2"}], ")"}], " ", "Row", " ", "3"}], ":", " ", 
     RowBox[{
     "coefficiengts", " ", "when", " ", "unknown", " ", "mass", " ", "is", 
      " ", "uniformly", " ", "distributed", " ", "to", " ", "first", " ", 
      "and", " ", "last", " ", "unknown", " ", "data", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "1"}], ")"}], " ", "Row", " ", "4"}], ":", " ", 
     RowBox[{
     "coefficients", " ", "when", " ", "unknown", " ", "mass", " ", "is", " ",
       "all", " ", "placed", " ", "in", " ", "unknown", " ", "data", " ", 
      "near", " ", "center", " ", "of", " ", "unknown", " ", "range"}]}]}], 
   "\[IndentingNewLine]", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildTaylorCoefs", "[", 
     RowBox[{
     "leftm_", ",", "rightm_", ",", "numPts_", ",", " ", "d2t_", ",", 
      "alpha_", ",", "alphabar_", ",", "vals_", ",", "matchData_", ",", 
      "isMonotonic_", ",", "isDiscrete_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dof", ",", " ", "leftCoefs", ",", "rightCoefs", ",", "allCoefs", ",", 
        "loBound", ",", "upBound", ",", "sumKnownCoefs"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dof", " ", "=", " ", 
        RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"isDiscrete", " ", "||", " ", "matchData"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sumKnownCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", 
                RowBox[{"-", "i"}], "]"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], 
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"sumKnownCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"alpha", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/", "i"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"alphabar", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "/", "i"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"allCoefs", " ", "=", 
        RowBox[{"{", 
         RowBox[{"Table", "[", 
          RowBox[{"0", ",", 
           RowBox[{"{", "dof", "}"}]}], "]"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dof", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "default", " ", "interpolation", " ", "is", " ", "linear", " ", 
              "across", " ", "missing", " ", "coefs"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"loBound", " ", "=", " ", 
              RowBox[{"vals", "[", 
               RowBox[{"[", "leftm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"vals", "[", 
               RowBox[{"[", 
                RowBox[{"-", "rightm"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"loBound", " ", "+", " ", 
                  RowBox[{"k", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"upBound", " ", "-", " ", "loBound"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"dof", "+", "1"}], ")"}]}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"0.5", " ", 
                    RowBox[{"(", 
                    RowBox[{"upBound", "+", "loBound"}], ")"}]}], ",", 
                    "dof"}], "]"}], "}"}], "]"}]}], "]"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"loBound", ",", " ", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"upBound", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"1", "-", 
               RowBox[{"sumKnownCoefs", "/", "numPts"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"upBound", "/", "dof"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"0.5", " ", "upBound"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"dof", "-", "2"}]}], "]"}], ",", " ", 
                    RowBox[{"0.5", " ", "upBound"}]}], "}"}], "]"}]}], "]"}], 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"allCoefs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", 
              RowBox[{"(*", 
               RowBox[{
               "users", " ", "of", " ", "allCoefs", " ", "expect", " ", "it", 
                " ", "to", " ", "have", " ", "entries", " ", "for", " ", 
                "the", " ", "bimodal", " ", "and", " ", "spike", " ", 
                "densities"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    "upBound", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"allCoefs", " ", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"d2t", ".", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"vals", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", "k", "]"}], "]"}], ",", 
              RowBox[{"vals", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"-", "rightm"}], ";;", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "allCoefs", "]"}]}], "}"}]}], "]"}]}], ";",
        "\[IndentingNewLine]", "allCoefs"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"returns", " ", "a", " ", 
     RowBox[{"matrix", ".", " ", "Each"}], " ", "row", " ", "contains", " ", 
     "a", " ", "possible", " ", "set", " ", "of", " ", "Bernstein", " ", 
     RowBox[{"coefficients", ":", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dof", "\[LessEqual]", "0"}], ")"}], " ", "Row", " ", "1"}], 
      ":", " ", 
      RowBox[{"all", " ", "the", " ", "known", " ", "coefficients"}]}]}], ",",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"or", " ", "their", " ", "mean", " ", "if", " ", "dof"}], " ", 
      "\[LessEqual]", " ", 
      RowBox[{"0", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"dof", ">", "0"}], ")"}], " ", "Row", " ", "2"}]}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "uniformly", " ", "distributed", 
      " ", "across", " ", "unknown", " ", "coefficients", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "2"}], ")"}], " ", "Row", " ", "3"}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "uniformly", " ", "distributed", 
      " ", "to", " ", "first", " ", "and", " ", "last", " ", "unknown", " ", 
      "coefficients", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "1"}], ")"}], " ", "Row", " ", "4"}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "all", " ", "placed", " ", "in", 
      " ", "unknown", " ", "coefficient", " ", "near", " ", "center", " ", 
      "of", " ", "unknown", " ", "range", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "0"}], ")"}], " ", "Row", " ", "5"}], ":", " ", 
     RowBox[{"exact", " ", "coefficients"}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildBezierCoefs", "[", 
     RowBox[{
     "leftm_", ",", "rightm_", ",", "numPts_", ",", " ", "t2b_", ",", 
      "alpha_", ",", "alphabar_", ",", "d2b_", ",", "vals_", ",", 
      "matchData_", ",", "isMonotonic_", ",", "isDiscrete_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dof", ",", " ", "leftCoefs", ",", "rightCoefs", ",", "allCoefs", ",", 
        "loBound", ",", "upBound", ",", "sumKnownCoefs"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dof", " ", "=", " ", 
        RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"matchData", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"leftCoefs", " ", "=", 
           RowBox[{
            RowBox[{"d2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "leftm"}], ",", 
               RowBox[{"1", ";;", "leftm"}]}], "]"}], "]"}], ".", 
            RowBox[{"vals", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "leftm"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rightCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"d2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "rightm"}], ",", 
               RowBox[{"1", ";;", "rightm"}]}], "]"}], "]"}], ".", 
            RowBox[{"vals", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ";;", 
               RowBox[{"-", "rightm"}], ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"leftCoefs", " ", "=", 
           RowBox[{
            RowBox[{"t2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "leftm"}], ",", 
               RowBox[{"1", ";;", "leftm"}]}], "]"}], "]"}], ".", 
            RowBox[{"alpha", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "leftm"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rightCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"t2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "rightm"}], ",", 
               RowBox[{"1", ";;", "rightm"}]}], "]"}], "]"}], ".", 
            RowBox[{"alphabar", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "rightm"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sumKnownCoefs", " ", "=", " ", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"leftCoefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"rightCoefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dof", "<=", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"allCoefs", "=", 
           RowBox[{"Switch", "[", 
            RowBox[{"leftm", ",", "\[IndentingNewLine]", "0", ",", " ", 
             RowBox[{"{", 
              RowBox[{"Reverse", "[", "rightCoefs", "]"}], "}"}], ",", 
             "\[IndentingNewLine]", "numPts", ",", 
             RowBox[{"{", "leftCoefs", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"numPts", "-", "rightm"}], ",", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"leftCoefs", ",", 
                 RowBox[{"Reverse", "[", "rightCoefs", "]"}]}], "}"}], "]"}], 
              "}"}], ",", "\[IndentingNewLine]", "_", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"leftCoefs", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "]"}], ",", 
                 RowBox[{"0.5", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"leftCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"numPts", "-", "rightm", "+", "1"}], ";;", 
                    "leftm"}], "]"}], "]"}], "+", 
                    RowBox[{"rightCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{"rightm", ";;", 
                    RowBox[{"numPts", "-", "leftm", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ")"}]}], ",", 
                 RowBox[{"rightCoefs", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"numPts", "-", "leftm"}], ";;", "1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
              "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"allCoefs", " ", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "default", " ", "interpolation", " ", "is", " ", "linear", " ", 
              "across", " ", "missing", " ", "coefs"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"loBound", " ", "=", " ", 
              RowBox[{"leftCoefs", "[", 
               RowBox[{"[", "leftm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"rightCoefs", "[", 
               RowBox[{"[", "rightm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"loBound", " ", "+", " ", 
                  RowBox[{"k", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"upBound", " ", "-", " ", "loBound"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"dof", "+", "1"}], ")"}]}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"0.5", " ", 
                    RowBox[{"(", 
                    RowBox[{"upBound", "+", "loBound"}], ")"}]}], ",", 
                    "dof"}], "]"}], "}"}], "]"}]}], "]"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"loBound", ",", " ", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"upBound", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"1", "-", 
               RowBox[{"sumKnownCoefs", "/", "numPts"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"upBound", "/", "dof"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"0.5", " ", "upBound"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"dof", "-", "2"}]}], "]"}], ",", " ", 
                    RowBox[{"0.5", " ", "upBound"}]}], "}"}], "]"}]}], "]"}], 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"allCoefs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", 
              RowBox[{"(*", 
               RowBox[{
               "users", " ", "of", " ", "allCoefs", " ", "expect", " ", "it", 
                " ", "to", " ", "have", " ", "entries", " ", "for", " ", 
                "the", " ", "bimodal", " ", "and", " ", "spike", " ", 
                "densities"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    "upBound", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"allCoefs", " ", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"leftCoefs", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                RowBox[{"allCoefs", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"rightCoefs", "[", 
                 RowBox[{"[", 
                  RowBox[{"rightm", ";;", "1", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "allCoefs", "]"}]}], "}"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"isDiscrete", "||", " ", "matchData"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"allCoefs", ",", 
            RowBox[{"d2b", " ", ".", " ", "vals"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"allCoefs", ",", 
            RowBox[{"t2b", " ", ".", " ", "alpha"}]}], "]"}], ";"}]}], "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "alpha", " ", "is", " ", "only", " ", "correct", " ", "if", " ", 
          "function", " ", "is", " ", "continuous"}], " ", "*)"}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "allCoefs"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildTaylorPlot", "[", 
     RowBox[{
      RowBox[{"leftm_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"rightm_Integer", "?", "NonNegative"}], ",", "vals_List", ",", 
      "func_", ",", "alpha_", ",", "alphabar_", ",", "allCoefs_", ",", 
      "isMonotonic_", ",", "d2t_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numPts", ",", "maxDegree", ",", "leftTaylor", ",", "rightTaylor", ",",
         "taylor", ",", "curves", ",", "dof", ",", "markerSize", ",", 
        "numChoices", ",", "numCurves", ",", "bounds", ",", "minVal", ",", 
        "maxVal"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"curves", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numPts", "=", 
        RowBox[{"Length", "[", "vals", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"maxDegree", "=", 
        RowBox[{"numPts", "-", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numChoices", " ", "=", " ", 
        RowBox[{"Length", "[", "selectionNames", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"dof", " ", "=", " ", 
        RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"leftTaylor", " ", "=", 
        RowBox[{"getTaylor", "[", 
         RowBox[{"alpha", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rightTaylor", " ", "=", 
        RowBox[{"getTaylor", "[", 
         RowBox[{"alphabar", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "rightm"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"markerSize", " ", "=", " ", 
        RowBox[{"200", "/", "maxDegree"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"numCurves", "=", 
        RowBox[{"Length", "[", "allCoefs", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"colors", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", 
           RowBox[{
            RowBox[{"Options", "[", 
             RowBox[{"selections", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "FontColor"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"curves", ",", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"func", "[", "x", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", "Purple", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"LineLegend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Blue", ",", "Red"}], "}"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"\"\<function to approximate and \>\"", "<>", 
                   RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                   "\"\< sampled values\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                   "\"\< term Taylor series at 0\>\""}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                   "\"\< term Taylor series at 1\>\""}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
               "]"}], ",", "Above"}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dof", "<=", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", "maxDegree"}], "}"}]}], "]"}], 
              ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Purple", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"taylor", " ", "=", 
           RowBox[{"getTaylor", "[", 
            RowBox[{"allCoefs", "[", 
             RowBox[{"[", 
              RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"taylor", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Red", ",", "Thick"}], "}"}]}], ",", 
              RowBox[{"ColorFunction", "\[Rule]", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Blend", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
                   RowBox[{"ramp", "[", 
                    RowBox[{"#1", ",", "1", ",", "1", ",", "numPts"}], 
                    "]"}]}], "]"}], "&"}], ")"}]}]}], "]"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"leftm", "-", "1"}], ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"leftm", ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], ",", 
                  "maxDegree"}], "}"}]}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"leftm", "-", "1"}], ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "+", "1"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"leftm", ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "-", "1"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Purple", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"leftTaylor", "[", "x", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Thick"}], "}"}]}]}], "]"}]}], "]"}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"rightTaylor", "[", 
               RowBox[{"1", "-", "x"}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", "Thick"}], "}"}]}]}], "]"}]}], "]"}], ";",
           "\[IndentingNewLine]", 
          RowBox[{"Table", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"taylor", "  ", "=", " ", 
              RowBox[{"getTaylor", "[", 
               RowBox[{"allCoefs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"curves", ",", 
               RowBox[{"Plot", "[", 
                RowBox[{
                 RowBox[{"taylor", "[", "x", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "0", ",", "1"}], 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"leftm", "-", "1"}], ")"}], "/", "maxDegree"}], 
                    ",", 
                    RowBox[{"1", "-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"rightm", "-", "1"}], ")"}], "/", 
                    "maxDegree"}]}]}], "*)"}], "}"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"colors", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}],
              ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"curves", ",", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", "k", ")"}], "/", "maxDegree"}], ",", 
                    RowBox[{"taylor", "[", 
                    RowBox[{"k", "/", "maxDegree"}], "]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"k", ",", "leftm", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "1"}]}], "}"}]}], "]"}],
                  ",", " ", 
                 RowBox[{"PlotMarkers", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], 
                   "}"}]}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"colors", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}],
              ";"}], "\[IndentingNewLine]", ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "numCurves"}], "}"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"compute", " ", "bounds"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"minVal", " ", "=", 
              RowBox[{"vals", "[", 
               RowBox[{"[", "leftm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"maxVal", " ", "=", 
              RowBox[{"vals", "[", 
               RowBox[{"[", 
                RowBox[{"-", "rightm"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"bounds", " ", "=", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"vals", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{"minVal", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{"maxVal", ",", 
                    RowBox[{"leftm", "+", "1", "+", "dof", "-", "k"}]}], 
                    "]"}], ",", "\[IndentingNewLine]", 
                   RowBox[{"vals", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"leftm", "+", "1"}], ",", 
                  RowBox[{"leftm", "+", "dof", "+", "1"}]}], "}"}]}], 
               "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"minVal", " ", "=", " ", "0"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"maxVal", " ", "=", " ", 
              RowBox[{"1", "-", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"vals", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "-", 
               RowBox[{"Sum", "[", 
                RowBox[{
                 RowBox[{"vals", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"-", "rightm"}], ",", 
                   RowBox[{"-", "1"}]}], "}"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"bounds", " ", "=", " ", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Flatten", "[", 
                 RowBox[{"{", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"vals", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{"minVal", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", "maxVal", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Table", "[", 
                    RowBox[{"minVal", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "k"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"vals", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"leftm", "+", "1"}], ",", 
                  RowBox[{"leftm", "+", "dof"}]}], "}"}]}], "]"}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"taylor", "=", " ", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"getTaylor", "[", 
              RowBox[{"d2t", ".", 
               RowBox[{"(", 
                RowBox[{"bounds", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ")"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"Plot", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"taylor", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"colors", "[", 
                RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
              RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
              RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
              RowBox[{
              "PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"Plot", "[", " ", 
             RowBox[{
              RowBox[{"Min", "[", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"taylor", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"colors", "[", 
                RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
              RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
              RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
              RowBox[{
              "PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}], 
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "curves"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"buildBezierPlot", "[", 
    RowBox[{
    "leftm_", ",", "rightm_", ",", "vals_", ",", "func_", ",", "allCoefs_", 
     ",", "matchData_", ",", "isMonotonic_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxDegree", ",", "numPts", ",", "curves", ",", "dof", ",", "includes", 
       ",", "numChoices", ",", "bezier", ",", "colors", ",", "bounds", ",", 
       "minCoef", ",", " ", "maxCoef", ",", "markerSize", ",", "numCurves", 
       ",", "sumKnownCoefs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"curves", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numPts", "=", 
       RowBox[{"Length", "[", "vals", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxDegree", "=", 
       RowBox[{"numPts", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dof", " ", "=", " ", 
       RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"markerSize", " ", "=", " ", 
       RowBox[{"200", "/", "maxDegree"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numChoices", " ", "=", " ", 
       RowBox[{"Length", "[", "selectionNames", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numCurves", "=", 
       RowBox[{"Length", "[", "allCoefs", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"colors", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{
           RowBox[{"Options", "[", 
            RowBox[{"selections", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "FontColor"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"matchData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"func", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Purple", "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"PointLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Purple", ",", "Blue", ",", "Red", ",", "Purple"}],
                    "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\[FilledSquare]\>\"", ",", "\"\<\[FilledSquare]\>\"",
                     ",", "\"\<\[FilledSquare]\>\"", ",", 
                    "\"\<\[FilledSquare]\>\""}], "}"}]}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<function to approximate and its \>\"", "<>", 
                    RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                    "\"\< Bezier control points\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                    "\"\< Bezier control points from data on left\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                    "\"\< Bezier control points from data on right\>\""}]}], 
                   RowBox[{"(*", 
                    RowBox[{",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"leftm", "+", "rightm"}], "]"}], " ", "<>", 
                    "\"\< degree Bezier curve from estimated control points\>\
\""}]}], "*)"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
                 "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"func", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Purple", "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"PointLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Purple", ",", "Blue", ",", "Red", ",", "Purple"}],
                    "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\[FilledSquare]\>\"", ",", "\"\<\[FilledSquare]\>\"",
                     ",", "\"\<\[FilledSquare]\>\"", ",", 
                    "\"\<\[FilledSquare]\>\""}], "}"}]}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<function to approximate and its \>\"", "<>", 
                    RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                    "\"\< Bezier control points\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                    
                    "\"\< Bezier control points from Taylor series at \
0\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                    "\"\< Bezier control points from Taylor series at \
1\>\""}]}], 
                   RowBox[{"(*", 
                    RowBox[{",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"leftm", "+", "rightm"}], "]"}], " ", "<>", 
                    "\"\< degree Bezier curve from known control \
points\>\""}]}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
                 "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", "k", ")"}], "/", "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"numCurves", ",", 
                 RowBox[{"k", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", "maxDegree"}], "}"}]}], "]"}], ",", 
          " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], "}"}]}], 
          ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Purple", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k", "-", "1"}], ")"}], "/", "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "k"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "leftm"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], "}"}]}], 
          ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"maxDegree", "-", "k", "+", "1"}], ")"}], "/", 
               "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "k"}]}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "rightm"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", " ", "markerSize"}], 
            "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dof", "<=", "0"}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bezier", "=", " ", 
          RowBox[{"BezierFunction", "[", 
           RowBox[{"vec2pts", "[", 
            RowBox[{"allCoefs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"bezier", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Blend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
                  RowBox[{"ramp", "[", 
                   RowBox[{"#1", ",", "1", ",", "1", ",", "numPts"}], "]"}]}],
                  "]"}], "&"}], ")"}]}]}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bezier", "=", " ", 
          RowBox[{"BezierFunction", "[", 
           RowBox[{"vec2pts2", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "rightm"}], ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "numPts"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"bezier", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Blend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
                  RowBox[{"ramp", "[", 
                   RowBox[{"#1", ",", "leftm", ",", "rightm", ",", "numPts"}],
                    "]"}]}], "]"}], "&"}], ")"}]}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"bezier", "  ", "=", " ", 
             RowBox[{"getBezier", "[", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"curves", ",", 
              RowBox[{"ParametricPlot", "[", 
               RowBox[{
                RowBox[{"bezier", "[", "t", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"curves", ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "k", ")"}], "/", "maxDegree"}], ",", 
                    RowBox[{"allCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"k", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "leftm", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "1"}]}], "}"}]}], "]"}],
                 ",", " ", 
                RowBox[{"PlotMarkers", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2", ",", 
             RowBox[{"numChoices", "-", "1"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"compute", " ", "bounds"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"sumKnownCoefs", " ", "=", " ", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", "i"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", 
                RowBox[{"-", "i"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"minCoef", " ", "=", 
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", "leftm"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"maxCoef", " ", "=", 
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", 
                RowBox[{"-", "rightm"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bounds", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"maxCoef", ",", 
                    RowBox[{"leftm", "+", "1", "+", "dof", "-", "k"}]}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"leftm", "+", "1"}], ",", 
                 RowBox[{"leftm", "+", "dof", "+", "1"}]}], "}"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"minCoef", " ", "=", " ", "0"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"maxCoef", " ", "=", " ", 
             RowBox[{"1", "-", " ", 
              RowBox[{"sumKnownCoefs", "/", "numPts"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bounds", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "maxCoef", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "k"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"leftm", "+", "1"}], ",", 
                 RowBox[{"leftm", "+", "dof"}]}], "}"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"bezier", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"getBezier", "[", 
             RowBox[{"bounds", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"curves", ",", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"bezier", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
               RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", "Red"}], ",", 
               RowBox[{
               "PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}], 
              "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"bezier", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
             RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
             RowBox[{"PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", " ", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"bezier", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
             RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
             RowBox[{"PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}],
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "curves", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "curves"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"selectTaylorPlots", "[", 
    RowBox[{
    "curves_", ",", "show_", ",", "numPts_", ",", "leftm_", ",", "rightm_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"includes", ",", "dof", ",", "selectedCurves"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dof", " ", "=", " ", 
       RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"includes", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCount", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "show", "]"}], ",", 
            RowBox[{"selectionNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ">", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"selectedCurves", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"selectedCurves", ",", 
        RowBox[{"curves", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dof", ">", "0"}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"selectedCurves", ",", 
           RowBox[{"curves", "[", 
            RowBox[{"[", 
             RowBox[{"3", ";;", "4"}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"includes", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"selectedCurves", ",", 
               RowBox[{"curves", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"5", "+", 
                   RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}]}], ";;", 
                  RowBox[{"6", "+", 
                   RowBox[{"2", 
                    RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]}]}]}], "]"}], "]"}]}], 
              "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}],
          ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"includes", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"selectedCurves", ",", 
             RowBox[{"curves", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", "selectedCurves", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectBezierPlots", "[", 
   RowBox[{
   "curves_", ",", "show_", ",", "numPts_", ",", "leftm_", ",", "rightm_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"includes", ",", "dof", ",", "selectedCurves"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dof", " ", "=", " ", 
      RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"includes", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "show", "]"}], ",", 
           RowBox[{"selectionNames", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ">", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"selectedCurves", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"selectedCurves", ",", 
       RowBox[{"curves", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dof", "\[LessEqual]", "0"}], " ", "||", 
        RowBox[{"includes", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"selectedCurves", ",", 
          RowBox[{"curves", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dof", ">", "0"}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"includes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"selectedCurves", ",", 
              RowBox[{"curves", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"6", "+", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "2"}], ")"}]}]}], ";;", 
                 RowBox[{"7", "+", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "2"}], ")"}]}]}]}], "]"}], "]"}]}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "selectedCurves", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.738393920518058*^9, 3.738393948210528*^9}, 
   3.738394007897456*^9, {3.738394075270763*^9, 3.738394099902006*^9}, {
   3.738394144209393*^9, 3.7383942353855553`*^9}, 3.738394737004208*^9, {
   3.738394849602111*^9, 3.738394933669758*^9}, {3.738394969518997*^9, 
   3.738394995790154*^9}, {3.738395135102264*^9, 3.7383951965184507`*^9}, {
   3.738395274180026*^9, 3.7383953227225657`*^9}, {3.738395365048705*^9, 
   3.73839539423917*^9}, {3.738395430365643*^9, 3.738395442479225*^9}, {
   3.738402479138516*^9, 3.7384025141349287`*^9}, {3.738402573698937*^9, 
   3.7384026484459667`*^9}, {3.738402678869507*^9, 3.7384027892998543`*^9}, {
   3.738402819536195*^9, 3.7384032555788918`*^9}, {3.738403299780388*^9, 
   3.7384033167795057`*^9}, {3.738403350392351*^9, 3.7384035059370537`*^9}, {
   3.73840354792566*^9, 3.738403605488063*^9}, {3.738403664916753*^9, 
   3.738403677222744*^9}, {3.738403721419393*^9, 3.738403846138195*^9}, {
   3.7384038837838163`*^9, 3.738403886018195*^9}, {3.738403954075437*^9, 
   3.7384039542203827`*^9}, {3.738404135600189*^9, 3.7384042338901377`*^9}, {
   3.73840426860417*^9, 3.738404268997485*^9}, {3.738404413702075*^9, 
   3.7384044243547792`*^9}, {3.738404476811944*^9, 3.738404478161545*^9}, {
   3.73840453593426*^9, 3.73840455822473*^9}, {3.738404592114633*^9, 
   3.73840460272012*^9}, {3.738404639656123*^9, 3.738404648380766*^9}, {
   3.738404777786894*^9, 3.738404796668247*^9}, {3.7384048493393373`*^9, 
   3.7384048555400667`*^9}, {3.7384049632258377`*^9, 
   3.7384050020870743`*^9}, {3.738405042346532*^9, 3.738405050227776*^9}, {
   3.738405091150793*^9, 3.738405105025086*^9}, {3.738405139137663*^9, 
   3.738405139620138*^9}, {3.7384051849480267`*^9, 3.7384051900679398`*^9}, {
   3.738405311392645*^9, 3.738405312093958*^9}, 3.738405369756156*^9, {
   3.7384054073321123`*^9, 3.7384054136213503`*^9}, {3.738405451509445*^9, 
   3.738405461394862*^9}, {3.738405514115324*^9, 3.738405523117524*^9}, {
   3.738405650805464*^9, 3.7384057295565243`*^9}, 3.738405841126998*^9, {
   3.738405946796929*^9, 3.738405954257945*^9}, {3.738406027462982*^9, 
   3.738406084483848*^9}, {3.73840612380186*^9, 3.7384061417964363`*^9}, {
   3.738406178429982*^9, 3.7384062062805*^9}, {3.738406247794858*^9, 
   3.7384063470722847`*^9}, {3.7384063965767527`*^9, 3.738406424207717*^9}, {
   3.738406512698633*^9, 3.73840660290737*^9}, {3.738406633301406*^9, 
   3.73840666337291*^9}, 3.7384068295667133`*^9, {3.738407222623528*^9, 
   3.7384073401693087`*^9}, 3.738407370241708*^9, {3.7384074471177053`*^9, 
   3.738407451610314*^9}, {3.738407525766396*^9, 3.73840754429991*^9}, {
   3.738407655767576*^9, 3.738407778982389*^9}, {3.738407809739491*^9, 
   3.738407810456977*^9}, {3.738407865794011*^9, 3.7384078891206217`*^9}, {
   3.738408633269781*^9, 3.738408675424871*^9}, {3.738408752015463*^9, 
   3.738408818679058*^9}, {3.738408852625046*^9, 3.738408926650309*^9}, {
   3.738409069314024*^9, 3.7384091294899693`*^9}, {3.738409163083316*^9, 
   3.738409259263289*^9}, {3.738409393077001*^9, 3.738409396039784*^9}, {
   3.738409537196699*^9, 3.73840957598693*^9}, {3.738409652942072*^9, 
   3.7384097458094063`*^9}, {3.738409785249728*^9, 3.738409843606824*^9}, {
   3.7384098787739563`*^9, 3.738409879608303*^9}, {3.738409932129282*^9, 
   3.738409997698493*^9}, {3.738410062615913*^9, 3.738410104628665*^9}, {
   3.738410217516584*^9, 3.738410226334524*^9}, 3.738410278663039*^9, {
   3.738410368329689*^9, 3.7384104102040052`*^9}, {3.738410468116069*^9, 
   3.738410491478509*^9}, {3.7384105486601057`*^9, 3.738410601292083*^9}, {
   3.7384106372300797`*^9, 3.738410681985692*^9}, {3.738410749802992*^9, 
   3.7384108128645372`*^9}, {3.738410958116321*^9, 3.7384109853327713`*^9}, {
   3.738411037161559*^9, 3.738411042222527*^9}, {3.738411162460593*^9, 
   3.738411226883543*^9}, {3.738411322231944*^9, 3.7384113362662163`*^9}, {
   3.738411385477351*^9, 3.738411410535849*^9}, {3.738411456455303*^9, 
   3.7384114576385307`*^9}, 3.738411554690963*^9, {3.738411682823183*^9, 
   3.738411706708893*^9}, {3.738412642560034*^9, 3.73841265430777*^9}, {
   3.738412810716589*^9, 3.738412912876191*^9}, {3.738412943733728*^9, 
   3.7384129633914413`*^9}, {3.738413003314558*^9, 3.7384130475243673`*^9}, 
   3.738413173065028*^9, {3.738413278866436*^9, 3.738413310572729*^9}, {
   3.738413374377047*^9, 3.7384134448622932`*^9}, {3.738413491851619*^9, 
   3.738413492429778*^9}, {3.738413535700869*^9, 3.738413561629837*^9}, {
   3.738413600029949*^9, 3.7384136948629417`*^9}, {3.738413735579855*^9, 
   3.738413765467114*^9}, {3.738413804306488*^9, 3.738413821259377*^9}, {
   3.738413853745181*^9, 3.7384139154747887`*^9}, 3.738413945645226*^9, {
   3.73841406636329*^9, 3.738414067794088*^9}, {3.7384141334609747`*^9, 
   3.73841413456973*^9}, {3.7384142247406473`*^9, 3.738414224889114*^9}, {
   3.738414356164442*^9, 3.738414379870479*^9}, {3.738414414289407*^9, 
   3.7384144774106216`*^9}, 3.738414534441214*^9, {3.738414591826014*^9, 
   3.738414607285438*^9}, {3.738414665952416*^9, 3.7384146934944353`*^9}, {
   3.73841560977759*^9, 3.7384157191440907`*^9}, {3.73841583692409*^9, 
   3.738415856591886*^9}, {3.738415951508398*^9, 3.738416139463077*^9}, {
   3.738416186296935*^9, 3.738416188069662*^9}, 3.738416231095037*^9, {
   3.7384162638699408`*^9, 3.73841640847849*^9}, 3.7384164631579847`*^9, 
   3.7384165039578753`*^9, {3.7384165721579514`*^9, 3.738416583195717*^9}, {
   3.7384166987492332`*^9, 3.738416704895255*^9}, {3.738416739927155*^9, 
   3.738416829357044*^9}, {3.738416871808425*^9, 3.738417034932252*^9}, {
   3.738417100883584*^9, 3.7384171798604116`*^9}, {3.738417263036433*^9, 
   3.738417263275158*^9}, {3.7384173424139433`*^9, 3.738417342567102*^9}, {
   3.738417546085198*^9, 3.738417548355446*^9}, {3.7384176078115597`*^9, 
   3.738417609836141*^9}, 3.738417697071864*^9, {3.738422180351613*^9, 
   3.738422183585075*^9}, {3.738422214170108*^9, 3.7384223592694798`*^9}, {
   3.7384224205528307`*^9, 3.73842243529918*^9}, {3.7384238742096148`*^9, 
   3.738423911337962*^9}, {3.738425879230006*^9, 3.7384259804896727`*^9}, {
   3.738426024883731*^9, 3.738426069314196*^9}, {3.7384261274152*^9, 
   3.738426132026361*^9}, {3.738426223045022*^9, 3.7384262870579033`*^9}, {
   3.7384264442756567`*^9, 3.738426459461586*^9}, {3.738426492339243*^9, 
   3.738426535901862*^9}, {3.738426574522691*^9, 3.738426607710289*^9}, {
   3.738426657865937*^9, 3.73842666542645*^9}, {3.738426782198936*^9, 
   3.738426783344432*^9}, {3.738426839567546*^9, 3.738426880396579*^9}, {
   3.738426946368696*^9, 3.738426948405961*^9}, {3.7384269948626947`*^9, 
   3.738426997015975*^9}, {3.7384271613925123`*^9, 3.738427199744048*^9}, {
   3.738427239233193*^9, 3.738427254715766*^9}, 3.738427335609646*^9, {
   3.738427527117495*^9, 3.73842752827258*^9}, {3.738427606284389*^9, 
   3.7384276123122253`*^9}, {3.738427759222746*^9, 3.7384277639303837`*^9}, {
   3.738427812828279*^9, 3.738427813944092*^9}, {3.7384313320590553`*^9, 
   3.738431369396173*^9}, {3.738431416462831*^9, 3.738431421277596*^9}, {
   3.738431478962708*^9, 3.7384314812789288`*^9}, {3.73843154551921*^9, 
   3.738431567809299*^9}, {3.738431943474498*^9, 3.7384323226245823`*^9}, {
   3.7384323788254957`*^9, 3.7384323952120323`*^9}, 3.7384324362928877`*^9, {
   3.738432484879917*^9, 3.738432526896204*^9}, {3.738432565376668*^9, 
   3.738432667669455*^9}, {3.738432733527947*^9, 3.738432734393485*^9}, {
   3.738432840042963*^9, 3.738432840374942*^9}, {3.738432878814886*^9, 
   3.7384328863399477`*^9}, {3.738432941229113*^9, 3.738432957300559*^9}, {
   3.738451797880897*^9, 3.738451908549374*^9}, {3.7384519635484056`*^9, 
   3.7384520030615463`*^9}, {3.738452199227064*^9, 3.738452309466371*^9}, 
   3.7384523713270073`*^9, {3.73845245388698*^9, 3.738452467410321*^9}, {
   3.738452511023596*^9, 3.73845261608918*^9}, {3.738452697023785*^9, 
   3.738452738614799*^9}, {3.73845282270149*^9, 3.738452868591297*^9}, {
   3.738452912107636*^9, 3.738452913107452*^9}, {3.738453011228602*^9, 
   3.738453021916107*^9}, {3.738453120002236*^9, 3.7384531575426817`*^9}, 
   3.738453212084485*^9, {3.738453249754706*^9, 3.738453250752853*^9}, {
   3.738453293554914*^9, 3.738453311395249*^9}, {3.738453370789806*^9, 
   3.738453371293312*^9}, {3.738453418208577*^9, 3.738453418942794*^9}, {
   3.738453484600039*^9, 3.738453583256612*^9}, {3.738453642919828*^9, 
   3.738453659063342*^9}, {3.738453690534418*^9, 3.738453709028612*^9}, {
   3.7384537466803703`*^9, 3.738453819157939*^9}, {3.738453901710284*^9, 
   3.7384539171889133`*^9}, {3.738453992444309*^9, 3.7384539954780397`*^9}, {
   3.738454198804967*^9, 3.738454206698786*^9}, {3.7384543448525763`*^9, 
   3.7384543734710617`*^9}, {3.738454510788723*^9, 3.73845452744112*^9}, {
   3.738454688347486*^9, 3.738454692607045*^9}, 3.738454941188923*^9, {
   3.738455089125272*^9, 3.738455096312545*^9}, {3.7384551463487577`*^9, 
   3.7384551507307253`*^9}, {3.738455229040916*^9, 3.738455269202651*^9}, {
   3.7384776754494953`*^9, 3.738477688497273*^9}, {3.738477796922585*^9, 
   3.738477797173972*^9}, {3.738477845132038*^9, 3.738477845346788*^9}, {
   3.7384782504848337`*^9, 3.7384782531535597`*^9}, {3.738478426062964*^9, 
   3.738478426226398*^9}, {3.738478469947493*^9, 3.738478550206373*^9}, {
   3.738478595638919*^9, 3.738478598351486*^9}, {3.7384786446012707`*^9, 
   3.738478663139735*^9}, {3.738478725538097*^9, 3.738478725644021*^9}, {
   3.7384788358460712`*^9, 3.738478839152225*^9}, {3.738478871370516*^9, 
   3.738478874268433*^9}, {3.7384789288625097`*^9, 3.7384789411369057`*^9}, {
   3.738478992025208*^9, 3.738478995960455*^9}, {3.738479035950376*^9, 
   3.738479039046558*^9}, {3.738479112206423*^9, 3.738479116539459*^9}, {
   3.738479302054319*^9, 3.7384793023455067`*^9}, {3.738479406126381*^9, 
   3.7384795013024178`*^9}, {3.738479549617778*^9, 3.7384795661458883`*^9}, {
   3.738479611813922*^9, 3.738479632904668*^9}, {3.738479805261047*^9, 
   3.738479850501856*^9}, {3.738479882189168*^9, 3.738479895817441*^9}, {
   3.738480932896592*^9, 3.73848095818834*^9}, {3.73848099473905*^9, 
   3.738481012531817*^9}, {3.7384810756867857`*^9, 3.738481084651853*^9}, {
   3.7384840263795*^9, 3.738484070158834*^9}, {3.7384841013899937`*^9, 
   3.738484275357253*^9}, {3.738484461585033*^9, 3.738484500481049*^9}, {
   3.738484595096655*^9, 3.73848460097431*^9}, {3.738486652134901*^9, 
   3.738486703979101*^9}, {3.738486834863269*^9, 3.738486911416848*^9}, {
   3.7384869581288033`*^9, 3.7384869930759363`*^9}, {3.738487025239409*^9, 
   3.738487129857512*^9}, {3.738487174981251*^9, 3.7384873204700937`*^9}, {
   3.7384873552418747`*^9, 3.738487364843025*^9}, {3.7384875175872917`*^9, 
   3.7384875248909597`*^9}, 3.7384875670394163`*^9, {3.7384876105474987`*^9, 
   3.73848762113701*^9}, {3.738487666620626*^9, 3.738487706097748*^9}, {
   3.738487737978443*^9, 3.738487830137911*^9}, {3.738487913070405*^9, 
   3.738487932225005*^9}, {3.738488664180875*^9, 3.7384886656087418`*^9}, {
   3.738488802749132*^9, 3.738488803885852*^9}, {3.738489472480747*^9, 
   3.738489478849229*^9}, {3.738489965296183*^9, 3.738490007068256*^9}, {
   3.7384900393739233`*^9, 3.738490054567491*^9}, {3.738519327290003*^9, 
   3.7385193617490053`*^9}, {3.73853214336554*^9, 3.7385321438547792`*^9}, {
   3.738532176156818*^9, 3.7385321801485453`*^9}, {3.7385339523082857`*^9, 
   3.738533975312323*^9}, {3.738607277354204*^9, 3.738607280726183*^9}, {
   3.738607405638122*^9, 3.738607413925082*^9}, {3.738607444319923*^9, 
   3.738607515166926*^9}, 3.738607752567379*^9, {3.7386078634390297`*^9, 
   3.738607869677635*^9}, 3.73860808167908*^9, {3.738608194452281*^9, 
   3.738608200375949*^9}, {3.738608389257429*^9, 3.738608391870439*^9}, {
   3.738608480027628*^9, 3.738608484456995*^9}, {3.738608621679859*^9, 
   3.7386086622911587`*^9}, {3.738608716708396*^9, 3.7386087719532337`*^9}, {
   3.738608842934346*^9, 3.738608857174502*^9}, {3.7386088938665648`*^9, 
   3.7386088958789043`*^9}, {3.738610235847197*^9, 3.7386102391803703`*^9}, {
   3.738611386261561*^9, 3.738611439233672*^9}, {3.738611561305614*^9, 
   3.7386116289918747`*^9}, 3.738615151900031*^9, 3.738615186104361*^9, {
   3.7386153136241827`*^9, 3.7386153562298107`*^9}, {3.738615424633582*^9, 
   3.73861543458499*^9}, 3.738615604361781*^9, {3.738615729730483*^9, 
   3.738615739147355*^9}, {3.7386158639404697`*^9, 3.7386158676049137`*^9}, {
   3.738615925224798*^9, 3.7386159362728863`*^9}, {3.738616005461708*^9, 
   3.7386160293700237`*^9}, {3.7386160782879047`*^9, 
   3.7386160814481153`*^9}, {3.738616195925934*^9, 3.738616289013256*^9}, {
   3.738616372870098*^9, 3.7386166146967163`*^9}, {3.738616670325205*^9, 
   3.738616737060443*^9}, {3.738616768336899*^9, 3.738616937907*^9}, {
   3.738616970980505*^9, 3.73861702381604*^9}, {3.7386170771493473`*^9, 
   3.73861716643423*^9}, {3.7386173700695887`*^9, 3.738617372485165*^9}, {
   3.738617479119038*^9, 3.738617554732418*^9}, 3.73861762733141*^9, {
   3.7386176664264793`*^9, 3.7386177664255457`*^9}, {3.738617814760077*^9, 
   3.73861801970765*^9}, {3.738618075018063*^9, 3.738618256386119*^9}, {
   3.738618322691862*^9, 3.738618353191609*^9}, {3.738618429131723*^9, 
   3.738618462736312*^9}, {3.738618523388382*^9, 3.7386185733806877`*^9}, {
   3.738618605263248*^9, 3.7386186298886757`*^9}, {3.738741638993992*^9, 
   3.738741647959371*^9}, {3.738741807353346*^9, 3.738741840171764*^9}, {
   3.738741880351491*^9, 3.738741898699026*^9}, {3.738741941127293*^9, 
   3.738741943664093*^9}, 3.738742040590733*^9, 3.7387421070973682`*^9, {
   3.7387421470248127`*^9, 3.7387421474285994`*^9}, {3.738742257581174*^9, 
   3.738742263946693*^9}, {3.738742328025968*^9, 3.7387423284971952`*^9}, {
   3.738742498354747*^9, 3.738742516523333*^9}, {3.738742643916554*^9, 
   3.738742644566064*^9}, {3.7387426902928953`*^9, 3.738742712488504*^9}, {
   3.738742995522382*^9, 3.7387430985147743`*^9}, {3.738743194855735*^9, 
   3.7387431954780827`*^9}, {3.7387432312681293`*^9, 3.738743259632053*^9}, {
   3.738743307216187*^9, 3.7387433222541237`*^9}, {3.7387433688930817`*^9, 
   3.738743374365366*^9}, {3.7387434080260973`*^9, 3.7387434209134417`*^9}, {
   3.738743488214871*^9, 3.738743492325246*^9}, {3.738743540561079*^9, 
   3.7387435991020737`*^9}, {3.738743639096537*^9, 3.738743643141548*^9}, {
   3.738749093491644*^9, 3.738749108437558*^9}, {3.7387491586354933`*^9, 
   3.73874917189925*^9}, {3.738749384036838*^9, 3.7387494222280617`*^9}, {
   3.73874950856066*^9, 3.7387495232089663`*^9}, {3.738749588990992*^9, 
   3.738749657776081*^9}, {3.738749724163274*^9, 3.7387497356906652`*^9}, 
   3.738749821549478*^9, {3.738749919910469*^9, 3.738749922923296*^9}, {
   3.738749955933284*^9, 3.738749959292552*^9}, {3.7387501451355257`*^9, 
   3.73875017124677*^9}, {3.738750680996821*^9, 3.7387506901238194`*^9}, 
   3.738750733779086*^9, {3.738750789844202*^9, 3.738750823174122*^9}, {
   3.7387508601660633`*^9, 3.738750862187642*^9}, 3.7387509815233183`*^9, {
   3.73875102334813*^9, 3.738751023739702*^9}, {3.73875107206986*^9, 
   3.738751073232809*^9}, {3.738751242106234*^9, 3.73875125178156*^9}, {
   3.738751327598448*^9, 3.738751328241392*^9}, {3.738751375158022*^9, 
   3.73875137627941*^9}, {3.738751511532819*^9, 3.738751511685553*^9}, {
   3.738751545565668*^9, 3.738751572509263*^9}, 3.73875168558799*^9, {
   3.738751716175538*^9, 3.738751799313065*^9}, {3.7387623504129744`*^9, 
   3.738762359458847*^9}, {3.7387624030408087`*^9, 3.738762404613221*^9}, {
   3.738762442701817*^9, 3.738762473387034*^9}, {3.738764422497333*^9, 
   3.7387645528559437`*^9}, {3.738764590429123*^9, 3.7387646382923193`*^9}, {
   3.7387647615165443`*^9, 3.7387648104819117`*^9}, {3.738764855076174*^9, 
   3.7387648776311502`*^9}, {3.738764952882194*^9, 3.738764975644174*^9}, {
   3.738765023565857*^9, 3.738765066008937*^9}, {3.738765119199271*^9, 
   3.738765175825122*^9}, 3.738765219585937*^9, {3.7387652756749287`*^9, 
   3.738765512311966*^9}, {3.738765568825347*^9, 3.738765591960919*^9}, {
   3.738765678994137*^9, 3.73876568641302*^9}, {3.7387657570523*^9, 
   3.738765768278811*^9}, {3.738765911282323*^9, 3.7387659230981493`*^9}, {
   3.738765995659019*^9, 3.738766002155998*^9}, {3.7387660482431793`*^9, 
   3.738766078480517*^9}, {3.738766134882597*^9, 3.738766182621971*^9}, {
   3.738766214958363*^9, 3.738766224289041*^9}, 3.738766403421681*^9, {
   3.738766474688467*^9, 3.738766483195841*^9}, {3.738766522286285*^9, 
   3.738766535937895*^9}, {3.7387665959969883`*^9, 3.738766610870261*^9}, {
   3.738766926792172*^9, 3.738766985774934*^9}, 3.738767175772821*^9, 
   3.738767385672844*^9, {3.7387674785572443`*^9, 3.738767503525914*^9}, 
   3.7387675340325127`*^9, {3.7387675914324408`*^9, 3.73876759233594*^9}, {
   3.738767633504578*^9, 3.738767675265744*^9}, 3.738767708244155*^9, {
   3.738767745595388*^9, 3.738767783236541*^9}, 3.7387678419456472`*^9, {
   3.738767929037356*^9, 3.738767955651713*^9}, {3.738768078628813*^9, 
   3.738768085948893*^9}, {3.738768154422385*^9, 3.738768174162594*^9}, {
   3.73876829022138*^9, 3.738768297065364*^9}, {3.738768372585956*^9, 
   3.7387683921186323`*^9}, 3.738768431335752*^9, {3.738768507975168*^9, 
   3.738768511463605*^9}, {3.738768651090515*^9, 3.7387686545866747`*^9}, 
   3.7387687860917683`*^9, 3.7387688195877657`*^9, {3.738768897162836*^9, 
   3.7387689003116503`*^9}, {3.7387689367429237`*^9, 3.73876895383813*^9}, {
   3.738769215263215*^9, 3.738769218797434*^9}, {3.738769360195347*^9, 
   3.738769416638832*^9}, {3.7387694749197817`*^9, 3.738769475363442*^9}, {
   3.738769636132937*^9, 3.73876963773948*^9}, {3.738769831544426*^9, 
   3.7387698326388893`*^9}, {3.738770063768667*^9, 3.738770121241465*^9}, {
   3.738770156538609*^9, 3.738770183452572*^9}, {3.738770359577539*^9, 
   3.738770359734214*^9}, {3.7387706554573097`*^9, 3.738770686862585*^9}, {
   3.7387707275441513`*^9, 3.738770739478737*^9}, {3.7387708108315*^9, 
   3.7387708257255917`*^9}, {3.738770937477149*^9, 3.7387709448489923`*^9}, {
   3.7387713654504766`*^9, 3.738771370226837*^9}, {3.738771578680173*^9, 
   3.738771608258882*^9}, {3.738771752280249*^9, 3.738771828908629*^9}, {
   3.7387721430295*^9, 3.738772175031931*^9}, {3.738772300920906*^9, 
   3.7387723187704067`*^9}, 3.73877244256551*^9, {3.7387724836813383`*^9, 
   3.738772508709833*^9}, 3.738772583813628*^9, {3.738791954362837*^9, 
   3.738792032736804*^9}, {3.738792396971574*^9, 3.73879239884625*^9}, {
   3.738792454710219*^9, 3.738792543065591*^9}, {3.738792577891651*^9, 
   3.738792588712141*^9}, {3.738792643106104*^9, 3.738792649158922*^9}, {
   3.7387927441970263`*^9, 3.738792748732596*^9}, {3.738793283662642*^9, 
   3.7387932960769587`*^9}, {3.738793723590908*^9, 3.738793724227602*^9}, {
   3.738793877631813*^9, 3.738793889731263*^9}, {3.7387946289618807`*^9, 
   3.738794647775107*^9}, {3.738795065415328*^9, 3.738795071830431*^9}, 
   3.738795205296348*^9, {3.738829485497353*^9, 3.738829503246881*^9}, {
   3.73882978762918*^9, 3.738829821400423*^9}, 3.738829982821677*^9, {
   3.738830039038262*^9, 3.738830039202095*^9}, {3.738830236234009*^9, 
   3.738830242455716*^9}, 3.738830309701069*^9, {3.7388305473973217`*^9, 
   3.738830643822131*^9}, {3.738830741332889*^9, 3.738830746341839*^9}, {
   3.738830831452565*^9, 3.738830831970916*^9}, {3.7388309425993643`*^9, 
   3.738830958047255*^9}, {3.738831033602034*^9, 3.73883107235741*^9}, {
   3.738831137721637*^9, 3.738831141317719*^9}, {3.7388312075806723`*^9, 
   3.738831212762022*^9}, {3.738831256837509*^9, 3.738831346972026*^9}, {
   3.738831491160335*^9, 3.738831509729311*^9}, {3.7388315521910954`*^9, 
   3.73883156026248*^9}, {3.7388317016924257`*^9, 3.73883172584159*^9}, {
   3.7388319197176523`*^9, 3.738831922156641*^9}, {3.738846441228586*^9, 
   3.738846480705472*^9}, {3.738846553619742*^9, 3.738846558273345*^9}, {
   3.738846597580432*^9, 3.738846611445265*^9}, {3.7388466480726433`*^9, 
   3.738846660204591*^9}, {3.738875290537776*^9, 3.7388754135684137`*^9}, {
   3.738875445807912*^9, 3.738875485111691*^9}, {3.738875651506669*^9, 
   3.73887569146876*^9}, {3.7388757791878*^9, 3.738875799969309*^9}, {
   3.738876063897723*^9, 3.738876064678912*^9}, {3.73887617225807*^9, 
   3.73887618234341*^9}, {3.738876222085025*^9, 3.738876225922727*^9}, {
   3.738876262510729*^9, 3.738876274588832*^9}, {3.73887682547302*^9, 
   3.738876957159829*^9}, {3.738877002384069*^9, 3.738877049594859*^9}, {
   3.73891346801973*^9, 3.738913536942829*^9}, {3.738913600724674*^9, 
   3.738913612522814*^9}, {3.738913684763611*^9, 3.738913699074482*^9}, {
   3.7389138628921003`*^9, 3.738913871601902*^9}, {3.738914064945086*^9, 
   3.738914070906419*^9}, {3.7389143646887217`*^9, 3.738914367637288*^9}, {
   3.738914406511488*^9, 3.7389144067109756`*^9}, {3.7389144401314783`*^9, 
   3.738914445088682*^9}, {3.738914477370779*^9, 3.7389145737311773`*^9}, {
   3.7389146648203173`*^9, 3.738914666528111*^9}, {3.73891473083814*^9, 
   3.7389147318444147`*^9}, {3.738914778459511*^9, 3.738914793820608*^9}, {
   3.73891483558344*^9, 3.738914867524173*^9}, {3.738915071096382*^9, 
   3.738915095705462*^9}, {3.73891538692457*^9, 3.7389154341274567`*^9}, {
   3.738915503411091*^9, 3.73891564261982*^9}, {3.738915796397036*^9, 
   3.738915827489193*^9}, {3.7389160113065987`*^9, 3.738916090063417*^9}, {
   3.738916136558572*^9, 3.738916154687324*^9}, {3.738916209597468*^9, 
   3.738916319390355*^9}, {3.738916422560835*^9, 3.738916485569109*^9}, 
   3.7389166201167593`*^9, {3.738916919640758*^9, 3.738916964294869*^9}, {
   3.7389170067454557`*^9, 3.738917025904704*^9}, {3.738917119709693*^9, 
   3.738917158749345*^9}, {3.7389264425585337`*^9, 3.738926449606715*^9}, {
   3.738926504333744*^9, 3.738926516256175*^9}, {3.738926718547559*^9, 
   3.738926739384549*^9}, {3.738926781697081*^9, 3.7389267854311857`*^9}, {
   3.738927127155895*^9, 3.7389272208430023`*^9}, {3.738927286629673*^9, 
   3.7389272950485697`*^9}, {3.7389273362960978`*^9, 3.738927395236786*^9}, {
   3.73893233871408*^9, 3.738932404215469*^9}, {3.738932469699033*^9, 
   3.73893253896218*^9}, {3.7389325964091578`*^9, 3.7389326177737494`*^9}, {
   3.738932658587242*^9, 3.7389326613650227`*^9}, {3.738932742250753*^9, 
   3.7389328343841743`*^9}, {3.738932916905102*^9, 3.73893292167378*^9}, {
   3.73893316912691*^9, 3.738933173142583*^9}, 3.73893324949617*^9, {
   3.7389332894620113`*^9, 3.738933302504477*^9}, {3.738933373644425*^9, 
   3.7389333908079033`*^9}, {3.738933841670547*^9, 3.738933842091681*^9}, {
   3.7389339198744926`*^9, 3.738934009109042*^9}, {3.738934416697815*^9, 
   3.738934452105788*^9}, {3.738934552694956*^9, 3.738934558679364*^9}, {
   3.738934759087006*^9, 3.738934759674239*^9}, {3.738934888035878*^9, 
   3.738934896264423*^9}, {3.738935077860718*^9, 3.738935081676704*^9}, {
   3.738935225627809*^9, 3.7389353766796827`*^9}, {3.7389356056459084`*^9, 
   3.738935626592306*^9}, {3.738935911176392*^9, 3.7389359234759083`*^9}, {
   3.738940694086644*^9, 3.7389407502304296`*^9}, {3.738940788838798*^9, 
   3.738940789059342*^9}, 3.7389408882777243`*^9, {3.738942167441038*^9, 
   3.738942328514233*^9}, {3.738942401918082*^9, 3.7389424578990088`*^9}, {
   3.7389426059911613`*^9, 3.738942634238789*^9}, {3.7389431608557053`*^9, 
   3.7389431894039087`*^9}, {3.7389432574995604`*^9, 
   3.7389432876220837`*^9}, {3.738944114788392*^9, 3.738944125212673*^9}, 
   3.73894439419943*^9, 3.738944434189828*^9, {3.7389447784677277`*^9, 
   3.738944970193748*^9}, {3.738945000817965*^9, 3.738945016367292*^9}, {
   3.738951464565645*^9, 3.738951512504287*^9}, {3.7389515442543173`*^9, 
   3.7389515465392513`*^9}, 3.738951593128862*^9, {3.738951646374352*^9, 
   3.738951715546365*^9}, {3.7389517742885237`*^9, 3.738951787099111*^9}, {
   3.7389518592902822`*^9, 3.738951859859028*^9}, 3.7389519122355537`*^9, {
   3.738964445535211*^9, 3.738964468661585*^9}, {3.738964636257964*^9, 
   3.738964645569668*^9}, {3.738964702881341*^9, 3.7389647110002317`*^9}, {
   3.7389647874017763`*^9, 3.7389647905783253`*^9}, {3.738964919600309*^9, 
   3.738964929592999*^9}, 3.7390100883332243`*^9, {3.7390102195793333`*^9, 
   3.739010315453779*^9}, {3.739010605828866*^9, 3.739010612369484*^9}, {
   3.7390107039778957`*^9, 3.739010726188929*^9}, {3.739010914881133*^9, 
   3.739010918965355*^9}, {3.739011002984357*^9, 3.739011173734325*^9}, {
   3.739011242459186*^9, 3.739011287236137*^9}, {3.739011324308804*^9, 
   3.7390113765110483`*^9}, {3.739011418534902*^9, 3.739011465647213*^9}, 
   3.7390115015018377`*^9, {3.7390115599096203`*^9, 3.739011560063078*^9}, {
   3.73901165190128*^9, 3.739011725121222*^9}, {3.7390123183150177`*^9, 
   3.7390123212240973`*^9}, {3.739012425501706*^9, 3.7390124399255543`*^9}, {
   3.739012552373519*^9, 3.7390125922427197`*^9}, {3.739012918643611*^9, 
   3.7390129234715014`*^9}, {3.739013594952523*^9, 3.739013617225202*^9}, {
   3.739013655693543*^9, 3.739013663833468*^9}, {3.73901370615388*^9, 
   3.7390138092902937`*^9}, 3.739013874287963*^9, {3.7390139050630627`*^9, 
   3.7390139351520233`*^9}, {3.73901396890913*^9, 3.7390139950601254`*^9}, {
   3.7390141125823402`*^9, 3.7390141165341454`*^9}, 3.739014146791276*^9, {
   3.7390141824507093`*^9, 3.73901426573427*^9}, {3.7390143956498957`*^9, 
   3.739014397787265*^9}, {3.7390144979302483`*^9, 3.739014508506432*^9}, {
   3.7390145671320868`*^9, 3.739014588251582*^9}, {3.7390146276846*^9, 
   3.7390146473049088`*^9}, {3.7390146983944693`*^9, 3.739014705178899*^9}, {
   3.7390147737358932`*^9, 3.7390147756164083`*^9}, {3.739014850635016*^9, 
   3.739014876956098*^9}, {3.739014911902268*^9, 3.739014913000922*^9}, {
   3.739015048975528*^9, 3.7390150777807293`*^9}, {3.739015108061167*^9, 
   3.7390151357071247`*^9}, {3.739015209887045*^9, 3.7390152178634243`*^9}, {
   3.739015269296988*^9, 3.7390152752259693`*^9}, {3.73901533317313*^9, 
   3.7390153358183537`*^9}, {3.7390153918690023`*^9, 3.739015393665852*^9}, {
   3.7390155237927237`*^9, 3.739015551207609*^9}, {3.739015669454276*^9, 
   3.739015672189035*^9}, {3.739015801499723*^9, 3.7390158145341873`*^9}, {
   3.739015883119729*^9, 3.73901591635712*^9}, {3.739016257044525*^9, 
   3.739016266192946*^9}, {3.739016426324554*^9, 3.7390164326358843`*^9}, {
   3.739016861020165*^9, 3.739016915495673*^9}, {3.739016979912292*^9, 
   3.739017001655908*^9}, {3.739017031992682*^9, 3.739017070196719*^9}, {
   3.739017195126009*^9, 3.739017212903184*^9}, 3.739017256181616*^9, {
   3.739017595567521*^9, 3.7390176939551163`*^9}, {3.7390177896238737`*^9, 
   3.739017909571185*^9}, {3.739018077605842*^9, 3.739018140024836*^9}, 
   3.739018196510363*^9, {3.739018440031788*^9, 3.73901846780295*^9}, {
   3.7390185617807007`*^9, 3.7390185669497766`*^9}, {3.739018657234611*^9, 
   3.739018724864151*^9}, {3.739018767855431*^9, 3.739018876660943*^9}, {
   3.7390191268724117`*^9, 3.7390191771129923`*^9}, {3.739019287494424*^9, 
   3.739019311225587*^9}, {3.7390193413908854`*^9, 3.739019543301077*^9}, {
   3.739019575349414*^9, 3.739019578576642*^9}, {3.739019764531152*^9, 
   3.739019846689345*^9}, {3.7390198867360287`*^9, 3.739019895726553*^9}, {
   3.739019976596237*^9, 3.739020014282103*^9}, {3.739020236143532*^9, 
   3.7390202384173613`*^9}, {3.7390203140904493`*^9, 3.739020319823039*^9}, {
   3.739020358387492*^9, 3.739020360315668*^9}, {3.7390203927150307`*^9, 
   3.739020517352191*^9}, {3.739020575860731*^9, 3.739020582573951*^9}, {
   3.73902061324279*^9, 3.739020649212779*^9}, {3.739020692782099*^9, 
   3.7390206929141197`*^9}, {3.7390279622673683`*^9, 3.739027968997335*^9}, {
   3.739027999579784*^9, 3.739028105121891*^9}, 3.739028193021044*^9, {
   3.739028508925735*^9, 3.739028544350507*^9}, {3.739028620580504*^9, 
   3.73902863375674*^9}, {3.739028713615055*^9, 3.739028718300826*^9}, {
   3.739028778185607*^9, 3.739028779601461*^9}, {3.739030005047434*^9, 
   3.739030032654132*^9}, 3.7390303952051086`*^9, {3.739030647781528*^9, 
   3.739030769934762*^9}, 3.739030891599688*^9, {3.739030940719483*^9, 
   3.739030976159534*^9}, {3.739031119167739*^9, 3.739031129781196*^9}, {
   3.7390312037282343`*^9, 3.7390312338938713`*^9}, {3.739033292489483*^9, 
   3.739033299529632*^9}, 3.739033342525674*^9, {3.739035222757647*^9, 
   3.7390352806031923`*^9}, {3.739035417558358*^9, 3.7390354451325407`*^9}, 
   3.739035524921191*^9, {3.739035562555933*^9, 3.739035583939142*^9}, {
   3.739035620637682*^9, 3.739035626354547*^9}, {3.739035678965138*^9, 
   3.7390357974123077`*^9}, {3.739035828798193*^9, 3.739036438475807*^9}, {
   3.7390364695854263`*^9, 3.739036522455679*^9}, {3.739036553148346*^9, 
   3.7390366153157387`*^9}, {3.7390366714547577`*^9, 3.739036683261985*^9}, {
   3.739036903927476*^9, 3.7390369256178923`*^9}, 3.739036961487069*^9, {
   3.7390370471009293`*^9, 3.73903707487463*^9}, {3.739037229951442*^9, 
   3.73903729870457*^9}, {3.739038835046083*^9, 3.739038846891121*^9}, {
   3.739038896502606*^9, 3.739038904354954*^9}, {3.73903901949612*^9, 
   3.739039026373211*^9}, {3.739039176668326*^9, 3.73903921085743*^9}, {
   3.73903943553202*^9, 3.7390394593380003`*^9}, {3.73903955107915*^9, 
   3.73903955179216*^9}, {3.739040348734168*^9, 3.739040359795599*^9}, 
   3.7390406212120247`*^9, {3.739040725552843*^9, 3.739040737083726*^9}, {
   3.739041498153167*^9, 3.739041498807497*^9}, {3.739041685876266*^9, 
   3.739041701919012*^9}, {3.739045894534479*^9, 3.739045962253859*^9}, 
   3.739045999387032*^9, {3.739046034431408*^9, 3.739046244846181*^9}, {
   3.739046278614946*^9, 3.739046437644539*^9}, {3.739046506724431*^9, 
   3.739046558485209*^9}, {3.739046596866886*^9, 3.739046638718356*^9}, 
   3.739046735737852*^9, {3.7390474624388237`*^9, 3.739047466869055*^9}, {
   3.739048104570017*^9, 3.739048121918244*^9}, {3.739048162134223*^9, 
   3.73904816502942*^9}, 3.739048224973968*^9, {3.7390482558062687`*^9, 
   3.739048291433638*^9}, {3.739048947397984*^9, 3.739048947924858*^9}, {
   3.7390503404287043`*^9, 3.739050344132244*^9}, {3.739050600664276*^9, 
   3.739050601249222*^9}, {3.7390509058280087`*^9, 3.739050910951334*^9}, 
   3.7390510985864773`*^9, {3.739051341182249*^9, 3.739051348353581*^9}, {
   3.739051724196074*^9, 3.7390517306708403`*^9}, {3.739051824518565*^9, 
   3.739051838659799*^9}, {3.739051871962593*^9, 3.739051898774981*^9}, {
   3.7390519422879457`*^9, 3.739052019267392*^9}, {3.739052070919921*^9, 
   3.7390520942171*^9}, {3.7390522511053467`*^9, 3.739052330148369*^9}, {
   3.7390524151015387`*^9, 3.739052451858288*^9}, {3.739052933224842*^9, 
   3.7390529444174*^9}, {3.73905305186092*^9, 3.739053067906042*^9}, {
   3.739085008201819*^9, 3.739085010517314*^9}, {3.739085129636087*^9, 
   3.739085186084778*^9}, {3.739085332031357*^9, 3.739085332693699*^9}, {
   3.739085522501267*^9, 3.739085524399645*^9}, 3.7390856736990347`*^9, {
   3.7390857721983128`*^9, 3.739085777191897*^9}, {3.739086127013054*^9, 
   3.739086166004031*^9}, 3.739086253375333*^9, {3.7390863238524923`*^9, 
   3.739086386690476*^9}, {3.739086454111898*^9, 3.739086460452889*^9}, 
   3.739086596869796*^9, {3.739087111882266*^9, 3.739087112039941*^9}, {
   3.7390875221496353`*^9, 3.739087559993679*^9}, {3.7390877344077578`*^9, 
   3.739087734804324*^9}, 3.7391358039637203`*^9, 3.739135847809017*^9, 
   3.739135889307331*^9, {3.739135921381974*^9, 3.7391359282524014`*^9}, {
   3.739214263230934*^9, 3.739214269174357*^9}, {3.7392143569194508`*^9, 
   3.7392143638902693`*^9}, {3.739214445250383*^9, 3.739214465055648*^9}, {
   3.739214552758834*^9, 3.7392145792111464`*^9}, {3.739214626003598*^9, 
   3.739214637451302*^9}, 3.739214712100068*^9, {3.7392147435327463`*^9, 
   3.739214767721382*^9}, 3.7392148134144497`*^9, {3.739214880546496*^9, 
   3.739214882856058*^9}, {3.739214927682723*^9, 3.7392149464799633`*^9}, {
   3.7392150852474947`*^9, 3.739215174721861*^9}, {3.739215207331341*^9, 
   3.73921524957036*^9}, {3.7392160057559547`*^9, 3.739216006144835*^9}, {
   3.7392590971293163`*^9, 3.7392590996564713`*^9}, {3.739268236682404*^9, 
   3.739268253848873*^9}, {3.739470014132491*^9, 3.739470021308166*^9}, {
   3.739470075953615*^9, 3.739470143012032*^9}, {3.739470395369616*^9, 
   3.739470435068953*^9}, 3.739471018879945*^9, {3.739473375068121*^9, 
   3.7394733809766397`*^9}, {3.739560527745734*^9, 3.739560528046287*^9}, {
   3.739606450404261*^9, 3.7396064557298613`*^9}, {3.739606488659178*^9, 
   3.739606532814624*^9}, {3.73960659876758*^9, 3.7396066013567953`*^9}, {
   3.7396066623677607`*^9, 3.739606700699339*^9}, {3.739606761532653*^9, 
   3.739606761858238*^9}, {3.739606920125567*^9, 3.739606952342587*^9}, {
   3.7396196856712627`*^9, 3.739619721284419*^9}, {3.739620005898308*^9, 
   3.73962000671961*^9}, {3.739620272393593*^9, 3.739620272558811*^9}, {
   3.739620697322562*^9, 3.739620702047905*^9}, {3.739620816747347*^9, 
   3.7396208194397993`*^9}, {3.7396212399785633`*^9, 3.739621302962455*^9}, {
   3.7396215116806507`*^9, 3.739621552440597*^9}, {3.7396215878006372`*^9, 
   3.7396215922290916`*^9}, {3.739621644606913*^9, 3.739621654784301*^9}, {
   3.7396217582315702`*^9, 3.7396218081006203`*^9}, {3.739622170476016*^9, 
   3.739622178216864*^9}, 3.73962225334699*^9, {3.7396224392479343`*^9, 
   3.739622456179638*^9}, {3.7396930953168097`*^9, 3.739693107224712*^9}, {
   3.739693145429582*^9, 3.7396931542866087`*^9}, {3.739693294886077*^9, 
   3.739693317693726*^9}, {3.7396942106637793`*^9, 3.739694295980548*^9}, {
   3.739694329784478*^9, 3.739694344544252*^9}, {3.739694501033115*^9, 
   3.7396945014457397`*^9}, {3.7396947489108047`*^9, 3.739694754044071*^9}, {
   3.739695199391753*^9, 3.739695295559486*^9}, {3.739695339011273*^9, 
   3.739695364238521*^9}, {3.739695402230175*^9, 3.739695439523381*^9}, {
   3.739701887622344*^9, 3.739701896403831*^9}, {3.739702363527053*^9, 
   3.7397025105528717`*^9}, {3.739745708703252*^9, 3.739745733223795*^9}, {
   3.739745800681175*^9, 3.7397458050330133`*^9}, {3.739746130264373*^9, 
   3.7397462134763517`*^9}, {3.739746250796771*^9, 3.739746446467936*^9}, {
   3.739746535620932*^9, 3.7397466008929253`*^9}, 3.739747584281933*^9, {
   3.739747664678854*^9, 3.739747677615698*^9}, 3.73974777635205*^9, 
   3.739748095229022*^9, {3.739748151031417*^9, 3.739748158247484*^9}, 
   3.739748323088366*^9, {3.73974851545199*^9, 3.7397485630260487`*^9}, {
   3.739748619815119*^9, 3.739748674380546*^9}, {3.739748772808052*^9, 
   3.739748777540653*^9}, 3.739777895776479*^9, {3.7397779759374113`*^9, 
   3.7397779983262253`*^9}, {3.7397780884872093`*^9, 3.739778307596489*^9}, {
   3.7397790525823183`*^9, 3.739779081990509*^9}, {3.73977948197997*^9, 
   3.739779485642398*^9}, {3.739779922893742*^9, 3.739779970184585*^9}, {
   3.739780146433045*^9, 3.739780214041243*^9}, {3.739780469010458*^9, 
   3.739780501510158*^9}, {3.7397805786128407`*^9, 3.739780664793088*^9}, {
   3.740061424822105*^9, 3.7400614826430693`*^9}, {3.7400615538331823`*^9, 
   3.7400616844597263`*^9}, {3.740063720276019*^9, 3.740063968978107*^9}, 
   3.740064064604292*^9, {3.74006437221751*^9, 3.7400643802734613`*^9}, {
   3.740123549045442*^9, 3.7401235952619*^9}, {3.7401236406827374`*^9, 
   3.740123659498645*^9}, {3.740178611699353*^9, 3.74017862403668*^9}, {
   3.7401788207040167`*^9, 3.740178830274123*^9}, {3.7402600599247713`*^9, 
   3.7402600667633743`*^9}, {3.740260133184928*^9, 3.740260156088291*^9}, 
   3.7402602057964077`*^9, {3.740260250236155*^9, 3.740260307551277*^9}, {
   3.74026037193589*^9, 3.740260480210343*^9}, {3.7402611862534513`*^9, 
   3.740261242367097*^9}, {3.740261450058853*^9, 3.740261455608571*^9}, {
   3.740391501943543*^9, 3.740391513405266*^9}, {3.7403922541564302`*^9, 
   3.740392268625791*^9}, {3.7479303562309103`*^9, 3.747930429037199*^9}, {
   3.747930614452818*^9, 3.747930635284437*^9}, {3.747997495887204*^9, 
   3.74799749642423*^9}, {3.749582560197873*^9, 3.7495825890689898`*^9}, {
   3.749582693339843*^9, 3.749582736229867*^9}, {3.7495829207023163`*^9, 
   3.749582923935667*^9}, {3.7495829569961452`*^9, 3.7495829719029503`*^9}, {
   3.749583014678893*^9, 3.749583044325963*^9}, 3.749583326087932*^9, {
   3.749583357656014*^9, 3.749583359555374*^9}, {3.749583477545404*^9, 
   3.749583494942459*^9}, {3.7496434349163837`*^9, 3.74964344194909*^9}, {
   3.7496434841843853`*^9, 3.749643509210387*^9}, {3.749643621494939*^9, 
   3.7496437928777742`*^9}, {3.749643886695696*^9, 3.749643897479113*^9}, {
   3.749643945339604*^9, 3.749643961157154*^9}, {3.749725979772355*^9, 
   3.749725986349573*^9}, {3.749731071996437*^9, 3.749731093853652*^9}, 
   3.749731131499707*^9, {3.7497461102854023`*^9, 3.749746162649041*^9}, {
   3.7497473960247517`*^9, 3.749747465802988*^9}, {3.7497490216496*^9, 
   3.7497490257255993`*^9}, {3.749749134773098*^9, 3.749749144341249*^9}, 
   3.749753734108162*^9, {3.749852516675681*^9, 3.749852577306177*^9}, {
   3.749852931858469*^9, 3.749852943031373*^9}, {3.7498541074364*^9, 
   3.7498541803041983`*^9}, {3.749854301887249*^9, 3.749854305786175*^9}, {
   3.74985440736946*^9, 3.749854532080657*^9}, {3.749854575122518*^9, 
   3.7498546087219143`*^9}, {3.749854890792081*^9, 3.749854928197403*^9}, {
   3.749854967838706*^9, 3.749855061354979*^9}, {3.749855099478649*^9, 
   3.749855121748996*^9}, {3.749855156580743*^9, 3.749855157103279*^9}, {
   3.7498552368215*^9, 3.749855302583099*^9}, {3.749855334491688*^9, 
   3.7498553447858067`*^9}, 3.7498554601348143`*^9, {3.749855496264985*^9, 
   3.7498555528841143`*^9}, {3.749855599193367*^9, 3.749855618278864*^9}, {
   3.749855677045478*^9, 3.749855830304659*^9}, {3.749855897619066*^9, 
   3.749856068353663*^9}, {3.7498562123313503`*^9, 3.749856233640532*^9}, {
   3.749856534775455*^9, 3.749856565650827*^9}, {3.749856713119672*^9, 
   3.749856729225309*^9}, {3.749856821823647*^9, 3.749856854018983*^9}, {
   3.7498569150720177`*^9, 3.749856967013633*^9}, {3.749857251423834*^9, 
   3.749857309688552*^9}, {3.749857381427964*^9, 3.749857386619381*^9}, {
   3.749857691005378*^9, 3.7498576939121*^9}, {3.750340407428341*^9, 
   3.750340581277602*^9}, {3.75034061616124*^9, 3.750341175075595*^9}, {
   3.750341205247813*^9, 3.7503412093712997`*^9}, {3.7503412454084044`*^9, 
   3.7503413568275347`*^9}, {3.7503414305223*^9, 3.750341444785556*^9}, {
   3.7503414862117043`*^9, 3.7503416976683702`*^9}, {3.7503417452981443`*^9, 
   3.750341846791624*^9}, {3.750341887497489*^9, 3.7503421304966097`*^9}, 
   3.750342527978755*^9, {3.75034264908506*^9, 3.750342653925737*^9}, 
   3.75034280255478*^9, {3.7503430004065638`*^9, 3.750343008727709*^9}, {
   3.750354617002966*^9, 3.750354617527933*^9}, {3.750355302756898*^9, 
   3.750355352196828*^9}, {3.750355486963677*^9, 3.750355570155427*^9}, {
   3.750356041864772*^9, 3.750356054430718*^9}, {3.750356287547737*^9, 
   3.7503562915836077`*^9}, {3.750356331875802*^9, 3.750356357942192*^9}, {
   3.750356448660529*^9, 3.750356452735085*^9}, {3.750356500567402*^9, 
   3.750356540309114*^9}, {3.750358501389545*^9, 3.750358555523737*^9}, {
   3.750359419172048*^9, 3.750359507097209*^9}, {3.750360876000022*^9, 
   3.750360885821746*^9}, {3.750360938209502*^9, 3.75036094935499*^9}, {
   3.7503611211970387`*^9, 3.75036114393112*^9}, {3.750364732427146*^9, 
   3.7503647953841553`*^9}, {3.7503649300374327`*^9, 3.750364944428418*^9}, {
   3.750365015406686*^9, 3.7503651542509108`*^9}, {3.750365261066121*^9, 
   3.7503652743241997`*^9}, {3.750365531075739*^9, 3.750365560837726*^9}, {
   3.75036564432513*^9, 3.750365646337002*^9}, {3.750365728966009*^9, 
   3.750365732803638*^9}, {3.750366187665132*^9, 3.750366246867943*^9}, {
   3.7503663670331497`*^9, 3.750366370926434*^9}, {3.750366402802795*^9, 
   3.7503664421853848`*^9}, {3.750366731051217*^9, 3.7503667377557287`*^9}, {
   3.750366769374371*^9, 3.7503668093756323`*^9}, {3.750366896704771*^9, 
   3.7503668993349447`*^9}, {3.750366957807788*^9, 3.75036696403658*^9}, {
   3.751231515024201*^9, 3.751231824375305*^9}, {3.751231873218196*^9, 
   3.751232017637101*^9}, {3.751232062582542*^9, 3.751232161534123*^9}, {
   3.751232208760261*^9, 3.751232342406003*^9}, {3.751232912385221*^9, 
   3.7512329248488493`*^9}, {3.7512342642857323`*^9, 
   3.7512342655254993`*^9}, {3.751235860383644*^9, 3.7512358635277243`*^9}, 
   3.7512359202426767`*^9, {3.7512359561821404`*^9, 3.751235984367289*^9}, {
   3.751236036564156*^9, 3.7512361527637453`*^9}, {3.751236215512021*^9, 
   3.751236238974263*^9}, 3.751236456110141*^9, {3.751236597918083*^9, 
   3.751236614811955*^9}, {3.751236699515877*^9, 3.751236720027707*^9}, {
   3.751236751102455*^9, 3.751236754493449*^9}, {3.751236862101678*^9, 
   3.751236868136018*^9}, {3.751239454203775*^9, 3.751239488890787*^9}, {
   3.7512399157276487`*^9, 3.751239925978183*^9}, {3.7512401008343143`*^9, 
   3.7512401828106937`*^9}, {3.751279211725786*^9, 3.751279259480237*^9}, {
   3.7512796000885277`*^9, 3.75127979650462*^9}, {3.75129032810503*^9, 
   3.7512903463465347`*^9}, {3.7512907391136627`*^9, 3.751290748402528*^9}, {
   3.751302831130157*^9, 3.7513028437102203`*^9}, {3.75130289790551*^9, 
   3.7513029601809597`*^9}, {3.751303018088114*^9, 3.7513030374298353`*^9}, {
   3.7513035056714687`*^9, 3.751303513564206*^9}, {3.751303834219907*^9, 
   3.7513038423346033`*^9}, {3.751303913204586*^9, 3.751303935264039*^9}, {
   3.751304201111967*^9, 3.7513042311529007`*^9}, {3.751304438632119*^9, 
   3.751304475544438*^9}, {3.751304595170041*^9, 3.7513046096078243`*^9}, {
   3.751305496479273*^9, 3.7513055082687798`*^9}, {3.7513062939689293`*^9, 
   3.75130630812427*^9}, {3.7513063959847383`*^9, 3.751306478693458*^9}, {
   3.751413083107315*^9, 3.7514130879654016`*^9}, {3.751495866462874*^9, 
   3.751495900615265*^9}, {3.751495989305697*^9, 3.7514961032967873`*^9}, 
   3.751496633970166*^9, {3.7514967725797863`*^9, 3.751496777040188*^9}, {
   3.7515024381144733`*^9, 3.751502438654847*^9}, {3.751537818285037*^9, 
   3.751537823379384*^9}, {3.751537921852923*^9, 3.751537948240361*^9}, {
   3.751537994060628*^9, 3.75153804489296*^9}, {3.751538084361602*^9, 
   3.751538095210515*^9}, {3.751538446384419*^9, 3.751538453481875*^9}, {
   3.7515385051213512`*^9, 3.751538611073222*^9}, {3.751544296105434*^9, 
   3.751544296448882*^9}, {3.7515445130611753`*^9, 3.751544513307205*^9}, {
   3.751545283468165*^9, 3.7515453557442417`*^9}, {3.751545393357276*^9, 
   3.751545413017947*^9}, 3.751549356775401*^9, {3.7515494686515512`*^9, 
   3.7515494762998867`*^9}, {3.751549541204248*^9, 3.751549553585186*^9}, {
   3.7515496056127872`*^9, 3.75154960830787*^9}, {3.7515586060588083`*^9, 
   3.751558763848439*^9}, {3.75156148167162*^9, 3.7515615359062033`*^9}, {
   3.7515615883033333`*^9, 3.751561674294763*^9}, {3.751561712131209*^9, 
   3.751561760593401*^9}, {3.751561808824093*^9, 3.751561867349786*^9}, {
   3.751561937136552*^9, 3.751562042403425*^9}, {3.751562109439796*^9, 
   3.75156211346091*^9}, {3.751562165406714*^9, 3.751562169881166*^9}, {
   3.751562210364498*^9, 3.751562215055176*^9}, {3.7515622692096252`*^9, 
   3.751562356040544*^9}, {3.7515624226909513`*^9, 3.7515625194963923`*^9}, {
   3.751562553680674*^9, 3.7515626257301903`*^9}, {3.751562682090818*^9, 
   3.751562725575674*^9}, {3.7515627860173798`*^9, 3.751562807083415*^9}, {
   3.751563025072036*^9, 3.751563044085355*^9}, {3.751563302579486*^9, 
   3.751563338641426*^9}, {3.751564656900585*^9, 3.7515646575698338`*^9}, {
   3.75156472573591*^9, 3.7515647283481493`*^9}, {3.7515648972775717`*^9, 
   3.751564961463015*^9}, {3.751565095770521*^9, 3.751565161305469*^9}, {
   3.751565212278171*^9, 3.751565253233955*^9}, {3.751565498835065*^9, 
   3.751565515032814*^9}, 3.751566834625976*^9, {3.7515710729392977`*^9, 
   3.751571093934725*^9}, {3.751576993232592*^9, 3.751577016492985*^9}, {
   3.751577075979475*^9, 3.751577153491897*^9}, {3.751577276900434*^9, 
   3.751577279995295*^9}, {3.751577716320366*^9, 3.751577750702815*^9}, {
   3.75157787174164*^9, 3.7515778770914*^9}, {3.7516288724827337`*^9, 
   3.75162888320919*^9}, {3.751629049509807*^9, 3.751629050057425*^9}, {
   3.751629168799286*^9, 3.751629187819458*^9}, {3.7516292189142933`*^9, 
   3.7516292190337343`*^9}, {3.751629265345389*^9, 3.7516292732158546`*^9}, 
   3.7516294222812777`*^9, {3.751629533987393*^9, 3.751629534133215*^9}, {
   3.7516296499196444`*^9, 3.751629651326404*^9}, {3.751629760765243*^9, 
   3.7516300755772743`*^9}, {3.751637290168449*^9, 3.7516373360669947`*^9}, {
   3.7516374010967817`*^9, 3.751637444495826*^9}, {3.7516374782995253`*^9, 
   3.751637546966172*^9}, 3.751637603801092*^9, {3.7516376664196663`*^9, 
   3.7516377201999273`*^9}, {3.751637823352298*^9, 3.751637829900673*^9}, {
   3.751645594769347*^9, 3.751645595250983*^9}, {3.7516459987209063`*^9, 
   3.7516460531244164`*^9}, 3.7516469469398108`*^9, 3.751647005851668*^9, {
   3.75164720689297*^9, 3.751647208209799*^9}, {3.751647481659872*^9, 
   3.751647492006464*^9}, {3.7516485747065372`*^9, 3.7516485781423283`*^9}, {
   3.751649474263177*^9, 3.751649487350234*^9}, {3.7516496352785892`*^9, 
   3.751649645423724*^9}, {3.751649735450672*^9, 3.751649773153988*^9}, 
   3.751649837713822*^9, {3.751652101771695*^9, 3.7516521021151752`*^9}, {
   3.751652133890439*^9, 3.7516521341966867`*^9}, {3.751652169634611*^9, 
   3.751652170133919*^9}, {3.751652211417499*^9, 3.751652267267707*^9}, {
   3.751652415972871*^9, 3.751652419323004*^9}, {3.751652456619438*^9, 
   3.751652471421349*^9}, {3.7516525036422462`*^9, 3.751652507215217*^9}, {
   3.751652689349036*^9, 3.7516526902515373`*^9}, {3.751652726683701*^9, 
   3.7516527866522913`*^9}, {3.751653014738415*^9, 3.751653046670014*^9}, {
   3.751653127565333*^9, 3.7516531339716167`*^9}, 3.751653267443864*^9, 
   3.751653345408745*^9, {3.751653511093302*^9, 3.751653511635913*^9}, 
   3.7516535431600037`*^9, {3.751653838557932*^9, 3.751653843961684*^9}, {
   3.751653962406951*^9, 3.751653962538517*^9}, {3.7516545795730352`*^9, 
   3.7516545999330273`*^9}, {3.751715926611313*^9, 3.751715942182036*^9}, {
   3.751716035513422*^9, 3.7517160464843063`*^9}, {3.751716146299018*^9, 
   3.751716156228015*^9}, {3.751716482410522*^9, 3.751716486076694*^9}, {
   3.751716558032143*^9, 3.7517165833864202`*^9}, {3.751716669238173*^9, 
   3.751716717748485*^9}, {3.751716791446598*^9, 3.751716813497707*^9}, {
   3.751716914726776*^9, 3.7517169316452703`*^9}, {3.751717050767728*^9, 
   3.751717054568385*^9}, {3.751717268077907*^9, 3.751717275935107*^9}, {
   3.75171733386516*^9, 3.7517173377785997`*^9}, {3.751717370589518*^9, 
   3.751717417875321*^9}, {3.7517180833138437`*^9, 3.7517180878551197`*^9}, {
   3.7517183889689713`*^9, 3.751718407492717*^9}, {3.751718457747369*^9, 
   3.751718476401888*^9}, {3.7517189806430893`*^9, 3.75171901190724*^9}, {
   3.751719101169832*^9, 3.751719139749963*^9}, {3.751719327337944*^9, 
   3.751719328827232*^9}, {3.751720401957924*^9, 3.751720458041404*^9}, {
   3.75172072542136*^9, 3.75172074468608*^9}, {3.751720911417285*^9, 
   3.7517209205994997`*^9}, {3.751720957122806*^9, 3.751721026148793*^9}, {
   3.751721089598776*^9, 3.751721102125545*^9}, {3.751721144723473*^9, 
   3.751721158568522*^9}, {3.751733039881497*^9, 3.75173306050749*^9}, {
   3.751733094888483*^9, 3.751733130128273*^9}, 3.751735165010952*^9, {
   3.751735922048814*^9, 3.751735924632613*^9}, {3.751736113446814*^9, 
   3.751736118439741*^9}, {3.751736206401352*^9, 3.751736217306389*^9}, {
   3.751798417659898*^9, 3.751798429367803*^9}, {3.7517986494732227`*^9, 
   3.7517986525278263`*^9}, {3.7517986912293262`*^9, 3.751798770342992*^9}, {
   3.751798823839013*^9, 3.75179884550105*^9}, {3.751798885931096*^9, 
   3.751798929582193*^9}, {3.751798979707712*^9, 3.75179915882579*^9}, {
   3.751799193597516*^9, 3.7517992780047894`*^9}, {3.751799309970454*^9, 
   3.751799405110573*^9}, {3.751799482687084*^9, 3.75179958182675*^9}, 
   3.7518001227415257`*^9, {3.7518001925370407`*^9, 3.751800251458807*^9}, {
   3.751800303861652*^9, 3.7518003956405582`*^9}, {3.7518004272471657`*^9, 
   3.75180043983603*^9}, {3.75180048296913*^9, 3.751800494327083*^9}, {
   3.7518005372163363`*^9, 3.751800579223317*^9}, {3.7518006119581203`*^9, 
   3.7518006628536673`*^9}, 3.751800695716783*^9, {3.751800763628375*^9, 
   3.7518008304330883`*^9}, {3.751800876348398*^9, 3.751800927947172*^9}, {
   3.751801839638151*^9, 3.7518018463838053`*^9}, {3.751802126918486*^9, 
   3.751802131557201*^9}, {3.751802260774788*^9, 3.7518022609512663`*^9}, {
   3.7518023776895638`*^9, 3.751802378289467*^9}, {3.751802426490089*^9, 
   3.751802475933446*^9}, {3.7518031508784647`*^9, 3.751803157509877*^9}, 
   3.7518061404754963`*^9, {3.7518062625937634`*^9, 3.7518062631108913`*^9}, {
   3.7518070846834583`*^9, 3.7518071377535753`*^9}, {3.751807177573794*^9, 
   3.751807291920554*^9}, {3.751807323339164*^9, 3.751807328728582*^9}, {
   3.7518075376393414`*^9, 3.7518075837025137`*^9}, {3.751807668973563*^9, 
   3.751807830288034*^9}, {3.751807958619115*^9, 3.751807971924474*^9}, {
   3.7518080290092382`*^9, 3.751808069575149*^9}, {3.751808252079794*^9, 
   3.751808377741488*^9}, {3.751808570772999*^9, 3.751808574260172*^9}, {
   3.751808704141993*^9, 3.751808739224606*^9}, {3.7518093690816383`*^9, 
   3.75180937572128*^9}, {3.751809686168675*^9, 3.751809760554845*^9}, {
   3.751809917637191*^9, 3.751809928259366*^9}, {3.751810228648875*^9, 
   3.75181028324914*^9}, {3.751824616853136*^9, 3.75182472716533*^9}, {
   3.7518249280280323`*^9, 3.751824928183599*^9}, {3.751825151434713*^9, 
   3.751825222966187*^9}, {3.751839748675558*^9, 3.7518397501173487`*^9}, 
   3.7518401836277237`*^9, {3.751840792881866*^9, 3.751840797702263*^9}, {
   3.7518410679511337`*^9, 3.751841069211073*^9}, 3.7518415370510273`*^9, {
   3.751895487876444*^9, 3.7518954930611362`*^9}, {3.7518955580577173`*^9, 
   3.751895604224069*^9}, {3.751895654310853*^9, 3.7518956680298023`*^9}, {
   3.751896278129829*^9, 3.7518963364186573`*^9}, {3.751896627099759*^9, 
   3.751896627414134*^9}, {3.7520763299396*^9, 3.752076338638386*^9}, 
   3.752077011131209*^9, {3.752077140332273*^9, 3.752077276395726*^9}, {
   3.752077943788394*^9, 3.752077964578499*^9}, {3.7520781936295633`*^9, 
   3.752078208452619*^9}, 3.752078456877599*^9, 3.75207862699662*^9, {
   3.752078731399474*^9, 3.752078752600417*^9}, {3.75209184854316*^9, 
   3.752091882960454*^9}, {3.7520920634820023`*^9, 3.752092110012907*^9}, {
   3.752092773098748*^9, 3.752092857895316*^9}, {3.752092899623858*^9, 
   3.75209291924622*^9}, {3.7520935761298532`*^9, 3.75209365272859*^9}, {
   3.752093931883293*^9, 3.752094086147716*^9}, {3.752094140909066*^9, 
   3.7520941988478603`*^9}, {3.7520946095735207`*^9, 3.752094612960443*^9}, {
   3.7520951182367773`*^9, 3.7520951514429483`*^9}, {3.752095282160482*^9, 
   3.75209530126021*^9}, {3.752095335688068*^9, 3.752095458228656*^9}, {
   3.752098904416341*^9, 3.7520989391011744`*^9}, {3.752145925689399*^9, 
   3.752145954696745*^9}, {3.7521464365413647`*^9, 3.7521464839556637`*^9}, {
   3.752146613749238*^9, 3.7521469611268473`*^9}, {3.752147003218556*^9, 
   3.752147081933769*^9}, {3.752147183334186*^9, 3.7521471856604843`*^9}, {
   3.7521473173076477`*^9, 3.752147323731083*^9}, {3.7521481407061653`*^9, 
   3.752148149605111*^9}, {3.752148359644085*^9, 3.7521483883184443`*^9}, {
   3.752148849884918*^9, 3.7521489816184683`*^9}, {3.752149255017062*^9, 
   3.752149255581373*^9}, {3.7521494791149473`*^9, 3.752149522284981*^9}, {
   3.752149643584491*^9, 3.7521496463537083`*^9}, {3.752149776181638*^9, 
   3.75214978659002*^9}, {3.752149946107175*^9, 3.752150032072791*^9}, {
   3.7521502542989197`*^9, 3.75215032635882*^9}, {3.752150474827382*^9, 
   3.7521504838886633`*^9}, {3.752150660235119*^9, 3.752150676583785*^9}, {
   3.752151060804699*^9, 3.7521510648490057`*^9}, {3.752151333988583*^9, 
   3.7521513443492613`*^9}, {3.7521515595161753`*^9, 3.752151571569998*^9}, {
   3.752173023418043*^9, 3.752173041389248*^9}, {3.752183890510558*^9, 
   3.7521839157637367`*^9}, {3.7521839516855097`*^9, 3.752183954796417*^9}, 
   3.7522740628916817`*^9, {3.7522766257949553`*^9, 3.752276642932055*^9}, {
   3.7540600366067543`*^9, 3.754060064065524*^9}, {3.75406413609597*^9, 
   3.754064137850526*^9}, {3.7540685596919823`*^9, 3.754068714299493*^9}, {
   3.7540687554301653`*^9, 3.754068820935916*^9}, {3.754070261826288*^9, 
   3.754070265858246*^9}, {3.754071095535481*^9, 3.7540712296380463`*^9}, {
   3.754071296696229*^9, 3.7540713133310966`*^9}, {3.7540717234752607`*^9, 
   3.7540717426247263`*^9}, {3.754071811627493*^9, 3.7540718272590847`*^9}, {
   3.754071973007613*^9, 3.754072029520756*^9}, {3.7540720600488234`*^9, 
   3.754072123683313*^9}, {3.754072270193646*^9, 3.754072350764205*^9}, {
   3.754072387505513*^9, 3.7540724024058123`*^9}, {3.7540726555796337`*^9, 
   3.7540726902084*^9}, 3.754124863716507*^9, {3.754125045016964*^9, 
   3.754125078222209*^9}, {3.754125201074399*^9, 3.754125201844459*^9}, {
   3.754135337680895*^9, 3.7541353387164993`*^9}, {3.754136989807629*^9, 
   3.754136997137992*^9}, {3.754137032943564*^9, 3.754137105997875*^9}, {
   3.7541373082634087`*^9, 3.7541373455656643`*^9}, {3.754137453136874*^9, 
   3.754137490345498*^9}, {3.754141797551085*^9, 3.7541418007452917`*^9}, {
   3.754142020743325*^9, 3.7541421176707773`*^9}, {3.754142277352551*^9, 
   3.754142298283483*^9}, {3.754142376544476*^9, 3.754142455529378*^9}, {
   3.754142573429875*^9, 3.754142577698892*^9}, {3.7541426484902554`*^9, 
   3.754142733055215*^9}, 3.754143113812148*^9, {3.754143192783051*^9, 
   3.754143239654769*^9}, {3.7541433416137047`*^9, 3.75414344205836*^9}, {
   3.754143510110219*^9, 3.7541437502403517`*^9}, {3.7541437914362707`*^9, 
   3.754143792137704*^9}, {3.754143884194683*^9, 3.754143904421767*^9}, {
   3.754148675317902*^9, 3.7541487467788363`*^9}, {3.754149590195074*^9, 
   3.7541496025926237`*^9}, 3.754150060270068*^9, {3.7541502232345448`*^9, 
   3.7541503350456743`*^9}, 3.7541507754206944`*^9, {3.754150949172139*^9, 
   3.754150980118537*^9}, {3.754152308796789*^9, 3.7541523358813477`*^9}, {
   3.754152423481935*^9, 3.7541524427830763`*^9}, 3.75415277776615*^9, {
   3.754152904330847*^9, 3.754152933159709*^9}, {3.754153381876502*^9, 
   3.754153424878832*^9}, {3.754154301664117*^9, 3.7541543104932213`*^9}, {
   3.754155002506782*^9, 3.754155009940427*^9}, 3.754155450928688*^9, {
   3.754155623143117*^9, 3.7541556890425034`*^9}, 3.75415580894442*^9, {
   3.754158124589423*^9, 3.754158165441802*^9}, {3.754221678167041*^9, 
   3.754221691996869*^9}, {3.754331394731304*^9, 3.754331400847047*^9}, {
   3.754332374641901*^9, 3.754332378082255*^9}, {3.75448620816931*^9, 
   3.754486212734262*^9}, {3.754487092898325*^9, 3.75448709696136*^9}, {
   3.754487631371769*^9, 3.754487632627947*^9}, {3.754498938990245*^9, 
   3.7544989434472723`*^9}, {3.754499318533059*^9, 3.754499319435788*^9}, {
   3.754499515294112*^9, 3.75449955571801*^9}, {3.754499974383054*^9, 
   3.754500000620544*^9}, {3.754610326474647*^9, 3.7546103451255608`*^9}, 
   3.7546104713570347`*^9, 3.754611058721663*^9, {3.754611287655113*^9, 
   3.754611359478609*^9}, {3.7546114198371677`*^9, 3.754611423616193*^9}, {
   3.754847304097584*^9, 3.754847335194729*^9}, {3.754847423957529*^9, 
   3.754847444892487*^9}, 3.7548599500228777`*^9, {3.754866577320202*^9, 
   3.7548665852139997`*^9}, {3.754866646884166*^9, 3.754866654807461*^9}, {
   3.754867029235722*^9, 3.754867052407175*^9}, {3.7550383338132267`*^9, 
   3.755038362221529*^9}, 3.755038394431713*^9, 3.755038449246237*^9, 
   3.755038502769348*^9, 3.7550385636070538`*^9, {3.755038622036475*^9, 
   3.7550386509129877`*^9}, {3.7550387447025223`*^9, 3.755038798704493*^9}, {
   3.755038832054975*^9, 3.75503893219184*^9}, {3.7550391457328463`*^9, 
   3.755039151295034*^9}, {3.755039326093225*^9, 3.755039343571467*^9}, {
   3.7550426828143883`*^9, 3.7550426923367767`*^9}, {3.7550427751742496`*^9, 
   3.755042815741707*^9}, {3.755043092447254*^9, 3.755043094818572*^9}, {
   3.755043160627067*^9, 3.755043172457424*^9}, 3.755043244783074*^9, 
   3.755043565730195*^9, {3.7550436355354967`*^9, 3.755043668873497*^9}, {
   3.755044005281886*^9, 3.755044018982979*^9}, {3.75504413603023*^9, 
   3.755044144325768*^9}, {3.755091330094133*^9, 3.755091341094282*^9}, {
   3.7550916132037477`*^9, 3.755091677280504*^9}, {3.755248048668088*^9, 
   3.755248085211885*^9}, {3.755248158963763*^9, 3.7552482191518393`*^9}, {
   3.75524908608314*^9, 3.755249133342575*^9}, {3.755249291948694*^9, 
   3.755249292107854*^9}, {3.755249323920051*^9, 3.7552493459602537`*^9}, {
   3.755249458921034*^9, 3.7552494860425177`*^9}, {3.755249519900857*^9, 
   3.755249570431768*^9}, {3.755251140713818*^9, 3.755251305615366*^9}, {
   3.755251363697605*^9, 3.755251393726355*^9}, {3.755251465912447*^9, 
   3.755251467594413*^9}, {3.755251540798876*^9, 3.755251543552836*^9}, {
   3.755251719241967*^9, 3.75525202309391*^9}, {3.755252062682158*^9, 
   3.7552520675302896`*^9}, {3.755252141443934*^9, 3.755252149300518*^9}, {
   3.755252201674165*^9, 3.755252208796874*^9}, {3.7552522901316433`*^9, 
   3.755252344304134*^9}, {3.755253308003385*^9, 3.755253313365698*^9}, {
   3.75527983555612*^9, 3.755279849331195*^9}, {3.755279891894659*^9, 
   3.755279892893921*^9}, {3.755279928842754*^9, 3.755279945544742*^9}, {
   3.75528003064255*^9, 3.75528003348041*^9}, {3.755280352889839*^9, 
   3.7552803545653343`*^9}, {3.755280928872278*^9, 3.755280930270104*^9}, {
   3.755281325071101*^9, 3.7552813304491053`*^9}, {3.755282299107503*^9, 
   3.755282304925618*^9}, {3.755300965507504*^9, 3.755300966882903*^9}, {
   3.755301051716546*^9, 3.755301057214089*^9}, {3.755303131196149*^9, 
   3.755303153335169*^9}, 3.755304785347013*^9, {3.7553461505467176`*^9, 
   3.755346182918645*^9}, {3.7553464924506683`*^9, 3.755346504040049*^9}, {
   3.7553466223729362`*^9, 3.755346626221219*^9}, {3.7553467534532824`*^9, 
   3.7553468335414677`*^9}, {3.755347805947216*^9, 3.755347833083145*^9}, {
   3.755347877840963*^9, 3.755347981614768*^9}, {3.755348095689247*^9, 
   3.755348105479208*^9}, {3.755348149104968*^9, 3.755348174650983*^9}, {
   3.755348547904275*^9, 3.755348551669018*^9}, {3.7553486815290537`*^9, 
   3.7553487140070677`*^9}, {3.755349603182302*^9, 3.7553496323245077`*^9}, {
   3.755422261416854*^9, 3.7554222672999372`*^9}, {3.7554226715942593`*^9, 
   3.755422678512281*^9}, {3.755426961774531*^9, 3.755426963241269*^9}, {
   3.755427034636972*^9, 3.755427040207037*^9}, {3.755427100401968*^9, 
   3.755427130040387*^9}, {3.755427433092792*^9, 3.7554274348093443`*^9}, {
   3.75543322013325*^9, 3.755433250652923*^9}, {3.755433947101635*^9, 
   3.755434085916934*^9}, {3.755434872915963*^9, 3.755434974882758*^9}, {
   3.755435179237575*^9, 3.755435179426338*^9}, {3.755435449296164*^9, 
   3.755435484727274*^9}, {3.755435837436494*^9, 3.7554358485757427`*^9}, {
   3.755435985523542*^9, 3.755435987146476*^9}, {3.755465403016705*^9, 
   3.755465452259523*^9}, {3.755466211187352*^9, 3.755466213068471*^9}, {
   3.7554662831581583`*^9, 3.7554663685188828`*^9}, {3.7554664531899242`*^9, 
   3.7554664895790567`*^9}, {3.7554665325740213`*^9, 
   3.7554665944797173`*^9}, {3.755466660574009*^9, 3.755466698252858*^9}, {
   3.755466730660328*^9, 3.755466788873332*^9}, {3.755466845093766*^9, 
   3.755466845397154*^9}, {3.75546697687957*^9, 3.755467015632967*^9}, {
   3.75546711144893*^9, 3.755467112939146*^9}, {3.755467259531*^9, 
   3.7554672851981373`*^9}, {3.755467363069664*^9, 3.755467471390663*^9}, {
   3.755467501763892*^9, 3.7554675634623947`*^9}, {3.755467821712776*^9, 
   3.755467911644956*^9}, {3.7554680725048428`*^9, 3.755468173940151*^9}, {
   3.75546826621847*^9, 3.755468303597891*^9}, {3.755468441900177*^9, 
   3.755468492714786*^9}, {3.755468584702196*^9, 3.755468591143145*^9}, {
   3.75546867188352*^9, 3.755468672432798*^9}, 3.755468775841443*^9, {
   3.7554689054083147`*^9, 3.7554689461771317`*^9}, {3.7554702273167353`*^9, 
   3.755470300176528*^9}, {3.7554704710211287`*^9, 3.755470516732333*^9}, {
   3.755470648084305*^9, 3.7554706559322443`*^9}, {3.755471303028047*^9, 
   3.75547131171236*^9}, {3.755471375950007*^9, 3.755471472435717*^9}, {
   3.7554715412197437`*^9, 3.7554715708828297`*^9}, 3.755471795004229*^9, {
   3.7554719567033987`*^9, 3.755471963577717*^9}, {3.755472253079762*^9, 
   3.755472256739046*^9}, {3.755472288060709*^9, 3.755472340201665*^9}, {
   3.7554724540623827`*^9, 3.755472457610077*^9}, {3.755472764493659*^9, 
   3.7554727700264606`*^9}, 3.755472933620186*^9, {3.755473086901925*^9, 
   3.7554730895353947`*^9}, {3.755473446453323*^9, 3.7554734473113747`*^9}, {
   3.755473521965591*^9, 3.755473523901739*^9}, {3.755473562559918*^9, 
   3.755473572922802*^9}, {3.7554742280690002`*^9, 3.7554742290233994`*^9}, {
   3.7554749517074547`*^9, 3.7554749574835577`*^9}, {3.755683194044935*^9, 
   3.755683337962453*^9}, {3.755684786574656*^9, 3.755684808720909*^9}, {
   3.755684937901537*^9, 3.75568494493083*^9}, {3.75570494472488*^9, 
   3.7557049742445593`*^9}, 3.755705291734745*^9, {3.755705324456543*^9, 
   3.755705354615466*^9}, {3.755705475647489*^9, 3.7557054768755827`*^9}, {
   3.7557061778409443`*^9, 3.75570618266053*^9}, {3.756138929942781*^9, 
   3.756138944823853*^9}, {3.756139376351317*^9, 3.756139518637814*^9}, {
   3.756139662438712*^9, 3.756139668887361*^9}, 3.7561399319637136`*^9, {
   3.756140017881428*^9, 3.756140021991975*^9}, {3.756140085613619*^9, 
   3.7561400952779903`*^9}, {3.7561402246095333`*^9, 3.756140242520838*^9}, {
   3.7561403110583143`*^9, 3.756140314999977*^9}, {3.756140371588345*^9, 
   3.7561403754876137`*^9}, {3.756140468731234*^9, 3.7561404984337683`*^9}, {
   3.7561409838115587`*^9, 3.756140985423092*^9}, {3.7561416244839287`*^9, 
   3.756141635040811*^9}, 3.7561417099059067`*^9, 3.7561417663371696`*^9, {
   3.7561418623153257`*^9, 3.7561418667296247`*^9}, {3.756142008811397*^9, 
   3.7561420100010567`*^9}, {3.7561420779614983`*^9, 3.75614208453522*^9}, {
   3.756142311953557*^9, 3.756142334009741*^9}, {3.7561424559031277`*^9, 
   3.756142509703713*^9}, {3.7561426492067966`*^9, 3.756142663638414*^9}, {
   3.756143097322401*^9, 3.756143097495571*^9}, {3.756143140692525*^9, 
   3.7561431408893423`*^9}, {3.7561457448252907`*^9, 3.756145746065488*^9}, 
   3.7561458630340223`*^9, {3.756146141938093*^9, 3.7561461477695303`*^9}, {
   3.75614698404207*^9, 3.756146992695438*^9}, 3.756147222213015*^9, {
   3.7562200131007643`*^9, 3.756220050227367*^9}, {3.756220152310268*^9, 
   3.7562201921713676`*^9}, {3.756220225663075*^9, 3.756220378668243*^9}, {
   3.7562204104013357`*^9, 3.75622041068817*^9}, {3.7562204617290373`*^9, 
   3.7562207431352587`*^9}, {3.756220783797078*^9, 3.756220904564247*^9}, {
   3.7562209481083393`*^9, 3.756220948784628*^9}, {3.756220982739553*^9, 
   3.7562210199670067`*^9}, {3.756221067677279*^9, 3.756221313845091*^9}, {
   3.7562214614440823`*^9, 3.7562214637608833`*^9}, {3.756221496962482*^9, 
   3.756221503844017*^9}, {3.756221734051803*^9, 3.756221741368436*^9}, {
   3.756221782911639*^9, 3.756221788358405*^9}, {3.756221845204444*^9, 
   3.756221849761675*^9}, 3.756221933509963*^9, {3.756222238368146*^9, 
   3.756222244954134*^9}, {3.7562223015607147`*^9, 3.756222305114606*^9}, {
   3.756222434639605*^9, 3.756222474969943*^9}, {3.756222671946608*^9, 
   3.75622271049175*^9}, {3.756222753507698*^9, 3.7562227580489473`*^9}, {
   3.756223158510981*^9, 3.7562232669989567`*^9}, {3.756223302921027*^9, 
   3.756223316290752*^9}, {3.756223727683033*^9, 3.756223784929059*^9}, {
   3.756223823581317*^9, 3.756223856416828*^9}, {3.756224082904057*^9, 
   3.7562240833962708`*^9}, {3.7562244047134*^9, 3.756224410189335*^9}, {
   3.756226610080892*^9, 3.7562266215835342`*^9}, {3.756295078706974*^9, 
   3.756295107556464*^9}, 3.756295810719227*^9, {3.756305068934804*^9, 
   3.7563050953171177`*^9}, {3.756305730667582*^9, 3.7563057386303043`*^9}, {
   3.756309378456243*^9, 3.756309435267972*^9}, {3.7563099550944977`*^9, 
   3.756309959346018*^9}, {3.7563838770371523`*^9, 3.756383898421974*^9}, {
   3.756383933952104*^9, 3.756383935682241*^9}, {3.756384111420044*^9, 
   3.7563841300311737`*^9}, {3.756384190927565*^9, 3.756384193277317*^9}, {
   3.756466032522214*^9, 3.756466035316917*^9}, 3.7564660736578293`*^9, {
   3.756466166817708*^9, 3.7564661785835953`*^9}, {3.756506930802848*^9, 
   3.756506956678274*^9}, {3.756507064102241*^9, 3.756507071843799*^9}, 
   3.7565071321915293`*^9, {3.75650738754841*^9, 3.7565074170406017`*^9}, {
   3.756507447846097*^9, 3.756507456423417*^9}, {3.756507492562529*^9, 
   3.756507498102124*^9}, {3.756507565512772*^9, 3.756507587812684*^9}, {
   3.7565082157458963`*^9, 3.756508230734756*^9}, {3.756508338900854*^9, 
   3.7565085039024343`*^9}, {3.75650855419947*^9, 3.756508606714884*^9}, {
   3.756508642099575*^9, 3.756508694354155*^9}, {3.756508782216997*^9, 
   3.7565088448182707`*^9}, {3.7565089775606813`*^9, 3.756509112924902*^9}, {
   3.756509337167605*^9, 3.756509375012713*^9}, {3.756509553337614*^9, 
   3.756509583630934*^9}, {3.756509644904599*^9, 3.756509712289001*^9}, {
   3.756509895860849*^9, 3.7565098969771442`*^9}, {3.756510345324215*^9, 
   3.756510347436015*^9}, {3.756510425800755*^9, 3.756510432855521*^9}, {
   3.75651047243649*^9, 3.7565105249045753`*^9}, {3.756510559816434*^9, 
   3.756510567422735*^9}, 3.756510611476758*^9, {3.756510889986174*^9, 
   3.7565109631364527`*^9}, {3.7565110097878323`*^9, 3.75651106866311*^9}, {
   3.756511100767321*^9, 3.756511174391522*^9}, {3.756511446837372*^9, 
   3.756511471942428*^9}, {3.756511858657556*^9, 3.7565118642258587`*^9}, {
   3.756577271279686*^9, 3.756577294418335*^9}, {3.756577399081633*^9, 
   3.756577447073515*^9}, {3.756577690901058*^9, 3.7565777186307373`*^9}, {
   3.756577954850033*^9, 3.756577982309497*^9}, {3.756578016001278*^9, 
   3.756578016462306*^9}, {3.7565780816188602`*^9, 3.756578158626753*^9}, {
   3.7565790685771627`*^9, 3.756579068698072*^9}, {3.756579104396306*^9, 
   3.75657913946201*^9}, {3.756579310462329*^9, 3.75657931629002*^9}, {
   3.7565795588707867`*^9, 3.756579591425392*^9}, {3.756579637981789*^9, 
   3.756579641750732*^9}, {3.756590766278243*^9, 3.7565907793518677`*^9}, {
   3.756591042724394*^9, 3.756591046919196*^9}, {3.7565911005616903`*^9, 
   3.7565911097333508`*^9}, {3.7565912691250057`*^9, 3.756591302119369*^9}, {
   3.756591405200582*^9, 3.756591416981998*^9}, {3.756591823035431*^9, 
   3.756591850902615*^9}, {3.756592474743408*^9, 3.75659247491276*^9}, {
   3.7565925091922283`*^9, 3.756592522517371*^9}, {3.756593024246344*^9, 
   3.75659327128969*^9}, {3.7565933584605207`*^9, 3.75659337998057*^9}, {
   3.756593475937015*^9, 3.756593476202389*^9}, {3.7565935085723543`*^9, 
   3.756593524580344*^9}, {3.756593653092907*^9, 3.756593662971449*^9}, 
   3.756593701733313*^9, {3.756593816252254*^9, 3.756593863559205*^9}, {
   3.756593899926458*^9, 3.75659390022917*^9}, {3.756594004989257*^9, 
   3.756594132960125*^9}, {3.756594334086124*^9, 3.756594425515525*^9}, {
   3.756594543702228*^9, 3.756594547972805*^9}, {3.756594586842774*^9, 
   3.756594621288814*^9}, {3.756594720271545*^9, 3.7565947211416616`*^9}, {
   3.756594950634158*^9, 3.75659495305862*^9}, {3.7567430771022367`*^9, 
   3.7567432284553013`*^9}, {3.756813228794141*^9, 3.75681326588687*^9}, {
   3.756813435096402*^9, 3.756813681303029*^9}, {3.7568143731926527`*^9, 
   3.756814585414888*^9}, {3.756814712293438*^9, 3.756814858240045*^9}, {
   3.756814893762146*^9, 3.75681500685699*^9}, {3.7568150449559937`*^9, 
   3.756815092206127*^9}, {3.756815123147973*^9, 3.756815143786785*^9}, {
   3.7568151962163754`*^9, 3.756815208306427*^9}, {3.7568153963414717`*^9, 
   3.756815407111621*^9}, {3.75681556020247*^9, 3.756815565737721*^9}, {
   3.75681574860924*^9, 3.7568157505126133`*^9}, {3.756815789309561*^9, 
   3.756815807904582*^9}, {3.756815909943426*^9, 3.756815937819319*^9}, {
   3.7568162392600937`*^9, 3.756816253073119*^9}, 3.756816327956012*^9, {
   3.756816716433003*^9, 3.756816735978653*^9}, {3.756816844102811*^9, 
   3.756816859948332*^9}, 3.756817037587428*^9, {3.756817073243935*^9, 
   3.7568170867761307`*^9}, {3.75681712683097*^9, 3.756817258930924*^9}, {
   3.756817290892479*^9, 3.756817307001494*^9}, {3.756817342046596*^9, 
   3.756817453618641*^9}, {3.756817488717326*^9, 3.756817617462346*^9}, 
   3.7568181832031393`*^9, {3.7568183204840107`*^9, 3.756818345035819*^9}, {
   3.756818456054582*^9, 3.756818471410308*^9}, {3.7568186339750032`*^9, 
   3.756818663445142*^9}},
 FontSize->16,
 CellLabel->
  "In[223]:=",ExpressionUUID->"5456c4c7-48db-4458-b1c2-407cff088579"]
}, Open  ]]
},
WindowSize->{1308, 1001},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 156179, 2954, 10097, "Input",ExpressionUUID->"e6ee71de-10b6-46de-bd08-b2d14f1f1b4f"],
Cell[156604, 2971, 271137, 4892, 767, "Output",ExpressionUUID->"f8185e6a-cf56-4e4b-b720-0a20107deb82"]
}, Open  ]],
Cell[CellGroupData[{
Cell[427778, 7868, 547, 8, 52, "Section",ExpressionUUID->"912421aa-3894-415b-931e-bec10ff48e38",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[428328, 7878, 1992, 34, 103, "Input",ExpressionUUID->"523b4af4-68a5-4b28-a172-fc0561c750b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[430323, 7914, 925, 16, 71, "Subsection",ExpressionUUID->"802e4f4c-f1ae-4198-88cf-12d0b7b4e8a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[431251, 7932, 4371, 98, 155, "Input",ExpressionUUID->"2eb0914a-b7bd-4a4a-80fa-ac69b2ebd63e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[435625, 8032, 1879, 28, 164, "Subsection",ExpressionUUID->"33188028-e5c7-4f01-8c46-f6e5ee9beff8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[437507, 8062, 6445, 134, 342, "Input",ExpressionUUID->"88cb083b-6412-4f74-9ce1-1880850bac1b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[443955, 8198, 1024, 17, 71, "Subsection",ExpressionUUID->"faf73c06-db0a-4ef5-90cf-01af02531896",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[444982, 8217, 1102, 29, 77, "Input",ExpressionUUID->"ba259a72-d1e1-4d0c-8900-546301101a65",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[446087, 8248, 1066, 19, 71, "Subsection",ExpressionUUID->"3b0ad7fd-dd0d-445e-a2e3-b0c2cac4f854",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[447156, 8269, 1789, 35, 77, "Input",ExpressionUUID->"67abda04-21ef-4c91-9d41-85df673c975e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[448948, 8306, 16485, 229, 39, "Input",ExpressionUUID->"367dfbb4-5237-404a-8971-7378dcb3f1f8",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[465436, 8537, 17041, 249, 50, "Input",ExpressionUUID->"c9af6d59-1c83-498c-aeed-5ff41c940aff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[482480, 8788, 953, 17, 98, "Section",ExpressionUUID->"c4d61151-5cba-4628-aa24-a2c7d698803c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[483436, 8807, 4811, 70, 39, "Input",ExpressionUUID->"1c34b377-656a-4cf7-87af-be565ee0a602",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[488250, 8879, 4824, 71, 94, "Input",ExpressionUUID->"260b623f-98e8-404a-b6d7-1085d44f21b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[493077, 8952, 4827, 68, 39, "Input",ExpressionUUID->"48db0d1a-cecf-4c5d-8b09-df2604874f66",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[497907, 9022, 6335, 127, 129, "Input",ExpressionUUID->"6c9343cf-da94-4a8a-b757-78307e785f6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[504245, 9151, 4821, 68, 39, "Input",ExpressionUUID->"ee747a6e-d5a0-45c8-ac85-c497c816176e",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[509069, 9221, 5949, 133, 363, "Input",ExpressionUUID->"c7b1519e-bd54-4653-aa54-7d8674e5c994",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[515021, 9356, 4811, 68, 39, "Input",ExpressionUUID->"d832c35e-4b33-40cc-a956-b4961faa2cc6",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[519835, 9426, 13264, 228, 157, "Input",ExpressionUUID->"41f8ec12-f622-403f-9509-6c1044b40bb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[533102, 9656, 4796, 68, 39, "Input",ExpressionUUID->"af612f0b-ae36-4f80-9907-55ffccbbd50f",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[537901, 9726, 21479, 412, 1325, "Input",ExpressionUUID->"270cde5e-42f0-42be-a3ba-9affa07662ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[559383, 10140, 17860, 325, 779, "Input",ExpressionUUID->"6d6e2063-6715-4e8c-aa32-89fa7b4ba93b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[577246, 10467, 6112, 85, 39, "Input",ExpressionUUID->"e677af55-14b1-4e6e-94ba-dba297de1e94",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[583361, 10554, 8342, 212, 311, "Input",ExpressionUUID->"07ea8395-fd8c-4819-9e00-4f77786192a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[591706, 10768, 50970, 696, 39, "Input",ExpressionUUID->"67dbbb11-4224-404d-b1c5-34c09749612a",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[642679, 11466, 6501, 158, 415, "Input",ExpressionUUID->"c621ef94-98d9-45d6-b7a3-7b7b74d02def",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[649183, 11626, 152155, 2855, 8898, "Input",ExpressionUUID->"5456c4c7-48db-4458-b1c2-407cff088579",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Open  ]]
}
]
*)

