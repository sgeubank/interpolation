(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    709166,      12663]
NotebookOptionsPosition[    702981,      12541]
NotebookOutlinePosition[    703338,      12557]
CellTagsIndexPosition[    703295,      12554]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Given", " ", 
     RowBox[{"either", ":", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"(", "1", ")"}], " ", "a", " ", "degree"}], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"n", "-", "1"}], ")"}], " ", "coef"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"or", "\[IndentingNewLine]", 
      RowBox[{"(", "2", ")"}], " ", "n", " ", "uniformly"}], "-", 
     RowBox[{"spaced", " ", "data", " ", "points", " ", 
      RowBox[{"in", " ", "[", 
       RowBox[{"0", ",", "1"}], "]"}]}]}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"display", " ", "m_L"}], "-", 
     RowBox[{"term", " ", "left", " ", "and", " ", "m_R"}], "-", 
     RowBox[{
     "term", " ", "right", " ", "Taylor", " ", "series", " ", 
      "approximations"}]}], ",", " ", 
    RowBox[{
     RowBox[{"and", " ", "various", " ", "order"}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], " ", "Bernstein", " ", 
      "approximations", " ", "that", " ", "match", " ", "the", " ", 
      "derivatives", " ", 
      RowBox[{"exactly", ".", " ", "Assuming"}], " ", "that", " ", "all", " ",
       "the", " ", "Bernstein", " ", "coefficients", " ", "are", " ", "non"}],
      "-", 
     RowBox[{
      RowBox[{"negative", ".", "\[IndentingNewLine]", "exhibit"}], " ", 
      "bounds", " ", "on", " ", "the", " ", "Bernstein", " ", 
      "approximations", " ", "under", " ", "the", " ", "assumption", " ", 
      "that", " ", "the", " ", "function", " ", "is", " ", "either", " ", 
      "normed", " ", "or", " ", 
      RowBox[{"monotonic", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"messageNB", " ", "=", " ", 
      RowBox[{
       RowBox[{"Notebooks", "[", "\"\<Messages\>\"", "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"SetOptions", "[", 
      RowBox[{"messageNB", ",", 
       RowBox[{"PrintPrecision", "\[Rule]", "4"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"range0", "=", 
      RowBox[{"{", 
       RowBox[{"0", ",", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"eval", "=", 
      RowBox[{"eval", "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"recomputeTaylor", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"recomputeCoefs", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"msg", " ", "=", 
      RowBox[{"\"\<\\nEval \>\"", "<>", 
       RowBox[{"TextString", "[", "eval", "]"}], "<>", "\"\<\\n\>\""}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"numPts", "\[NotEqual]", "oldNumPts"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nchanged n to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "numPts", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mpair", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"numPts", ",", "leftM"}], "]"}], ",", 
           RowBox[{"Max", "[", 
            RowBox[{"1", ",", 
             RowBox[{"numPts", "+", "1", "-", "rightM"}]}], "]"}]}], "}"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"oldMpair", " ", "=", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "}"}]}], ";", "        ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "trigger", " ", "recomputation", " ", "of", " ", "everything", " ", 
          "that", " ", "depends", " ", "on", " ", "leftM", " ", "or", " ", 
          "rightM"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"d2b", "=", 
         RowBox[{
          RowBox[{"dataToBezierMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", "numPts"}], "]"}], "//", 
          "N"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"d2t", "=", 
         RowBox[{
          RowBox[{"dataToTaylorMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", "numPts"}], "]"}], "//", 
          "N"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"t2b", "=", 
         RowBox[{
          RowBox[{"taylorToBezierMatrix", "[", 
           RowBox[{
            RowBox[{"numPts", "-", "1"}], ",", " ", "numPts"}], "]"}], "//", 
          "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"funcChanged", " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{"numPts", " ", "\[NotEqual]", " ", "oldNumPts"}], ")"}]}], 
       ",", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "function", " ", "values", " ", "and", " ", "everything", " ", "that",
          " ", "depends", " ", "on", " ", "them", " ", "have", " ", 
         "changed"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"numPts", "\[Equal]", "oldNumPts"}], ",", 
          RowBox[{"msg", "=", 
           RowBox[{"msg", "<>", "\"\<\\nfunction changed\>\""}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"vals", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"func", "[", 
             RowBox[{"k", "/", 
              RowBox[{"(", 
               RowBox[{"numPts", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", 
              RowBox[{"numPts", "-", "1"}]}], "}"}]}], "]"}], "//", "N"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"msg", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nNew vals: \>\"", "<>", 
          RowBox[{"TextString", "[", "vals", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldNumPts", "=", "numPts"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"oldMatchName", " ", "\[NotEqual]", " ", "matchName"}], ",", 
       " ", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{
         "function", " ", "values", " ", "are", " ", "the", " ", "same"}], 
         ",", " ", 
         RowBox[{
         "but", " ", "everything", " ", "else", " ", "may", " ", "change"}]}],
         " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeTaylor", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{
         "msg", " ", "<>", " ", "\"\<\\nchanged from \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "oldMatchName", "]"}], " ", "<>", " ", 
          "\"\< to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "matchName", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"matchData", "=", 
         RowBox[{"(", 
          RowBox[{"matchName", "==", "\"\<data\>\""}], ")"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldMatchName", " ", "=", " ", "matchName"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"recomputeTaylor", " ", "||", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mpair", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "\[NotEqual]", 
          RowBox[{"oldMpair", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], ",", " ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "update", " ", "Taylor", " ", "coefficients", " ", "on", " ", "the", 
         " ", "left"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeCoefs", "=", " ", "True"}], ";", 
        "                                                        ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "trigger", " ", "recomputation", " ", "of", " ", "Bernstein", " ", 
          "coefficients"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"!", " ", "funcChanged"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"oldMpair", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"msg", "=", " ", 
              RowBox[{
              "msg", " ", "<>", "\"\<\\nchanged leftm from \>\"", " ", "<>", 
               " ", 
               RowBox[{"TextString", "[", "leftM", "]"}], "<>", 
               "\"\< to \>\"", "<>", 
               RowBox[{"TextString", "[", 
                RowBox[{"mpair", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}]}], "]"}], ";", " ",
            "\[IndentingNewLine]", 
           RowBox[{"leftM", "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldMpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d2tLeft", "=", 
            RowBox[{
             RowBox[{"dataToTaylorMatrix", "[", 
              RowBox[{
               RowBox[{"numPts", "-", "1"}], ",", "leftM"}], "]"}], "//", 
             "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"matchData", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alpha", "=", 
            RowBox[{"Flatten", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"d2tLeft", ".", 
                 RowBox[{"vals", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", "leftM"}], "]"}], "]"}]}], ")"}], ",", 
               RowBox[{"Table", "[", 
                RowBox[{"0", ",", 
                 RowBox[{"numPts", "-", "leftM"}]}], "]"}]}], "}"}], "]"}]}], 
           ";"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alpha", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isDiscrete", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"d2t", ".", "vals"}], "//", "N"}], 
              "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"SeriesCoefficient", "[", 
                  RowBox[{
                   RowBox[{"Refine", "[", 
                    RowBox[{"Series", "[", 
                    RowBox[{
                    RowBox[{"func", "[", "x", "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "0", ",", "numPts"}], "}"}]}], "]"}], 
                    "]"}], ",", 
                   RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numPts"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nnew alpha \>\"", "<>", 
          RowBox[{"TextString", "[", "alpha", "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"recomputeTaylor", " ", "||", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"mpair", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "\[NotEqual]", 
          RowBox[{"oldMpair", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], ",", "           ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "update", " ", "Taylor", " ", "coefficients", " ", "on", " ", "the", 
         " ", "right"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"recomputeCoefs", " ", "=", " ", "True"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"!", " ", "funcChanged"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"oldMpair", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "\[NotEqual]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"msg", "=", " ", 
              RowBox[{
              "msg", " ", "<>", "\"\<\\nchanged rightm from \>\"", " ", "<>", 
               " ", 
               RowBox[{"TextString", "[", "rightM", "]"}], " ", "<>", " ", 
               "\"\< to \>\"", " ", "<>", 
               RowBox[{"TextString", "[", 
                RowBox[{"numPts", "+", "1", "-", 
                 RowBox[{"mpair", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"rightM", "=", 
            RowBox[{"numPts", "+", "1", "-", 
             RowBox[{"mpair", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldMpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"mpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"d2tRight", "=", 
            RowBox[{
             RowBox[{"dataToTaylorMatrix", "[", 
              RowBox[{
               RowBox[{"numPts", "-", "1"}], ",", "rightM"}], "]"}], "//", 
             "N"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"matchData", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alphabar", "=", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"d2tRight", ".", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ";;", 
                    RowBox[{"-", "rightM"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ")"}], ",", 
                RowBox[{"Table", "[", 
                 RowBox[{"0", ",", 
                  RowBox[{"numPts", "-", "rightM"}]}], "]"}]}], "}"}], "]"}], 
             "//", "N"}]}], ";"}], "\[IndentingNewLine]", ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"alphabar", " ", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isDiscrete", ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"d2t", ".", 
                RowBox[{"Reverse", "[", "vals", "]"}]}], "//", "N"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Normal", "[", 
                 RowBox[{"SeriesCoefficient", "[", 
                  RowBox[{
                   RowBox[{"Refine", "[", 
                    RowBox[{
                    RowBox[{"Series", "[", 
                    RowBox[{
                    RowBox[{"func", "[", 
                    RowBox[{"1", "-", "y"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", "0", ",", "numPts"}], "}"}]}], "]"}], 
                    ",", 
                    RowBox[{"0", "<", "y", "<", "1"}]}], "]"}], ",", 
                   RowBox[{"k", "-", "1"}]}], "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "numPts"}], "}"}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nnew alpha bar \>\"", "<>", 
          RowBox[{"TextString", "[", "alphabar", "]"}]}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"funcChanged", " ", "=", " ", "False"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"recomputeCoefs", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"coefs", " ", "=", " ", 
         RowBox[{
          RowBox[{"buildBezierCoefs", "[", 
           RowBox[{
           "leftM", ",", "rightM", ",", "numPts", ",", " ", "t2b", ",", 
            "alpha", ",", "alphabar", ",", "d2b", ",", "vals", ",", 
            "matchData", ",", "isMonotonic", ",", "isDiscrete"}], "]"}], "//",
           "N"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"msg", "=", " ", 
         RowBox[{"msg", " ", "<>", "\"\<\\nNew Bezier coefficients: \>\"", "<>", 
          RowBox[{"TextString", "[", 
           RowBox[{"coefs", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"recomputeCoefs", " ", "=", " ", "False"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"plot1", "=", 
         RowBox[{"buildPlot1", "[", 
          RowBox[{
          "leftM", ",", "rightM", ",", "vals", ",", "func", ",", "alpha", ",",
            "alphabar"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"plot2", "=", 
         RowBox[{"buildPlot2", "[", 
          RowBox[{
          "leftM", ",", "rightM", ",", "vals", ",", "func", ",", " ", "coefs",
            ",", "show", ",", "matchData", ",", "isMonotonic", ",", "range"}],
           "]"}]}], ";"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "msg"}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2tLeft: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2tLeft", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2tRight: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2tRight", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nt2b: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "t2b", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2b: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2b", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nd2t: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "d2t", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nvals: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "vals", "]"}], "]"}], "]"}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nalpha: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "alpha", "]"}], "]"}], "]"}], "]"}]}],
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\nalphabar: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "alphabar", "]"}], "]"}], "]"}], 
           "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", "\"\<\\ncoefs: \>\""}], "]"}], ";", 
        RowBox[{"NotebookWrite", "[", 
         RowBox[{"messageNB", ",", 
          RowBox[{"Cell", "[", 
           RowBox[{"BoxData", "[", 
            RowBox[{"ToBoxes", "[", 
             RowBox[{"MatrixForm", "[", "coefs", "]"}], "]"}], "]"}], "]"}]}],
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"oldWhichPlot", "\[NotEqual]", "whichPlot"}], ",", "     ", 
       RowBox[{"(*", " ", 
        RowBox[{
        "trigger", " ", "update", " ", "of", " ", "the", " ", "func", " ", 
         "variable", " ", "itself", " ", "in", " ", "appropriate", " ", 
         "Switch", " ", "case", " ", "below"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"funcChanged", " ", "=", " ", "True"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"msg", " ", "=", " ", 
         RowBox[{
         "msg", " ", "<>", " ", "\"\<\\nchanged from \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "oldWhichPlot", "]"}], " ", "<>", " ", 
          "\"\< to \>\"", " ", "<>", " ", 
          RowBox[{"TextString", "[", "whichPlot", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"isMonotonic", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{"whichPlot", " ", "\[Equal]", "\"\<monotonic\>\""}], 
          ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"oldWhichPlot", " ", "=", " ", "whichPlot"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"funcName", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\"\<binomial\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", 
             "\"\<\\nchanged func to binomial from \>\"", " ", "<>", " ", 
             "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mBinom", " ", "=", "oldMBinom"}], ";", " ", 
           RowBox[{"numPts", "=", 
            RowBox[{"mBinom", "+", "1"}]}], ";", " ", "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", " ", "=", " ", "\"\<binomial\>\""}], ";", 
           " ", 
           RowBox[{"oldMatchName", "=", "\"\<data\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"pBinom", ",", "oldPBinom"}], "]"}], "!=", "pBinom"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{"msg", " ", "<>", " ", "\"\<\\nchanged p to \>\"", "<>", 
             RowBox[{"TextString", "[", "pBinom", "]"}], "<>", 
             "\"\< from \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "oldPBinom", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldPBinom", "=", "pBinom"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mBinom", ",", "oldMBinom"}], "]"}], "\[NotEqual]", 
           "mBinom"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{"msg", " ", "<>", " ", "\"\<\\nchanged m to \>\"", "<>", 
             RowBox[{"TextString", "[", "mBinom", "]"}], "<>", 
             "\"\< from \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "oldMBinom", "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numPts", "=", 
            RowBox[{"mBinom", "+", "1"}]}], ";", 
           RowBox[{"oldMBinom", "=", "mBinom"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"biases", "=", 
            RowBox[{"binom", "[", 
             RowBox[{"mBinom", ",", "pBinom"}], "]"}]}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"msg", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", "\"\<\\n (m,p) \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "mBinom", "]"}], " ", "<>", " ", 
             "\"\< \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "pBinom", "]"}], " ", "<>", " ", 
             "\"\< new biases \>\"", " ", "<>", " ", 
             RowBox[{"TextString", "[", "biases", "]"}]}]}], ";", 
           RowBox[{"func", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
              RowBox[{"discreteDensity", "[", "biases", "]"}], ",", 
              RowBox[{"discreteCumul", "[", "biases", "]"}]}], "]"}]}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\"\<network reliability\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", " ", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", "  ", "<>", " ", 
             "\"\<\\nchanged func to network reliability from \>\"", " ", "<>",
              " ", "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mReliable", " ", "=", "oldmReliable"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{
           "oldFuncName", " ", "=", " ", "\"\<network reliability\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<derivatives\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"lenReliable", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "bReliable"}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"lenReliable", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"bReliable", "=", 
            RowBox[{"lenReliable", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"lenReliable", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", "aReliable"}], "]"}], 
           "\[NotEqual]", 
           RowBox[{"lenReliable", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"aReliable", "=", 
            RowBox[{"lenReliable", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mReliable", ",", "oldmReliable"}], "]"}], "\[NotEqual]", 
           "mReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldmReliable", "=", "mReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"lorderReliable", ",", "oldLorder"}], "]"}], 
           "\[NotEqual]", "lorderReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
            RowBox[{"Switch", "[", 
             RowBox[{"lorderReliable", ",", "0", ",", "1", ",", 
              RowBox[{"mReliable", "+", "1"}], ",", "numPts", ",", "_", ",", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], 
                RowBox[{"(", "lorderReliable", ")"}]}]}]}], "]"}]}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"rorderReliable", ",", "oldRorder"}], "]"}], 
           "\[NotEqual]", "rorderReliable"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", " ", 
            RowBox[{"numPts", "+", "1", "-", 
             RowBox[{"Switch", "[", 
              RowBox[{"rorderReliable", ",", "0", ",", "1", ",", "n", ",", 
               RowBox[{"1", "+", 
                RowBox[{"bReliable", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"aReliable", "-", "1"}], ")"}], "^", 
                  "mReliable"}]}]}], ",", " ", "_", ",", 
               RowBox[{"mReliable", "+", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"Log2", "[", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"rorderReliable", "/", "bReliable"}], "]"}], "]"}],
                  "]"}]}]}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numPts", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"bReliable", " ", "+", " ", "2", "+", " ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], " ", "mReliable"}]}],
               ",", " ", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], " ", 
                "mReliable"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"func", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
              RowBox[{"toyDensity", "[", 
               RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}], 
               "]"}], ",", 
              RowBox[{"toyCumul", "[", 
               RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}], 
               "]"}]}], "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", "||", 
           RowBox[{"oldLorder", "\[NotEqual]", "lorderReliable"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"exact", " ", "up", " ", "to", " ", "order"}], " ", "=", 
            " ", 
            RowBox[{
             RowBox[{
             "smallest", " ", "number", " ", "of", " ", "edges", " ", "in", 
              " ", "any", " ", "union", " ", "of", " ", "lorder"}], "+", 
             RowBox[{"1", " ", "struts"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"mpair", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "=", " ", 
            RowBox[{"Switch", "[", 
             RowBox[{"lorderReliable", ",", "0", ",", "1", ",", 
              RowBox[{"mReliable", "+", "1"}], ",", "numPts", ",", "_", ",", 
              RowBox[{"bReliable", "+", "1", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"aReliable", "-", "1"}], ")"}], 
                RowBox[{"(", "lorderReliable", ")"}]}]}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"oldLorder", "=", "lorderReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", 
           RowBox[{"oldRorder", "\[NotEqual]", "rorderReliable"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"exact", " ", "up", " ", "to", " ", "order"}], " ", "=", 
            " ", 
            RowBox[{
             RowBox[{
             "smallest", " ", "number", " ", "of", " ", "edges", " ", "in", 
              " ", "any", " ", "union", " ", "of", " ", "rorder"}], "+", 
             RowBox[{"1", " ", "cuts"}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"oldRorder", "=", "rorderReliable"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<pole\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", " ", "\[IndentingNewLine]",
           " ", 
          RowBox[{
           RowBox[{"msg", " ", "=", " ", 
            RowBox[{
            "msg", " ", "<>", " ", "\"\<\\nchanged func to pole from \>\"", 
             " ", "<>", " ", "oldFuncName"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"mPole", " ", "=", "oldMPole"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"numPts", " ", "=", " ", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"mPole", "+", "1"}], ",", "mPole"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"ptPole", "=", "oldPtPole"}], ";", "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", " ", "=", " ", "\"\<pole\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<data\>\""}], ";", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"ptPole", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"oldPtPole", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[NotEqual]", 
           RowBox[{"ptPole", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldPtPole", "[", 
             RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
            RowBox[{"ptPole", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{
             RowBox[{"ptPole", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"oldPtPole", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "\[NotEqual]", 
           RowBox[{"ptPole", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"oldPtPole", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "=", 
            RowBox[{"ptPole", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ControlActive", "[", 
            RowBox[{"mPole", ",", "oldMPole"}], "]"}], "\[NotEqual]", 
           "mPole"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"numPts", "=", 
            RowBox[{"If", "[", 
             RowBox[{"isMonotonic", ",", 
              RowBox[{"mPole", "+", "1"}], ",", "mPole"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"oldMPole", "=", "mPole"}], ";"}]}], "\[IndentingNewLine]",
          "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{"func", "=", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"whichPlot", "\[Equal]", "\"\<normed\>\""}], ",", 
             RowBox[{"poleDensity", "[", 
              RowBox[{
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"poleCumul", "[", 
              RowBox[{
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"ptPole", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<Ising\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"oldFuncName", " ", "\[NotEqual]", " ", 
           RowBox[{"funcName", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"mIsing", " ", "=", " ", "oldMIsing"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"hFracIsing", "=", "oldHFracIsing"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"isDiscrete", "=", "False"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldFuncName", "=", "\"\<Ising\>\""}], ";", 
           RowBox[{"oldMatchName", "=", "\"\<derivatives\>\""}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"funcChanged", "=", "True"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", " ", 
           RowBox[{
            RowBox[{"ControlActive", "[", 
             RowBox[{"hFracIsing", ",", "oldHFracIsing"}], "]"}], 
            "\[NotEqual]", "hFracIsing"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldHFracIsing", "=", "hFracIsing"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"funcChanged", " ", "||", " ", 
           RowBox[{
            RowBox[{"ControlActive", "[", 
             RowBox[{"mIsing", ",", "oldMIsing"}], "]"}], "\[NotEqual]", 
            "mIsing"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"funcChanged", "=", "True"}], ";", "\[IndentingNewLine]", 
           RowBox[{"oldMIsing", "=", "mIsing"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{"funcChanged", ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"numPts", "=", 
            RowBox[{
             RowBox[{"Denominator", "[", 
              RowBox[{"Rationalize", "[", "hFracIsing", "]"}], "]"}], 
             "mIsing"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{"isMonotonic", ",", 
             RowBox[{"numPts", " ", "=", " ", 
              RowBox[{"numPts", "+", "1"}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "dosIsing", "]"}], "<", "mIsing"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"dosIsing", "=", 
              RowBox[{"isingDoS1D", "[", 
               RowBox[{"mIsing", ",", "dosIsing"}], "]"}]}]}], 
            RowBox[{"(*", 
             RowBox[{
             "density", " ", "of", " ", "states", " ", "rule", " ", "table"}],
              "*)"}], "\[IndentingNewLine]", "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"NotebookWrite", "[", 
            RowBox[{"messageNB", ",", "\"\<\\ndos: \>\""}], "]"}], ";", 
           RowBox[{"NotebookWrite", "[", 
            RowBox[{"messageNB", ",", 
             RowBox[{"Cell", "[", 
              RowBox[{"BoxData", "[", 
               RowBox[{"ToBoxes", "[", 
                RowBox[{"MatrixForm", "[", 
                 RowBox[{"dosIsing", "[", 
                  RowBox[{"[", "mIsing", "]"}], "]"}], "]"}], "]"}], "]"}], 
              "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"func", "=", 
            RowBox[{"ising1D", "[", 
             RowBox[{
              RowBox[{"dosIsing", "[", 
               RowBox[{"[", "mIsing", "]"}], "]"}], ",", "hFracIsing", ",", 
              "isMonotonic"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}],
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"EventHandler", "[", 
      RowBox[{
       RowBox[{"Dynamic", "@", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Flatten", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Show", "[", 
               RowBox[{"plot1", ",", 
                RowBox[{"AxesOrigin", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "range"}], "}"}]}], 
                ",", 
                RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{
                RowBox[{"selectPlots", "[", 
                 RowBox[{
                 "plot2", ",", "show", ",", "numPts", ",", "leftM", ",", 
                  "rightM"}], "]"}], ",", 
                RowBox[{"AxesOrigin", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0"}], "}"}]}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0", ",", "1"}], "}"}], ",", "range"}], "}"}]}], 
                ",", 
                RowBox[{"PlotRangeClipping", "\[Rule]", "True"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
                RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}]}], "}"}], 
            "]"}], "}"}], "\[IndentingNewLine]", ",", 
          RowBox[{"Spacings", "\[Rule]", "5"}]}], "]"}]}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\"\<MouseDown\>\"", "\[RuleDelayed]", 
          RowBox[{"(", 
           RowBox[{"range0", "=", "range"}], ")"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"\"\<MouseDragged\>\"", "\[RuleDelayed]", 
            RowBox[{"(*", "pan", "*)"}], 
            RowBox[{"(", 
             RowBox[{"range", "=", 
              RowBox[{"range0", "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"ref", "-", 
                  RowBox[{
                  "MousePosition", "[", "\"\<GraphicsImageScaled\>\"", 
                   "]"}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"range0", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{"range0", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ")"}]}]}]}], 
             ")"}]}], ","}], "*)"}], 
         RowBox[{"\"\<MouseClicked\>\"", "\[RuleDelayed]", 
          RowBox[{"Which", "[", 
           RowBox[{"(*", 
            RowBox[{"zoom", " ", "in"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"CurrentValue", "[", "\"\<AltKey\>\"", "]"}], ",", 
            RowBox[{"(*", 
             RowBox[{"Cmnd", " ", "on", " ", "OS", " ", "X"}], "*)"}], 
            RowBox[{"range", "=", 
             RowBox[{"range", " ", "fac"}]}], ",", 
            RowBox[{"(*", 
             RowBox[{"zoom", " ", "out"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"CurrentValue", "[", "\"\<ShiftKey\>\"", "]"}], ",", 
            RowBox[{"range", "=", 
             RowBox[{"range", "/", "fac"}]}]}], "]"}]}]}], "}"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Number of coefficients known: left \>\"", ",", " ", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"mpair", "[", 
         RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", " ", 
       RowBox[{"Control", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"mpair", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}], ",", "\"\<\>\""}], "}"}], ",", 
          "1", ",", "numPts", ",", "1", ",", 
          RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
          RowBox[{"Appearance", "\[Rule]", 
           RowBox[{"{", "\"\<Paired\>\"", "}"}]}], ",", 
          RowBox[{"Enabled", "\[Rule]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"funcName", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[NotEqual]", 
             "\"\<network reliability\>\""}], ")"}]}]}], "}"}], "]"}], ",", 
       RowBox[{"Dynamic", "[", 
        RowBox[{"numPts", "+", "1", "-", 
         RowBox[{"mpair", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ",", "\"\< right\>\""}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "uncomment", " ", "to", " ", "include", " ", "a", " ", "table", " ", 
        "of", " ", "condition", " ", "numbers", " ", "for", " ", "each", " ", 
        "matrix", " ", 
        RowBox[{"(", "expensive", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{",", 
        RowBox[{"Spacer", "[", "20", "]"}], ",", " ", 
        RowBox[{"Grid", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "\"\<Log10 of condition numbers of transformations: \>\"", ",", 
              "SpanFromLeft", ",", "SpanFromLeft"}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<\>\"", ",", "\"\<data to Taylor\>\"", ",", 
              "\"\<data to Bezier\>\"", ",", "\"\<Taylor to Bezier\>\""}], 
             "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<left\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", "d2tLeft", "]"}]}], "]"}], "]"}],
                "]"}], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"d2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"t2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{"\"\<right\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", "d2tRight", "]"}]}], "]"}], 
                "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"d2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "rightM"}], ",", 
                    RowBox[{"1", ";;", "rightM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Dynamic", "[", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"condNumber", "[", 
                   RowBox[{"t2b", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"1", ";;", "leftM"}], ",", 
                    RowBox[{"1", ";;", "leftM"}]}], "]"}], "]"}], "]"}]}], 
                 "]"}], "]"}], "]"}]}], "}"}]}], "\[IndentingNewLine]", "}"}],
           ",", 
          RowBox[{"Frame", "\[Rule]", "True"}]}], "]"}]}], "*)"}], "}"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "matchName", ",", "\"\<data\>\"", ",", 
        "\"\<Estimate function based on exact \>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<data\>\"", ",", "\"\<derivatives\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "whichPlot", ",", "\"\<normed\>\"", ",", 
        "\"\<Plot positive, normed function or its monotonic integral?\>\""}],
        "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\"\<normed\>\"", ",", "\"\<monotonic\>\""}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"show", ",", 
        RowBox[{"{", 
         RowBox[{"selections", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
        "\"\<select which interpolations to show:\>\""}], "}"}], ",", 
      "selections", ",", 
      RowBox[{"ControlType", "\[Rule]", "CheckboxBar"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"funcName", ",", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<binomial\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<binomial\>\"", "]"}]}], "]"}], ",", 
        "\"\<underlying function:\>\""}], "}"}], ",", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<binomial\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<binomial\>\"", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Tooltip", "[", 
           RowBox[{"\"\<ensemble\>\"", ",", 
            RowBox[{"ttips", "[", "\"\<ensemble\>\"", "]"}]}], "]"}], ","}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<pole\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<pole\>\"", "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<network reliability\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<network reliability\>\"", "]"}]}], "]"}],
         ",", "\[IndentingNewLine]", 
        RowBox[{"Tooltip", "[", 
         RowBox[{"\"\<Ising\>\"", ",", 
          RowBox[{"ttips", "[", "\"\<Ising\>\"", "]"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ControlType", "\[Rule]", "RadioButton"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
     RowBox[{"Switch", "[", 
      RowBox[{
       RowBox[{"funcName", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       "\"\<pole\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Spacer", "[", "50", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"ptPole", ",", "oldPtPole", ",", 
                    RowBox[{"Row", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Spacer", "[", "40", "]"}], ",", 
                    "\"\<position of pole in complex plane\>\""}], "}"}], 
                    "]"}]}], "}"}], ",", "0.01", ",", "1", ",", 
                  RowBox[{"ControlType", "\[Rule]", "Slider2D"}], ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "mPole", ",", "oldMPole", ",", 
                    "\"\<number of samples\>\""}], "}"}], ",", "2", ",", 
                  "100", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", 
                   RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}]}], 
              "}"}], "]"}], ",", "\"\<pole parameters\>\"", ",", "Top", ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "}"}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\"\<binomial\>\"", ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Spacer", "[", "150", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"pBinom", ",", "oldPBinom", ",", "\"\<p\>\""}], 
                   "}"}], ",", "0.01", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"mBinom", ",", "oldMBinom", ",", "\"\<N\>\""}], 
                   "}"}], ",", "2", ",", "50", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}]}], "}"}], "]"}], ",", 
            "\"\<binomial parameters\>\"", ",", "Top", ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "}"}], 
        "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\"\<network reliability\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Spacer", "[", "20", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{"Row", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Column", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "mReliable", ",", "oldmReliable", ",", 
                    "\"\<number of long parallel paths\>\""}], "}"}], ",", 
                    "2", ",", "20", ",", "1", ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], 
                 ",", 
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"lenReliable", ",", 
                    RowBox[{"{", 
                    RowBox[{"bReliable", ",", "aReliable"}], "}"}], ",", 
                    "\"\<length of short and long paths\>\""}], "}"}], ",", 
                    "2", ",", "20", ",", "1", ",", 
                    RowBox[{"ControlType", "\[Rule]", "IntervalSlider"}], ",", 
                    RowBox[{"MinIntervalSize", "\[Rule]", "1"}], ",", 
                    RowBox[{"Method", "\[Rule]", "\"\<Push\>\""}], ",", 
                    RowBox[{"Appearance", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Labeled\>\"", ",", "\"\<Paired\>\""}], 
                    "}"}]}]}], "}"}], "]"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{
                   "\"\<consider unions of \>\"", ",", "lorderReliable", ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "lorderReliable", ",", "oldLorder", ",", " ", 
                    "\"\< strut(s)\>\""}], "}"}], ",", "0", ",", 
                    RowBox[{"numStruts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], ",", "1"}], "}"}], "]"}]}], "}"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<consider unions of \>\"", ",", 
                    RowBox[{"Dynamic", "[", "rorderReliable", "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Control", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "rorderReliable", ",", "oldRorder", ",", " ", 
                    "\"\< cut(s)\>\""}], "}"}], ",", "0", ",", 
                    RowBox[{"Min", "[", 
                    RowBox[{"20", ",", 
                    RowBox[{"numCuts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}]}], "]"}], ",", "1"}], "}"}], "]"}]}], "}"}], 
                  "]"}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "40", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Column", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<toy network\>\"", ",", "\[IndentingNewLine]", 
                 RowBox[{"Dynamic", "[", 
                  RowBox[{"Magnify", "[", 
                   RowBox[{
                    RowBox[{"drawToy", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], ",", "2"}], "]"}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Row", "[", 
                  RowBox[{"{", 
                   RowBox[{"\"\<Total of \>\"", " ", "<>", 
                    RowBox[{"TextString", "[", 
                    RowBox[{"numStruts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], "]"}], "<>", "\"\< struts and \>\"", "<>", 
                    RowBox[{"TextString", "[", 
                    RowBox[{"numCuts", "[", 
                    RowBox[{"mReliable", ",", "aReliable", ",", "bReliable"}],
                     "]"}], "]"}], " ", "<>", " ", "\"\< cuts\>\""}], "}"}], 
                  "]"}]}], "}"}], "]"}]}], "}"}], "\[IndentingNewLine]", 
            "]"}], "]"}]}], "}"}], "\[IndentingNewLine]", "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\"\<Ising\>\"", ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Spacer", "[", "50", "]"}], ",", 
          RowBox[{"Panel", "[", 
           RowBox[{
            RowBox[{"Column", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                   "hFracIsing", ",", "oldHFracIsing", ",", 
                    "\"\<ratio of internal to total field J/(H+|J|)\>\""}], 
                   "}"}], ",", 
                  RowBox[{"-", "1"}], ",", "1", ",", "0.01", ",", 
                  RowBox[{"Appearance", "\[Rule]", 
                   RowBox[{"{", "\"\<Labeled\>\"", "}"}]}]}], "}"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                 RowBox[{"Control", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "isingRange", ",", "oldIsingRange", ",", 
                    "\"\<ferromagnetic\>\""}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<ferromagnetic\>\"", ",", "\"\<antiferromagnetic\>\"",
                     ",", "\"\<both\>\""}], "}"}]}], "}"}], "]"}], ","}], 
                "*)"}], "\[IndentingNewLine]", 
               RowBox[{"Control", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"mIsing", ",", "oldMIsing", ",", "\"\<N\>\""}], 
                   "}"}], ",", "1", ",", "50", ",", "1", ",", 
                  RowBox[{"Appearance", "\[Rule]", "\"\<Labeled\>\""}]}], 
                 "}"}], "]"}], ",", "\[IndentingNewLine]", 
               "\"\<x in plots is 1-exp[-2(H+|J|)/(kT)]\>\""}], "}"}], "]"}], 
            ",", "\[IndentingNewLine]", "\"\<Ising parameters\>\"", ",", 
            "Top", ",", 
            RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "]"}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Spacer", "[", "300", "]"}], ",", 
        "\"\<(shift-click scales plots down, ctrl-click scales up)\>\"", ",", 
        RowBox[{"Spacer", "[", "20", "]"}]}], "}"}], ",", 
      RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
    "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Current", " ", "state", " ", "of", " ", "common", " ", "parameters", 
      " ", "and", " ", "cached", " ", "values", " ", "to", " ", "detect", " ",
       "exactly", " ", "what", " ", "changed", " ", "to", " ", "minimize", 
      " ", "computation"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"numPts", ",", "5"}], "}"}], ",", "None"}], "}"}], ",", 
    "                         ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldNumPts", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mpair", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                 ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMpair", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "5"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"func", ",", 
        RowBox[{"Function", "[", 
         RowBox[{"x", ",", "1"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldFuncName", ",", "\"\<none\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", "       ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Function"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"isMonotonic", ",", " ", "False"}], "}"}], ",", "None"}], 
     "}"}], ",", "   ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldWhichPlot", ",", "\"\<normed\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Boolean"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"matchData", ",", " ", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "          ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMatchName", ",", "\"\<data\>\""}], "}"}], ",", "None"}], 
     "}"}], ",", "      ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"NB", ":", " ", 
       RowBox[{
       "cached", " ", "value", " ", "is", " ", "string", " ", "used", " ", 
        "in", " ", "Control"}]}], ",", " ", 
      RowBox[{"variable", " ", "is", " ", "Boolean"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"show", ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", " ", "None"}], "}"}], ",", 
    "                         ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"don", "'"}], "t", " ", "need", " ", "to", " ", "save", " ", 
      "state", " ", "for", " ", "this", " ", "one"}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "parameters", " ", "specific", " ", "to", " ", "particular", " ", 
      "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mBinom", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMBinom", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"pBinom", ",", "0.5"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldPBinom", ",", "0.5"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mPole", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMPole", ",", "4"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ptPole", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldPtPole", ",", 
        RowBox[{"{", 
         RowBox[{"0.5", ",", "0.5"}], "}"}]}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mReliable", ",", "2"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldmReliable", ",", "2"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lenReliable", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aReliable", ",", "3"}], "}"}], ",", " ", "None"}], "}"}], ",",
     " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"bReliable", ",", "2"}], "}"}], ",", " ", "None"}], "}"}], ",", 
    RowBox[{"(*", 
     RowBox[{"lenReliable", " ", "is", " ", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lorderReliable", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rorderReliable", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldLorder", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldRorder", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"mIsing", ",", " ", "4"}], "}"}], ",", " ", "None"}], "}"}], 
    ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldMIsing", ",", "3"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"hFracIsing", ",", " ", "0.25"}], "}"}], ",", "None"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"oldHFracIsing", ",", " ", "0.5"}], "}"}], ",", "None"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{"Not", " ", "visible", " ", "in", " ", "interface"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"isDiscrete", ",", " ", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "                            ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "is", " ", "the", " ", "current", " ", "function", " ", "inherently", 
      " ", "discrete", " ", "or", " ", 
      RowBox[{"continuous", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"leftM", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"rightM", ",", "1"}], "}"}], ",", "None"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{"mPair", " ", "is", " ", 
      RowBox[{"{", 
       RowBox[{"leftm", ",", " ", 
        RowBox[{"NumPts", "+", "1", " ", "-", " ", "rightM"}]}], "}"}]}], " ",
      "*)"}], "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "Matrices", " ", "transforming", " ", "\[IndentingNewLine]", "leftM", 
       " ", "data", " ", "to", " ", "leftM", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", "\[IndentingNewLine]", " ", 
      RowBox[{
      "rightM", " ", "data", " ", "to", " ", "rightM", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", "\[IndentingNewLine]", " ", 
      RowBox[{
      "numPts", " ", "data", " ", "to", " ", "numPts", " ", "Bernstein", " ", 
       "coefficients"}], ";", "\[IndentingNewLine]", " ", 
      RowBox[{
      "numPts", " ", "data", " ", "to", " ", "numPts", " ", "Taylor", " ", 
       "coefficients"}], ";", " ", 
      RowBox[{
      "and", "\[IndentingNewLine]", "numPts", " ", "Taylor", " ", 
       "coefficients", " ", "to", " ", "numPts", " ", "Bernstein", " ", 
       "coefficients"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2tLeft", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2tRight", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2b", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"d2t", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"t2b", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"vals", ",", 
        RowBox[{"Table", "[", 
         RowBox[{"1", ",", "4"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                                        ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "function", " ", "values", " ", "at", " ", "numPts", " ", "equally"}], 
      "-", 
      RowBox[{"spaced", " ", "x"}], "-", "values"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"alpha", ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"alphabar", ",", 
        RowBox[{"{", "1", "}"}]}], "}"}], ",", "None"}], "}"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "all", " ", "numPts", " ", "Taylor", " ", "series", " ", "coefficients",
        " ", "at", " ", "x"}], "=", 
      RowBox[{
       RowBox[{"0", " ", "and", " ", "x"}], "=", "1"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"coefs", ",", 
        RowBox[{"{", 
         RowBox[{"{", "1", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "                                                   ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"all", " ", "numPts", " ", "Bernstein", " ", "coefficients"}], 
      ",", " ", 
      RowBox[{
      "one", " ", "List", " ", "for", " ", "each", " ", "possible", " ", 
       "interpolation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "Temporary", " ", "variables", " ", "that", " ", "determine", " ", 
      "what", " ", "needs", " ", "to", " ", "be", " ", "recomputed"}], " ", 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"funcChanged", ",", "True"}], "}"}], ",", "None"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"recomputeCoefs", ",", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"recomputeTaylor", ",", "True"}], "}"}], ",", "None"}], "}"}], 
    ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{"Debugging", " ", "messages"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"msg", ",", "\"\<\>\""}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"eval", ",", "0"}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"some", " ", "pre"}], "-", 
      RowBox[{"computed", " ", "tables"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"biases", ",", 
        RowBox[{"binom", "[", 
         RowBox[{"4", ",", "0.5"}], "]"}]}], "}"}], ",", "None"}], "}"}], ",",
     "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "values", " ", "of", " ", "a", " ", "binomial", " ", "distribution"}], 
      ",", " ", 
      RowBox[{"so", " ", "I", " ", 
       RowBox[{"don", "'"}], "t", " ", "have", " ", "to", " ", "call", " ", 
       "Binomial", " ", "every", " ", "time"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dosIsing", ",", 
        RowBox[{"isingDoS1D", "[", 
         RowBox[{"4", ",", 
          RowBox[{"{", "}"}]}], "]"}]}], "}"}], ",", "None"}], "}"}], ",", 
    " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "exact", " ", "density", " ", "of", " ", "states", " ", "for", " ", "a",
        " ", "1"}], "-", 
      RowBox[{"D", " ", "Ising", " ", "model"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", "visualization", " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plot1", ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"plot2", ",", 
        RowBox[{"{", 
         RowBox[{"{", "}"}], "}"}]}], "}"}], ",", "None"}], "}"}], ",", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "cache", " ", "the", " ", "plots", " ", "including", " ", "all", " ", 
      "the", " ", "interpolations"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"range", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "0.1"}], ",", "1"}], "}"}]}], "}"}], ",", "None"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fac", ",", 
        RowBox[{"2", "/", "3"}]}], "}"}], ",", "None"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Initialization", "\[RuleDelayed]", " ", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"func", "=", 
        RowBox[{"discreteDensity", "[", "biases", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tmp", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dosIsing", "=", 
        RowBox[{"isingDoS1D", "[", 
         RowBox[{"4", ",", "tmp"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"TrackedSymbols", "\[RuleDelayed]", 
     RowBox[{"{", 
      RowBox[{
      "funcName", ",", "whichPlot", ",", "matchName", ",", "mpair", ",", 
       "numPts", ",", "show", ",", "func", ",", "pBinom", ",", "mPole", ",", 
       "mBinom", ",", 
       RowBox[{"(*", " ", 
        RowBox[{"mEnsemble", ",", " ", "numBins", ","}], " ", "*)"}], " ", 
       "mReliable", ",", "mIsing", ",", "ptPole", ",", "funcChanged", ",", 
       "lenReliable", ",", "lorderReliable", ",", "rorderReliable", ",", 
       "aReliable", ",", "bReliable", ",", "hFracIsing", ",", "range"}], 
      "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"SaveDefinitions", "\[Rule]", "True"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.738393920518058*^9, 3.738393948210528*^9}, 
   3.738394007897456*^9, {3.738394075270763*^9, 3.738394099902006*^9}, {
   3.738394144209393*^9, 3.7383942353855553`*^9}, 3.738394737004208*^9, {
   3.738394849602111*^9, 3.738394933669758*^9}, {3.738394969518997*^9, 
   3.738394995790154*^9}, {3.738395135102264*^9, 3.7383951965184507`*^9}, {
   3.738395274180026*^9, 3.7383953227225657`*^9}, {3.738395365048705*^9, 
   3.73839539423917*^9}, {3.738395430365643*^9, 3.738395442479225*^9}, {
   3.738402479138516*^9, 3.7384025141349287`*^9}, {3.738402573698937*^9, 
   3.7384026484459667`*^9}, {3.738402678869507*^9, 3.7384027892998543`*^9}, {
   3.738402819536195*^9, 3.7384032555788918`*^9}, {3.738403299780388*^9, 
   3.7384033167795057`*^9}, {3.738403350392351*^9, 3.7384035059370537`*^9}, {
   3.73840354792566*^9, 3.738403605488063*^9}, {3.738403664916753*^9, 
   3.738403677222744*^9}, {3.738403721419393*^9, 3.738403846138195*^9}, {
   3.7384038837838163`*^9, 3.738403886018195*^9}, {3.738403954075437*^9, 
   3.7384039542203827`*^9}, {3.738404135600189*^9, 3.7384042338901377`*^9}, {
   3.73840426860417*^9, 3.738404268997485*^9}, {3.738404413702075*^9, 
   3.7384044243547792`*^9}, {3.738404476811944*^9, 3.738404478161545*^9}, {
   3.73840453593426*^9, 3.73840455822473*^9}, {3.738404592114633*^9, 
   3.73840460272012*^9}, {3.738404639656123*^9, 3.738404648380766*^9}, {
   3.738404777786894*^9, 3.738404796668247*^9}, {3.7384048493393373`*^9, 
   3.7384048555400667`*^9}, {3.7384049632258377`*^9, 
   3.7384050020870743`*^9}, {3.738405042346532*^9, 3.738405050227776*^9}, {
   3.738405091150793*^9, 3.738405105025086*^9}, {3.738405139137663*^9, 
   3.738405139620138*^9}, {3.7384051849480267`*^9, 3.7384051900679398`*^9}, {
   3.738405311392645*^9, 3.738405312093958*^9}, 3.738405369756156*^9, {
   3.7384054073321123`*^9, 3.7384054136213503`*^9}, {3.738405451509445*^9, 
   3.738405461394862*^9}, {3.738405514115324*^9, 3.738405523117524*^9}, {
   3.738405650805464*^9, 3.7384057295565243`*^9}, 3.738405841126998*^9, {
   3.738405946796929*^9, 3.738405954257945*^9}, {3.738406027462982*^9, 
   3.738406084483848*^9}, {3.73840612380186*^9, 3.7384061417964363`*^9}, {
   3.738406178429982*^9, 3.7384062062805*^9}, {3.738406247794858*^9, 
   3.7384063470722847`*^9}, {3.7384063965767527`*^9, 3.738406424207717*^9}, {
   3.738406512698633*^9, 3.73840660290737*^9}, {3.738406633301406*^9, 
   3.73840666337291*^9}, 3.7384068295667133`*^9, {3.738407222623528*^9, 
   3.7384073401693087`*^9}, 3.738407370241708*^9, {3.7384074471177053`*^9, 
   3.738407451610314*^9}, {3.738407525766396*^9, 3.73840754429991*^9}, {
   3.738407655767576*^9, 3.738407778982389*^9}, {3.738407809739491*^9, 
   3.738407810456977*^9}, {3.738407865794011*^9, 3.7384078891206217`*^9}, {
   3.738408633269781*^9, 3.738408675424871*^9}, {3.738408752015463*^9, 
   3.738408818679058*^9}, {3.738408852625046*^9, 3.738408926650309*^9}, {
   3.738409069314024*^9, 3.7384091294899693`*^9}, {3.738409163083316*^9, 
   3.738409259263289*^9}, {3.738409393077001*^9, 3.738409396039784*^9}, {
   3.738409537196699*^9, 3.73840957598693*^9}, {3.738409652942072*^9, 
   3.7384097458094063`*^9}, {3.738409785249728*^9, 3.738409843606824*^9}, {
   3.7384098787739563`*^9, 3.738409879608303*^9}, {3.738409932129282*^9, 
   3.738409997698493*^9}, {3.738410062615913*^9, 3.738410104628665*^9}, {
   3.738410217516584*^9, 3.738410226334524*^9}, 3.738410278663039*^9, {
   3.738410368329689*^9, 3.7384104102040052`*^9}, {3.738410468116069*^9, 
   3.738410491478509*^9}, {3.7384105486601057`*^9, 3.738410601292083*^9}, {
   3.7384106372300797`*^9, 3.738410681985692*^9}, {3.738410749802992*^9, 
   3.7384108128645372`*^9}, {3.738410958116321*^9, 3.7384109853327713`*^9}, {
   3.738411037161559*^9, 3.738411042222527*^9}, {3.738411162460593*^9, 
   3.738411226883543*^9}, {3.738411322231944*^9, 3.7384113362662163`*^9}, {
   3.738411385477351*^9, 3.738411410535849*^9}, {3.738411456455303*^9, 
   3.7384114576385307`*^9}, 3.738411554690963*^9, {3.738411682823183*^9, 
   3.738411706708893*^9}, {3.738412642560034*^9, 3.73841265430777*^9}, {
   3.738412810716589*^9, 3.738412912876191*^9}, {3.738412943733728*^9, 
   3.7384129633914413`*^9}, {3.738413003314558*^9, 3.7384130475243673`*^9}, 
   3.738413173065028*^9, {3.738413278866436*^9, 3.738413310572729*^9}, {
   3.738413374377047*^9, 3.7384134448622932`*^9}, {3.738413491851619*^9, 
   3.738413492429778*^9}, {3.738413535700869*^9, 3.738413561629837*^9}, {
   3.738413600029949*^9, 3.7384136948629417`*^9}, {3.738413735579855*^9, 
   3.738413765467114*^9}, {3.738413804306488*^9, 3.738413821259377*^9}, {
   3.738413853745181*^9, 3.7384139154747887`*^9}, 3.738413945645226*^9, {
   3.73841406636329*^9, 3.738414067794088*^9}, {3.7384141334609747`*^9, 
   3.73841413456973*^9}, {3.7384142247406473`*^9, 3.738414224889114*^9}, {
   3.738414356164442*^9, 3.738414379870479*^9}, {3.738414414289407*^9, 
   3.7384144774106216`*^9}, 3.738414534441214*^9, {3.738414591826014*^9, 
   3.738414607285438*^9}, {3.738414665952416*^9, 3.7384146934944353`*^9}, {
   3.73841560977759*^9, 3.7384157191440907`*^9}, {3.73841583692409*^9, 
   3.738415856591886*^9}, {3.738415951508398*^9, 3.738416139463077*^9}, {
   3.738416186296935*^9, 3.738416188069662*^9}, 3.738416231095037*^9, {
   3.7384162638699408`*^9, 3.73841640847849*^9}, 3.7384164631579847`*^9, 
   3.7384165039578753`*^9, {3.7384165721579514`*^9, 3.738416583195717*^9}, {
   3.7384166987492332`*^9, 3.738416704895255*^9}, {3.738416739927155*^9, 
   3.738416829357044*^9}, {3.738416871808425*^9, 3.738417034932252*^9}, {
   3.738417100883584*^9, 3.7384171798604116`*^9}, {3.738417263036433*^9, 
   3.738417263275158*^9}, {3.7384173424139433`*^9, 3.738417342567102*^9}, {
   3.738417546085198*^9, 3.738417548355446*^9}, {3.7384176078115597`*^9, 
   3.738417609836141*^9}, 3.738417697071864*^9, {3.738422180351613*^9, 
   3.738422183585075*^9}, {3.738422214170108*^9, 3.7384223592694798`*^9}, {
   3.7384224205528307`*^9, 3.73842243529918*^9}, {3.7384238742096148`*^9, 
   3.738423911337962*^9}, {3.738425879230006*^9, 3.7384259804896727`*^9}, {
   3.738426024883731*^9, 3.738426069314196*^9}, {3.7384261274152*^9, 
   3.738426132026361*^9}, {3.738426223045022*^9, 3.7384262870579033`*^9}, {
   3.7384264442756567`*^9, 3.738426459461586*^9}, {3.738426492339243*^9, 
   3.738426535901862*^9}, {3.738426574522691*^9, 3.738426607710289*^9}, {
   3.738426657865937*^9, 3.73842666542645*^9}, {3.738426782198936*^9, 
   3.738426783344432*^9}, {3.738426839567546*^9, 3.738426880396579*^9}, {
   3.738426946368696*^9, 3.738426948405961*^9}, {3.7384269948626947`*^9, 
   3.738426997015975*^9}, {3.7384271613925123`*^9, 3.738427199744048*^9}, {
   3.738427239233193*^9, 3.738427254715766*^9}, 3.738427335609646*^9, {
   3.738427527117495*^9, 3.73842752827258*^9}, {3.738427606284389*^9, 
   3.7384276123122253`*^9}, {3.738427759222746*^9, 3.7384277639303837`*^9}, {
   3.738427812828279*^9, 3.738427813944092*^9}, {3.7384313320590553`*^9, 
   3.738431369396173*^9}, {3.738431416462831*^9, 3.738431421277596*^9}, {
   3.738431478962708*^9, 3.7384314812789288`*^9}, {3.73843154551921*^9, 
   3.738431567809299*^9}, {3.738431943474498*^9, 3.7384323226245823`*^9}, {
   3.7384323788254957`*^9, 3.7384323952120323`*^9}, 3.7384324362928877`*^9, {
   3.738432484879917*^9, 3.738432526896204*^9}, {3.738432565376668*^9, 
   3.738432667669455*^9}, {3.738432733527947*^9, 3.738432734393485*^9}, {
   3.738432840042963*^9, 3.738432840374942*^9}, {3.738432878814886*^9, 
   3.7384328863399477`*^9}, {3.738432941229113*^9, 3.738432957300559*^9}, {
   3.738451797880897*^9, 3.738451908549374*^9}, {3.7384519635484056`*^9, 
   3.7384520030615463`*^9}, {3.738452199227064*^9, 3.738452309466371*^9}, 
   3.7384523713270073`*^9, {3.73845245388698*^9, 3.738452467410321*^9}, {
   3.738452511023596*^9, 3.73845261608918*^9}, {3.738452697023785*^9, 
   3.738452738614799*^9}, {3.73845282270149*^9, 3.738452868591297*^9}, {
   3.738452912107636*^9, 3.738452913107452*^9}, {3.738453011228602*^9, 
   3.738453021916107*^9}, {3.738453120002236*^9, 3.7384531575426817`*^9}, 
   3.738453212084485*^9, {3.738453249754706*^9, 3.738453250752853*^9}, {
   3.738453293554914*^9, 3.738453311395249*^9}, {3.738453370789806*^9, 
   3.738453371293312*^9}, {3.738453418208577*^9, 3.738453418942794*^9}, {
   3.738453484600039*^9, 3.738453583256612*^9}, {3.738453642919828*^9, 
   3.738453659063342*^9}, {3.738453690534418*^9, 3.738453709028612*^9}, {
   3.7384537466803703`*^9, 3.738453819157939*^9}, {3.738453901710284*^9, 
   3.7384539171889133`*^9}, {3.738453992444309*^9, 3.7384539954780397`*^9}, {
   3.738454198804967*^9, 3.738454206698786*^9}, {3.7384543448525763`*^9, 
   3.7384543734710617`*^9}, {3.738454510788723*^9, 3.73845452744112*^9}, {
   3.738454688347486*^9, 3.738454692607045*^9}, 3.738454941188923*^9, {
   3.738455089125272*^9, 3.738455096312545*^9}, {3.7384551463487577`*^9, 
   3.7384551507307253`*^9}, {3.738455229040916*^9, 3.738455269202651*^9}, {
   3.7384776754494953`*^9, 3.738477688497273*^9}, {3.738477796922585*^9, 
   3.738477797173972*^9}, {3.738477845132038*^9, 3.738477845346788*^9}, {
   3.7384782504848337`*^9, 3.7384782531535597`*^9}, {3.738478426062964*^9, 
   3.738478426226398*^9}, {3.738478469947493*^9, 3.738478550206373*^9}, {
   3.738478595638919*^9, 3.738478598351486*^9}, {3.7384786446012707`*^9, 
   3.738478663139735*^9}, {3.738478725538097*^9, 3.738478725644021*^9}, {
   3.7384788358460712`*^9, 3.738478839152225*^9}, {3.738478871370516*^9, 
   3.738478874268433*^9}, {3.7384789288625097`*^9, 3.7384789411369057`*^9}, {
   3.738478992025208*^9, 3.738478995960455*^9}, {3.738479035950376*^9, 
   3.738479039046558*^9}, {3.738479112206423*^9, 3.738479116539459*^9}, {
   3.738479302054319*^9, 3.7384793023455067`*^9}, {3.738479406126381*^9, 
   3.7384795013024178`*^9}, {3.738479549617778*^9, 3.7384795661458883`*^9}, {
   3.738479611813922*^9, 3.738479632904668*^9}, {3.738479805261047*^9, 
   3.738479850501856*^9}, {3.738479882189168*^9, 3.738479895817441*^9}, {
   3.738480932896592*^9, 3.73848095818834*^9}, {3.73848099473905*^9, 
   3.738481012531817*^9}, {3.7384810756867857`*^9, 3.738481084651853*^9}, {
   3.7384840263795*^9, 3.738484070158834*^9}, {3.7384841013899937`*^9, 
   3.738484275357253*^9}, {3.738484461585033*^9, 3.738484500481049*^9}, {
   3.738484595096655*^9, 3.73848460097431*^9}, {3.738486652134901*^9, 
   3.738486703979101*^9}, {3.738486834863269*^9, 3.738486911416848*^9}, {
   3.7384869581288033`*^9, 3.7384869930759363`*^9}, {3.738487025239409*^9, 
   3.738487129857512*^9}, {3.738487174981251*^9, 3.7384873204700937`*^9}, {
   3.7384873552418747`*^9, 3.738487364843025*^9}, {3.7384875175872917`*^9, 
   3.7384875248909597`*^9}, 3.7384875670394163`*^9, {3.7384876105474987`*^9, 
   3.73848762113701*^9}, {3.738487666620626*^9, 3.738487706097748*^9}, {
   3.738487737978443*^9, 3.738487830137911*^9}, {3.738487913070405*^9, 
   3.738487932225005*^9}, {3.738488664180875*^9, 3.7384886656087418`*^9}, {
   3.738488802749132*^9, 3.738488803885852*^9}, {3.738489472480747*^9, 
   3.738489478849229*^9}, {3.738489965296183*^9, 3.738490007068256*^9}, {
   3.7384900393739233`*^9, 3.738490054567491*^9}, {3.738519327290003*^9, 
   3.7385193617490053`*^9}, {3.73853214336554*^9, 3.7385321438547792`*^9}, {
   3.738532176156818*^9, 3.7385321801485453`*^9}, {3.7385339523082857`*^9, 
   3.738533975312323*^9}, {3.738607277354204*^9, 3.738607280726183*^9}, {
   3.738607405638122*^9, 3.738607413925082*^9}, {3.738607444319923*^9, 
   3.738607515166926*^9}, 3.738607752567379*^9, {3.7386078634390297`*^9, 
   3.738607869677635*^9}, 3.73860808167908*^9, {3.738608194452281*^9, 
   3.738608200375949*^9}, {3.738608389257429*^9, 3.738608391870439*^9}, {
   3.738608480027628*^9, 3.738608484456995*^9}, {3.738608621679859*^9, 
   3.7386086622911587`*^9}, {3.738608716708396*^9, 3.7386087719532337`*^9}, {
   3.738608842934346*^9, 3.738608857174502*^9}, {3.7386088938665648`*^9, 
   3.7386088958789043`*^9}, {3.738610235847197*^9, 3.7386102391803703`*^9}, {
   3.738611386261561*^9, 3.738611439233672*^9}, {3.738611561305614*^9, 
   3.7386116289918747`*^9}, 3.738615151900031*^9, 3.738615186104361*^9, {
   3.7386153136241827`*^9, 3.7386153562298107`*^9}, {3.738615424633582*^9, 
   3.73861543458499*^9}, 3.738615604361781*^9, {3.738615729730483*^9, 
   3.738615739147355*^9}, {3.7386158639404697`*^9, 3.7386158676049137`*^9}, {
   3.738615925224798*^9, 3.7386159362728863`*^9}, {3.738616005461708*^9, 
   3.7386160293700237`*^9}, {3.7386160782879047`*^9, 
   3.7386160814481153`*^9}, {3.738616195925934*^9, 3.738616289013256*^9}, {
   3.738616372870098*^9, 3.7386166146967163`*^9}, {3.738616670325205*^9, 
   3.738616737060443*^9}, {3.738616768336899*^9, 3.738616937907*^9}, {
   3.738616970980505*^9, 3.73861702381604*^9}, {3.7386170771493473`*^9, 
   3.73861716643423*^9}, {3.7386173700695887`*^9, 3.738617372485165*^9}, {
   3.738617479119038*^9, 3.738617554732418*^9}, 3.73861762733141*^9, {
   3.7386176664264793`*^9, 3.7386177664255457`*^9}, {3.738617814760077*^9, 
   3.73861801970765*^9}, {3.738618075018063*^9, 3.738618256386119*^9}, {
   3.738618322691862*^9, 3.738618353191609*^9}, {3.738618429131723*^9, 
   3.738618462736312*^9}, {3.738618523388382*^9, 3.7386185733806877`*^9}, {
   3.738618605263248*^9, 3.7386186298886757`*^9}, {3.738741638993992*^9, 
   3.738741647959371*^9}, {3.738741807353346*^9, 3.738741840171764*^9}, {
   3.738741880351491*^9, 3.738741898699026*^9}, {3.738741941127293*^9, 
   3.738741943664093*^9}, 3.738742040590733*^9, 3.7387421070973682`*^9, {
   3.7387421470248127`*^9, 3.7387421474285994`*^9}, {3.738742257581174*^9, 
   3.738742263946693*^9}, {3.738742328025968*^9, 3.7387423284971952`*^9}, {
   3.738742498354747*^9, 3.738742516523333*^9}, {3.738742643916554*^9, 
   3.738742644566064*^9}, {3.7387426902928953`*^9, 3.738742712488504*^9}, {
   3.738742995522382*^9, 3.7387430985147743`*^9}, {3.738743194855735*^9, 
   3.7387431954780827`*^9}, {3.7387432312681293`*^9, 3.738743259632053*^9}, {
   3.738743307216187*^9, 3.7387433222541237`*^9}, {3.7387433688930817`*^9, 
   3.738743374365366*^9}, {3.7387434080260973`*^9, 3.7387434209134417`*^9}, {
   3.738743488214871*^9, 3.738743492325246*^9}, {3.738743540561079*^9, 
   3.7387435991020737`*^9}, {3.738743639096537*^9, 3.738743643141548*^9}, {
   3.738749093491644*^9, 3.738749108437558*^9}, {3.7387491586354933`*^9, 
   3.73874917189925*^9}, {3.738749384036838*^9, 3.7387494222280617`*^9}, {
   3.73874950856066*^9, 3.7387495232089663`*^9}, {3.738749588990992*^9, 
   3.738749657776081*^9}, {3.738749724163274*^9, 3.7387497356906652`*^9}, 
   3.738749821549478*^9, {3.738749919910469*^9, 3.738749922923296*^9}, {
   3.738749955933284*^9, 3.738749959292552*^9}, {3.7387501451355257`*^9, 
   3.73875017124677*^9}, {3.738750680996821*^9, 3.7387506901238194`*^9}, 
   3.738750733779086*^9, {3.738750789844202*^9, 3.738750823174122*^9}, {
   3.7387508601660633`*^9, 3.738750862187642*^9}, 3.7387509815233183`*^9, {
   3.73875102334813*^9, 3.738751023739702*^9}, {3.73875107206986*^9, 
   3.738751073232809*^9}, {3.738751242106234*^9, 3.73875125178156*^9}, {
   3.738751327598448*^9, 3.738751328241392*^9}, {3.738751375158022*^9, 
   3.73875137627941*^9}, {3.738751511532819*^9, 3.738751511685553*^9}, {
   3.738751545565668*^9, 3.738751572509263*^9}, 3.73875168558799*^9, {
   3.738751716175538*^9, 3.738751799313065*^9}, {3.7387623504129744`*^9, 
   3.738762359458847*^9}, {3.7387624030408087`*^9, 3.738762404613221*^9}, {
   3.738762442701817*^9, 3.738762473387034*^9}, {3.738764422497333*^9, 
   3.7387645528559437`*^9}, {3.738764590429123*^9, 3.7387646382923193`*^9}, {
   3.7387647615165443`*^9, 3.7387648104819117`*^9}, {3.738764855076174*^9, 
   3.7387648776311502`*^9}, {3.738764952882194*^9, 3.738764975644174*^9}, {
   3.738765023565857*^9, 3.738765066008937*^9}, {3.738765119199271*^9, 
   3.738765175825122*^9}, 3.738765219585937*^9, {3.7387652756749287`*^9, 
   3.738765512311966*^9}, {3.738765568825347*^9, 3.738765591960919*^9}, {
   3.738765678994137*^9, 3.73876568641302*^9}, {3.7387657570523*^9, 
   3.738765768278811*^9}, {3.738765911282323*^9, 3.7387659230981493`*^9}, {
   3.738765995659019*^9, 3.738766002155998*^9}, {3.7387660482431793`*^9, 
   3.738766078480517*^9}, {3.738766134882597*^9, 3.738766182621971*^9}, {
   3.738766214958363*^9, 3.738766224289041*^9}, 3.738766403421681*^9, {
   3.738766474688467*^9, 3.738766483195841*^9}, {3.738766522286285*^9, 
   3.738766535937895*^9}, {3.7387665959969883`*^9, 3.738766610870261*^9}, {
   3.738766926792172*^9, 3.738766985774934*^9}, 3.738767175772821*^9, 
   3.738767385672844*^9, {3.7387674785572443`*^9, 3.738767503525914*^9}, 
   3.7387675340325127`*^9, {3.7387675914324408`*^9, 3.73876759233594*^9}, {
   3.738767633504578*^9, 3.738767675265744*^9}, 3.738767708244155*^9, {
   3.738767745595388*^9, 3.738767783236541*^9}, 3.7387678419456472`*^9, {
   3.738767929037356*^9, 3.738767955651713*^9}, {3.738768078628813*^9, 
   3.738768085948893*^9}, {3.738768154422385*^9, 3.738768174162594*^9}, {
   3.73876829022138*^9, 3.738768297065364*^9}, {3.738768372585956*^9, 
   3.7387683921186323`*^9}, 3.738768431335752*^9, {3.738768507975168*^9, 
   3.738768511463605*^9}, {3.738768651090515*^9, 3.7387686545866747`*^9}, 
   3.7387687860917683`*^9, 3.7387688195877657`*^9, {3.738768897162836*^9, 
   3.7387689003116503`*^9}, {3.7387689367429237`*^9, 3.73876895383813*^9}, {
   3.738769215263215*^9, 3.738769218797434*^9}, {3.738769360195347*^9, 
   3.738769416638832*^9}, {3.7387694749197817`*^9, 3.738769475363442*^9}, {
   3.738769636132937*^9, 3.73876963773948*^9}, {3.738769831544426*^9, 
   3.7387698326388893`*^9}, {3.738770063768667*^9, 3.738770121241465*^9}, {
   3.738770156538609*^9, 3.738770183452572*^9}, {3.738770359577539*^9, 
   3.738770359734214*^9}, {3.7387706554573097`*^9, 3.738770686862585*^9}, {
   3.7387707275441513`*^9, 3.738770739478737*^9}, {3.7387708108315*^9, 
   3.7387708257255917`*^9}, {3.738770937477149*^9, 3.7387709448489923`*^9}, {
   3.7387713654504766`*^9, 3.738771370226837*^9}, {3.738771578680173*^9, 
   3.738771608258882*^9}, {3.738771752280249*^9, 3.738771828908629*^9}, {
   3.7387721430295*^9, 3.738772175031931*^9}, {3.738772300920906*^9, 
   3.7387723187704067`*^9}, 3.73877244256551*^9, {3.7387724836813383`*^9, 
   3.738772508709833*^9}, 3.738772583813628*^9, {3.738791954362837*^9, 
   3.738792032736804*^9}, {3.738792396971574*^9, 3.73879239884625*^9}, {
   3.738792454710219*^9, 3.738792543065591*^9}, {3.738792577891651*^9, 
   3.738792588712141*^9}, {3.738792643106104*^9, 3.738792649158922*^9}, {
   3.7387927441970263`*^9, 3.738792748732596*^9}, {3.738793283662642*^9, 
   3.7387932960769587`*^9}, {3.738793723590908*^9, 3.738793724227602*^9}, {
   3.738793877631813*^9, 3.738793889731263*^9}, {3.7387946289618807`*^9, 
   3.738794647775107*^9}, {3.738795065415328*^9, 3.738795071830431*^9}, 
   3.738795205296348*^9, {3.738829485497353*^9, 3.738829503246881*^9}, {
   3.73882978762918*^9, 3.738829821400423*^9}, 3.738829982821677*^9, {
   3.738830039038262*^9, 3.738830039202095*^9}, {3.738830236234009*^9, 
   3.738830242455716*^9}, 3.738830309701069*^9, {3.7388305473973217`*^9, 
   3.738830643822131*^9}, {3.738830741332889*^9, 3.738830746341839*^9}, {
   3.738830831452565*^9, 3.738830831970916*^9}, {3.7388309425993643`*^9, 
   3.738830958047255*^9}, {3.738831033602034*^9, 3.73883107235741*^9}, {
   3.738831137721637*^9, 3.738831141317719*^9}, {3.7388312075806723`*^9, 
   3.738831212762022*^9}, {3.738831256837509*^9, 3.738831346972026*^9}, {
   3.738831491160335*^9, 3.738831509729311*^9}, {3.7388315521910954`*^9, 
   3.73883156026248*^9}, {3.7388317016924257`*^9, 3.73883172584159*^9}, {
   3.7388319197176523`*^9, 3.738831922156641*^9}, {3.738846441228586*^9, 
   3.738846480705472*^9}, {3.738846553619742*^9, 3.738846558273345*^9}, {
   3.738846597580432*^9, 3.738846611445265*^9}, {3.7388466480726433`*^9, 
   3.738846660204591*^9}, {3.738875290537776*^9, 3.7388754135684137`*^9}, {
   3.738875445807912*^9, 3.738875485111691*^9}, {3.738875651506669*^9, 
   3.73887569146876*^9}, {3.7388757791878*^9, 3.738875799969309*^9}, {
   3.738876063897723*^9, 3.738876064678912*^9}, {3.73887617225807*^9, 
   3.73887618234341*^9}, {3.738876222085025*^9, 3.738876225922727*^9}, {
   3.738876262510729*^9, 3.738876274588832*^9}, {3.73887682547302*^9, 
   3.738876957159829*^9}, {3.738877002384069*^9, 3.738877049594859*^9}, {
   3.73891346801973*^9, 3.738913536942829*^9}, {3.738913600724674*^9, 
   3.738913612522814*^9}, {3.738913684763611*^9, 3.738913699074482*^9}, {
   3.7389138628921003`*^9, 3.738913871601902*^9}, {3.738914064945086*^9, 
   3.738914070906419*^9}, {3.7389143646887217`*^9, 3.738914367637288*^9}, {
   3.738914406511488*^9, 3.7389144067109756`*^9}, {3.7389144401314783`*^9, 
   3.738914445088682*^9}, {3.738914477370779*^9, 3.7389145737311773`*^9}, {
   3.7389146648203173`*^9, 3.738914666528111*^9}, {3.73891473083814*^9, 
   3.7389147318444147`*^9}, {3.738914778459511*^9, 3.738914793820608*^9}, {
   3.73891483558344*^9, 3.738914867524173*^9}, {3.738915071096382*^9, 
   3.738915095705462*^9}, {3.73891538692457*^9, 3.7389154341274567`*^9}, {
   3.738915503411091*^9, 3.73891564261982*^9}, {3.738915796397036*^9, 
   3.738915827489193*^9}, {3.7389160113065987`*^9, 3.738916090063417*^9}, {
   3.738916136558572*^9, 3.738916154687324*^9}, {3.738916209597468*^9, 
   3.738916319390355*^9}, {3.738916422560835*^9, 3.738916485569109*^9}, 
   3.7389166201167593`*^9, {3.738916919640758*^9, 3.738916964294869*^9}, {
   3.7389170067454557`*^9, 3.738917025904704*^9}, {3.738917119709693*^9, 
   3.738917158749345*^9}, {3.7389264425585337`*^9, 3.738926449606715*^9}, {
   3.738926504333744*^9, 3.738926516256175*^9}, {3.738926718547559*^9, 
   3.738926739384549*^9}, {3.738926781697081*^9, 3.7389267854311857`*^9}, {
   3.738927127155895*^9, 3.7389272208430023`*^9}, {3.738927286629673*^9, 
   3.7389272950485697`*^9}, {3.7389273362960978`*^9, 3.738927395236786*^9}, {
   3.73893233871408*^9, 3.738932404215469*^9}, {3.738932469699033*^9, 
   3.73893253896218*^9}, {3.7389325964091578`*^9, 3.7389326177737494`*^9}, {
   3.738932658587242*^9, 3.7389326613650227`*^9}, {3.738932742250753*^9, 
   3.7389328343841743`*^9}, {3.738932916905102*^9, 3.73893292167378*^9}, {
   3.73893316912691*^9, 3.738933173142583*^9}, 3.73893324949617*^9, {
   3.7389332894620113`*^9, 3.738933302504477*^9}, {3.738933373644425*^9, 
   3.7389333908079033`*^9}, {3.738933841670547*^9, 3.738933842091681*^9}, {
   3.7389339198744926`*^9, 3.738934009109042*^9}, {3.738934416697815*^9, 
   3.738934452105788*^9}, {3.738934552694956*^9, 3.738934558679364*^9}, {
   3.738934759087006*^9, 3.738934759674239*^9}, {3.738934888035878*^9, 
   3.738934896264423*^9}, {3.738935077860718*^9, 3.738935081676704*^9}, {
   3.738935225627809*^9, 3.7389353766796827`*^9}, {3.7389356056459084`*^9, 
   3.738935626592306*^9}, {3.738935911176392*^9, 3.7389359234759083`*^9}, {
   3.738940694086644*^9, 3.7389407502304296`*^9}, {3.738940788838798*^9, 
   3.738940789059342*^9}, 3.7389408882777243`*^9, {3.738942167441038*^9, 
   3.738942328514233*^9}, {3.738942401918082*^9, 3.7389424578990088`*^9}, {
   3.7389426059911613`*^9, 3.738942634238789*^9}, {3.7389431608557053`*^9, 
   3.7389431894039087`*^9}, {3.7389432574995604`*^9, 
   3.7389432876220837`*^9}, {3.738944114788392*^9, 3.738944125212673*^9}, 
   3.73894439419943*^9, 3.738944434189828*^9, {3.7389447784677277`*^9, 
   3.738944970193748*^9}, {3.738945000817965*^9, 3.738945016367292*^9}, {
   3.738951464565645*^9, 3.738951512504287*^9}, {3.7389515442543173`*^9, 
   3.7389515465392513`*^9}, 3.738951593128862*^9, {3.738951646374352*^9, 
   3.738951715546365*^9}, {3.7389517742885237`*^9, 3.738951787099111*^9}, {
   3.7389518592902822`*^9, 3.738951859859028*^9}, 3.7389519122355537`*^9, {
   3.738964445535211*^9, 3.738964468661585*^9}, {3.738964636257964*^9, 
   3.738964645569668*^9}, {3.738964702881341*^9, 3.7389647110002317`*^9}, {
   3.7389647874017763`*^9, 3.7389647905783253`*^9}, {3.738964919600309*^9, 
   3.738964929592999*^9}, 3.7390100883332243`*^9, {3.7390102195793333`*^9, 
   3.739010315453779*^9}, {3.739010605828866*^9, 3.739010612369484*^9}, {
   3.7390107039778957`*^9, 3.739010726188929*^9}, {3.739010914881133*^9, 
   3.739010918965355*^9}, {3.739011002984357*^9, 3.739011173734325*^9}, {
   3.739011242459186*^9, 3.739011287236137*^9}, {3.739011324308804*^9, 
   3.7390113765110483`*^9}, {3.739011418534902*^9, 3.739011465647213*^9}, 
   3.7390115015018377`*^9, {3.7390115599096203`*^9, 3.739011560063078*^9}, {
   3.73901165190128*^9, 3.739011725121222*^9}, {3.7390123183150177`*^9, 
   3.7390123212240973`*^9}, {3.739012425501706*^9, 3.7390124399255543`*^9}, {
   3.739012552373519*^9, 3.7390125922427197`*^9}, {3.739012918643611*^9, 
   3.7390129234715014`*^9}, {3.739013594952523*^9, 3.739013617225202*^9}, {
   3.739013655693543*^9, 3.739013663833468*^9}, {3.73901370615388*^9, 
   3.7390138092902937`*^9}, 3.739013874287963*^9, {3.7390139050630627`*^9, 
   3.7390139351520233`*^9}, {3.73901396890913*^9, 3.7390139950601254`*^9}, {
   3.7390141125823402`*^9, 3.7390141165341454`*^9}, 3.739014146791276*^9, {
   3.7390141824507093`*^9, 3.73901426573427*^9}, {3.7390143956498957`*^9, 
   3.739014397787265*^9}, {3.7390144979302483`*^9, 3.739014508506432*^9}, {
   3.7390145671320868`*^9, 3.739014588251582*^9}, {3.7390146276846*^9, 
   3.7390146473049088`*^9}, {3.7390146983944693`*^9, 3.739014705178899*^9}, {
   3.7390147737358932`*^9, 3.7390147756164083`*^9}, {3.739014850635016*^9, 
   3.739014876956098*^9}, {3.739014911902268*^9, 3.739014913000922*^9}, {
   3.739015048975528*^9, 3.7390150777807293`*^9}, {3.739015108061167*^9, 
   3.7390151357071247`*^9}, {3.739015209887045*^9, 3.7390152178634243`*^9}, {
   3.739015269296988*^9, 3.7390152752259693`*^9}, {3.73901533317313*^9, 
   3.7390153358183537`*^9}, {3.7390153918690023`*^9, 3.739015393665852*^9}, {
   3.7390155237927237`*^9, 3.739015551207609*^9}, {3.739015669454276*^9, 
   3.739015672189035*^9}, {3.739015801499723*^9, 3.7390158145341873`*^9}, {
   3.739015883119729*^9, 3.73901591635712*^9}, {3.739016257044525*^9, 
   3.739016266192946*^9}, {3.739016426324554*^9, 3.7390164326358843`*^9}, {
   3.739016861020165*^9, 3.739016915495673*^9}, {3.739016979912292*^9, 
   3.739017001655908*^9}, {3.739017031992682*^9, 3.739017070196719*^9}, {
   3.739017195126009*^9, 3.739017212903184*^9}, 3.739017256181616*^9, {
   3.739017595567521*^9, 3.7390176939551163`*^9}, {3.7390177896238737`*^9, 
   3.739017909571185*^9}, {3.739018077605842*^9, 3.739018140024836*^9}, 
   3.739018196510363*^9, {3.739018440031788*^9, 3.73901846780295*^9}, {
   3.7390185617807007`*^9, 3.7390185669497766`*^9}, {3.739018657234611*^9, 
   3.739018724864151*^9}, {3.739018767855431*^9, 3.739018876660943*^9}, {
   3.7390191268724117`*^9, 3.7390191771129923`*^9}, {3.739019287494424*^9, 
   3.739019311225587*^9}, {3.7390193413908854`*^9, 3.739019543301077*^9}, {
   3.739019575349414*^9, 3.739019578576642*^9}, {3.739019764531152*^9, 
   3.739019846689345*^9}, {3.7390198867360287`*^9, 3.739019895726553*^9}, {
   3.739019976596237*^9, 3.739020014282103*^9}, {3.739020236143532*^9, 
   3.7390202384173613`*^9}, {3.7390203140904493`*^9, 3.739020319823039*^9}, {
   3.739020358387492*^9, 3.739020360315668*^9}, {3.7390203927150307`*^9, 
   3.739020517352191*^9}, {3.739020575860731*^9, 3.739020582573951*^9}, {
   3.73902061324279*^9, 3.739020649212779*^9}, {3.739020692782099*^9, 
   3.7390206929141197`*^9}, {3.7390279622673683`*^9, 3.739027968997335*^9}, {
   3.739027999579784*^9, 3.739028105121891*^9}, 3.739028193021044*^9, {
   3.739028508925735*^9, 3.739028544350507*^9}, {3.739028620580504*^9, 
   3.73902863375674*^9}, {3.739028713615055*^9, 3.739028718300826*^9}, {
   3.739028778185607*^9, 3.739028779601461*^9}, {3.739030005047434*^9, 
   3.739030032654132*^9}, 3.7390303952051086`*^9, {3.739030647781528*^9, 
   3.739030769934762*^9}, 3.739030891599688*^9, {3.739030940719483*^9, 
   3.739030976159534*^9}, {3.739031119167739*^9, 3.739031129781196*^9}, {
   3.7390312037282343`*^9, 3.7390312338938713`*^9}, {3.739033292489483*^9, 
   3.739033299529632*^9}, 3.739033342525674*^9, {3.739035222757647*^9, 
   3.7390352806031923`*^9}, {3.739035417558358*^9, 3.7390354451325407`*^9}, 
   3.739035524921191*^9, {3.739035562555933*^9, 3.739035583939142*^9}, {
   3.739035620637682*^9, 3.739035626354547*^9}, {3.739035678965138*^9, 
   3.7390357974123077`*^9}, {3.739035828798193*^9, 3.739036438475807*^9}, {
   3.7390364695854263`*^9, 3.739036522455679*^9}, {3.739036553148346*^9, 
   3.7390366153157387`*^9}, {3.7390366714547577`*^9, 3.739036683261985*^9}, {
   3.739036903927476*^9, 3.7390369256178923`*^9}, 3.739036961487069*^9, {
   3.7390370471009293`*^9, 3.73903707487463*^9}, {3.739037229951442*^9, 
   3.73903729870457*^9}, {3.739038835046083*^9, 3.739038846891121*^9}, {
   3.739038896502606*^9, 3.739038904354954*^9}, {3.73903901949612*^9, 
   3.739039026373211*^9}, {3.739039176668326*^9, 3.73903921085743*^9}, {
   3.73903943553202*^9, 3.7390394593380003`*^9}, {3.73903955107915*^9, 
   3.73903955179216*^9}, {3.739040348734168*^9, 3.739040359795599*^9}, 
   3.7390406212120247`*^9, {3.739040725552843*^9, 3.739040737083726*^9}, {
   3.739041498153167*^9, 3.739041498807497*^9}, {3.739041685876266*^9, 
   3.739041701919012*^9}, {3.739045894534479*^9, 3.739045962253859*^9}, 
   3.739045999387032*^9, {3.739046034431408*^9, 3.739046244846181*^9}, {
   3.739046278614946*^9, 3.739046437644539*^9}, {3.739046506724431*^9, 
   3.739046558485209*^9}, {3.739046596866886*^9, 3.739046638718356*^9}, 
   3.739046735737852*^9, {3.7390474624388237`*^9, 3.739047466869055*^9}, {
   3.739048104570017*^9, 3.739048121918244*^9}, {3.739048162134223*^9, 
   3.73904816502942*^9}, 3.739048224973968*^9, {3.7390482558062687`*^9, 
   3.739048291433638*^9}, {3.739048947397984*^9, 3.739048947924858*^9}, {
   3.7390503404287043`*^9, 3.739050344132244*^9}, {3.739050600664276*^9, 
   3.739050601249222*^9}, {3.7390509058280087`*^9, 3.739050910951334*^9}, 
   3.7390510985864773`*^9, {3.739051341182249*^9, 3.739051348353581*^9}, {
   3.739051724196074*^9, 3.7390517306708403`*^9}, {3.739051824518565*^9, 
   3.739051838659799*^9}, {3.739051871962593*^9, 3.739051898774981*^9}, {
   3.7390519422879457`*^9, 3.739052019267392*^9}, {3.739052070919921*^9, 
   3.7390520942171*^9}, {3.7390522511053467`*^9, 3.739052330148369*^9}, {
   3.7390524151015387`*^9, 3.739052451858288*^9}, {3.739052933224842*^9, 
   3.7390529444174*^9}, {3.73905305186092*^9, 3.739053067906042*^9}, {
   3.739085008201819*^9, 3.739085010517314*^9}, {3.739085129636087*^9, 
   3.739085186084778*^9}, {3.739085332031357*^9, 3.739085332693699*^9}, {
   3.739085522501267*^9, 3.739085524399645*^9}, 3.7390856736990347`*^9, {
   3.7390857721983128`*^9, 3.739085777191897*^9}, {3.739086127013054*^9, 
   3.739086166004031*^9}, 3.739086253375333*^9, {3.7390863238524923`*^9, 
   3.739086386690476*^9}, {3.739086454111898*^9, 3.739086460452889*^9}, 
   3.739086596869796*^9, {3.739087111882266*^9, 3.739087112039941*^9}, {
   3.7390875221496353`*^9, 3.739087559993679*^9}, {3.7390877344077578`*^9, 
   3.739087734804324*^9}, 3.7391358039637203`*^9, {3.7391363328975782`*^9, 
   3.7391363370371017`*^9}, 3.739136466019773*^9, 3.739137144025723*^9, {
   3.739137548786491*^9, 3.739137552315235*^9}, {3.7391376624322433`*^9, 
   3.739137692767605*^9}, {3.7391377785564623`*^9, 3.7391377848668413`*^9}, {
   3.739139803070726*^9, 3.739139988131078*^9}, {3.739172548652485*^9, 
   3.7391726883329563`*^9}, {3.739172728753854*^9, 3.739172810551684*^9}, {
   3.739172853794854*^9, 3.739172877683412*^9}, {3.739172941582878*^9, 
   3.739173093433597*^9}, {3.73917313131041*^9, 3.7391731771040993`*^9}, {
   3.739173208996846*^9, 3.73917339736296*^9}, {3.73917344165346*^9, 
   3.7391734807344437`*^9}, {3.7391735307908087`*^9, 3.739173595067224*^9}, {
   3.739173653006879*^9, 3.73917368118412*^9}, {3.739173724559746*^9, 
   3.7391737778708344`*^9}, 3.739173817279127*^9, {3.739174367043845*^9, 
   3.7391745712835484`*^9}, {3.739174640734962*^9, 3.739174713755756*^9}, {
   3.739174752410191*^9, 3.739174878960293*^9}, {3.739174932274404*^9, 
   3.739174975475853*^9}, {3.739175047786284*^9, 3.739175053995905*^9}, {
   3.739175111024373*^9, 3.739175212453547*^9}, {3.739175254763815*^9, 
   3.739175335757296*^9}, {3.739175413734642*^9, 3.739175467539421*^9}, {
   3.739175525076009*^9, 3.739175529406711*^9}, {3.739213673135911*^9, 
   3.739213686568222*^9}, 3.73921372918513*^9, {3.73921386016354*^9, 
   3.739213905528933*^9}, {3.739213946527068*^9, 3.7392139612864513`*^9}, {
   3.7392153340002327`*^9, 3.739215424814451*^9}, {3.739215455459971*^9, 
   3.739215532699638*^9}, 3.739215793767658*^9, {3.739215882028775*^9, 
   3.739215883435721*^9}, 3.7392163129034643`*^9, {3.739216388071013*^9, 
   3.7392164693745728`*^9}, {3.7392165015117283`*^9, 3.739216502599346*^9}, {
   3.7392165669659*^9, 3.739216568827886*^9}, {3.7392166580078793`*^9, 
   3.739216694198245*^9}, {3.739216769225905*^9, 3.739216787153021*^9}, {
   3.739216818191036*^9, 3.739216874982895*^9}, {3.7392170374025784`*^9, 
   3.73921706450476*^9}, {3.739217676240979*^9, 3.739217730342669*^9}, {
   3.739217774544118*^9, 3.739217776401033*^9}, {3.73921783324125*^9, 
   3.739217836528002*^9}, {3.73921788621756*^9, 3.73921791703605*^9}, {
   3.739217974310501*^9, 3.739218049509448*^9}, {3.739218085341689*^9, 
   3.7392182379865828`*^9}, {3.739218310867613*^9, 3.739218334311975*^9}, {
   3.739258324821225*^9, 3.739258332838606*^9}, {3.7392586777891273`*^9, 
   3.739258729928279*^9}, {3.739258764647868*^9, 3.739258771327368*^9}, {
   3.7392671571278133`*^9, 3.7392671607150793`*^9}, {3.7392676643330307`*^9, 
   3.73926769122753*^9}, 3.739268517291317*^9, {3.739268564227764*^9, 
   3.7392685645770693`*^9}, {3.7392686667994843`*^9, 3.739268703416947*^9}, {
   3.7392689628088417`*^9, 3.73926900520292*^9}, {3.7392690462271*^9, 
   3.739269381022245*^9}, {3.7392694753921947`*^9, 3.739269475533925*^9}, {
   3.739269576561164*^9, 3.739269737547654*^9}, 3.739269837662146*^9, {
   3.739269891099495*^9, 3.739269895899044*^9}, {3.7392699806068697`*^9, 
   3.739270016768504*^9}, {3.739270160839178*^9, 3.7392701681564417`*^9}, {
   3.7392702264983063`*^9, 3.739270231455531*^9}, {3.739270397674962*^9, 
   3.739270573626771*^9}, {3.739270617300859*^9, 3.739270624413739*^9}, {
   3.7392706656578417`*^9, 3.739270670561379*^9}, {3.7392709199311123`*^9, 
   3.7392709256310673`*^9}, {3.739271295545795*^9, 3.7392713666815*^9}, {
   3.739271598918667*^9, 3.73927204933585*^9}, {3.7392721236103907`*^9, 
   3.739272123953857*^9}, {3.739272170716879*^9, 3.739272184828074*^9}, {
   3.739272233061871*^9, 3.7392722869703608`*^9}, {3.739467056935874*^9, 
   3.7394670623464212`*^9}, {3.7394671252426043`*^9, 3.739467130498508*^9}, {
   3.739467823455741*^9, 3.739467828464737*^9}, {3.739467998888955*^9, 
   3.739468028844545*^9}, 3.739468335909548*^9, {3.73946836796178*^9, 
   3.739468387348136*^9}, {3.739468418741169*^9, 3.7394684487187233`*^9}, {
   3.7394685063650627`*^9, 3.739468509946948*^9}, {3.739468683650344*^9, 
   3.739468686455508*^9}, {3.739468727396758*^9, 3.739468741066918*^9}, 
   3.739469023841174*^9, {3.7394691576024523`*^9, 3.739469182553032*^9}, {
   3.739469228448029*^9, 3.7394692290972147`*^9}, 3.73946928427072*^9, 
   3.7394695345641947`*^9, 3.7394705549858007`*^9, 3.739471228786895*^9, {
   3.739520131904045*^9, 3.739520144218783*^9}, 3.7395205586565533`*^9, {
   3.73952059543106*^9, 3.739520613144973*^9}, 3.7395207040464563`*^9, {
   3.739520737434667*^9, 3.739520741047759*^9}, {3.739606305737946*^9, 
   3.739606389615391*^9}, {3.739606425640147*^9, 3.739606426648189*^9}, {
   3.739695000421831*^9, 3.739695008325184*^9}, {3.739695043873383*^9, 
   3.739695048048019*^9}, {3.739702340102216*^9, 3.739702344443161*^9}, {
   3.739745877519403*^9, 3.739745879748068*^9}, {3.739777499232801*^9, 
   3.739777503078889*^9}, {3.73977753639178*^9, 3.739777637052301*^9}, {
   3.739777683339012*^9, 3.739777802779929*^9}, {3.7397778685377893`*^9, 
   3.739777880737597*^9}, {3.739778558966036*^9, 3.7397785611085052`*^9}, {
   3.73978081194811*^9, 3.7397808191957903`*^9}, {3.740036428575406*^9, 
   3.740036429056609*^9}, {3.740036463194891*^9, 3.7400365599901943`*^9}, {
   3.7400366296101313`*^9, 3.740036826221498*^9}, {3.740036893205729*^9, 
   3.740037050988462*^9}, 3.740037132937252*^9, 3.740037188709673*^9, {
   3.740037234368786*^9, 3.74003747700082*^9}, {3.740037526128784*^9, 
   3.74003792173285*^9}, {3.740045778835382*^9, 3.7400457823387833`*^9}, {
   3.740045824015345*^9, 3.740045840808653*^9}, {3.740045920181279*^9, 
   3.740046240822555*^9}, {3.740046318916493*^9, 3.740046395458247*^9}, {
   3.740046833265376*^9, 3.740046836461796*^9}, {3.740046962825292*^9, 
   3.740046963141602*^9}, {3.740047066399279*^9, 3.740047100853107*^9}, {
   3.740047173099945*^9, 3.740047186162642*^9}, {3.740047452524645*^9, 
   3.740047492539392*^9}, {3.7400609646562443`*^9, 3.740061000569106*^9}, {
   3.740061701542646*^9, 3.740061834201119*^9}, {3.740178897638645*^9, 
   3.740178898066834*^9}, {3.740180192567943*^9, 3.740180253329021*^9}, {
   3.740212069933302*^9, 3.7402121099853897`*^9}, {3.740212172824095*^9, 
   3.740212202329831*^9}, {3.7402122535782967`*^9, 3.740212384314818*^9}, {
   3.740212421020069*^9, 3.740212453083235*^9}, {3.740212528578145*^9, 
   3.7402125779135513`*^9}, {3.74024779204381*^9, 3.740247907109557*^9}, {
   3.740247943363529*^9, 3.7402480395558147`*^9}, 3.7402497782448063`*^9, {
   3.7402587227941*^9, 3.74025875560673*^9}, 3.7402587900881433`*^9, {
   3.7402620391361113`*^9, 3.740262041459073*^9}, {3.740305781761372*^9, 
   3.7403057846548223`*^9}, {3.740307512674157*^9, 3.7403075665811*^9}, {
   3.7403077625638037`*^9, 3.740307886426055*^9}, {3.740307928771463*^9, 
   3.74030805797888*^9}, {3.74030813965125*^9, 3.7403081401220083`*^9}, {
   3.7403086236921787`*^9, 3.740308712366645*^9}, {3.7403087913537683`*^9, 
   3.7403087983051043`*^9}, {3.740308898900569*^9, 3.740308899052971*^9}, {
   3.740391470619111*^9, 3.740391475964347*^9}, {3.740392141842873*^9, 
   3.740392194340939*^9}, {3.740392239963337*^9, 3.74039224329123*^9}, {
   3.740392317771943*^9, 3.740392346684698*^9}, {3.7403923991167383`*^9, 
   3.7403924413176193`*^9}, {3.740393367947328*^9, 3.740393399108976*^9}, {
   3.7403934510693197`*^9, 3.7403935252037086`*^9}, {3.740393585434824*^9, 
   3.7403936279847*^9}, 3.740393699636376*^9, {3.740393731202084*^9, 
   3.7403937424683943`*^9}, {3.740829617001458*^9, 3.740829626800457*^9}, {
   3.7479171053061543`*^9, 3.747917111883992*^9}, {3.747917455660163*^9, 
   3.747917489087846*^9}, {3.747917591594805*^9, 3.747917656787566*^9}, {
   3.747917692165772*^9, 3.747917692518962*^9}, {3.7479178420405083`*^9, 
   3.747917866286887*^9}, {3.7479184162178717`*^9, 3.747918427729683*^9}, {
   3.747918461460767*^9, 3.747918489742504*^9}, {3.747918556174432*^9, 
   3.747918598070457*^9}, {3.7479188458991337`*^9, 3.74791886508951*^9}, {
   3.7479224799600277`*^9, 3.747922480574435*^9}, {3.7479227078951387`*^9, 
   3.7479227083833447`*^9}, {3.747922778865239*^9, 3.747922810422175*^9}, {
   3.747922925272912*^9, 3.7479229546061993`*^9}, {3.7479231079146233`*^9, 
   3.747923112499614*^9}, {3.7479232214062767`*^9, 3.747923247695191*^9}, {
   3.747923326154361*^9, 3.7479233268590527`*^9}, {3.747923417827676*^9, 
   3.7479234303841543`*^9}, {3.747927823187088*^9, 3.747927828317595*^9}, {
   3.74792787390322*^9, 3.747927910880846*^9}, {3.7479279919879*^9, 
   3.747928025857839*^9}, {3.7479280902913933`*^9, 3.74792809514942*^9}, {
   3.747928133791195*^9, 3.7479282848716183`*^9}, {3.7479283321016493`*^9, 
   3.747928335705204*^9}, {3.7479283746533623`*^9, 3.747928395263584*^9}, {
   3.747928459626603*^9, 3.747928483407981*^9}, 3.7479285916480913`*^9, {
   3.747928647639464*^9, 3.747928655790369*^9}, {3.7479287026041307`*^9, 
   3.7479288167177896`*^9}, {3.747929168957645*^9, 3.747929170289599*^9}, {
   3.747929271372489*^9, 3.747929419016868*^9}, {3.747929621819491*^9, 
   3.747929628159067*^9}, {3.747929763658564*^9, 3.747929880802458*^9}, {
   3.747930567016941*^9, 3.747930593350417*^9}, 3.747930776968697*^9, {
   3.747930848638515*^9, 3.7479308616537027`*^9}, {3.747930895541251*^9, 
   3.747930915260337*^9}, {3.747930955112681*^9, 3.7479309739639473`*^9}, {
   3.747931004835106*^9, 3.747931006767421*^9}, {3.747931435748082*^9, 
   3.747931446818262*^9}, {3.747931943129784*^9, 3.747931943333035*^9}, {
   3.7479320616827393`*^9, 3.7479320991231127`*^9}, 3.747932148604494*^9, {
   3.747932184746833*^9, 3.7479321883360643`*^9}, {3.7479322241295156`*^9, 
   3.747932224790777*^9}, {3.747932282611985*^9, 3.747932285771657*^9}, 
   3.747932485572991*^9, {3.7479418850580482`*^9, 3.7479418939817257`*^9}, {
   3.747941976336935*^9, 3.7479420176446047`*^9}, {3.747942094263838*^9, 
   3.747942142701968*^9}, {3.747942411649098*^9, 3.7479424537450123`*^9}, {
   3.747942487917227*^9, 3.7479425379186153`*^9}, {3.7479425713714247`*^9, 
   3.747942697859511*^9}, {3.74794274003363*^9, 3.7479428439195538`*^9}, {
   3.747945820439582*^9, 3.747945833959107*^9}, {3.74794586793495*^9, 
   3.7479458704605007`*^9}, {3.747946063718923*^9, 3.747946123500267*^9}, 
   3.7479466496806517`*^9, {3.7479468164789667`*^9, 3.747946826670186*^9}, {
   3.747946878211796*^9, 3.74794691217654*^9}, {3.747947244938387*^9, 
   3.747947363760038*^9}, {3.747947399291668*^9, 3.747947401490855*^9}, {
   3.747947475678735*^9, 3.7479474941934423`*^9}, {3.747947527516285*^9, 
   3.747947534208234*^9}, {3.747947584389474*^9, 3.747947588321018*^9}, {
   3.7479873563371964`*^9, 3.747987380176209*^9}, {3.747987927856069*^9, 
   3.7479880033776283`*^9}, {3.747988175753066*^9, 3.7479881789660597`*^9}, 
   3.74799773593884*^9, {3.747998021840066*^9, 3.747998026598031*^9}, {
   3.7479982669723873`*^9, 3.74799827314358*^9}, {3.7479985320802937`*^9, 
   3.747998578773086*^9}, {3.7479991662697897`*^9, 3.7479991759248333`*^9}, {
   3.748004875280868*^9, 3.7480049090709343`*^9}, {3.749249831221559*^9, 
   3.749249857031355*^9}, {3.749249904131852*^9, 3.749249920899846*^9}, {
   3.749250252812221*^9, 3.7492502572887173`*^9}, 3.7492503143634768`*^9, {
   3.749554619653771*^9, 3.7495546267403097`*^9}, {3.7495546914715157`*^9, 
   3.749554783044405*^9}, {3.749554821243038*^9, 3.749554868507348*^9}, {
   3.749554919789131*^9, 3.749554942808097*^9}, {3.749554978512138*^9, 
   3.749554984066812*^9}, {3.749555041876602*^9, 3.749555061597248*^9}, 
   3.7495553258005457`*^9, 3.749555575531913*^9, 3.749555969600202*^9, 
   3.749583063551903*^9, {3.749852964162582*^9, 3.7498529671522303`*^9}, {
   3.750342223280259*^9, 3.750342429531245*^9}, {3.750357159013303*^9, 
   3.750357235746533*^9}, {3.7503573775992823`*^9, 3.750357396056204*^9}, {
   3.750357441952136*^9, 3.750357578870029*^9}, {3.750357636704794*^9, 
   3.750357645145746*^9}, {3.7503613542582912`*^9, 3.750361363051515*^9}, {
   3.750365918296781*^9, 3.750365928280051*^9}, {3.750366009152611*^9, 
   3.750366024749517*^9}, {3.7512323786809063`*^9, 3.7512324558010798`*^9}, {
   3.75123273529095*^9, 3.751232777007913*^9}, 3.7512331853619757`*^9, 
   3.751233239170031*^9, {3.751233464660232*^9, 3.7512334650095263`*^9}, {
   3.751233654199375*^9, 3.75123367924402*^9}, 3.751233720575498*^9, {
   3.751233846762351*^9, 3.751233847237624*^9}, {3.751234276965376*^9, 
   3.751234299336371*^9}, 3.751235931895035*^9, {3.751289771532838*^9, 
   3.7512897762696867`*^9}, {3.751413811932131*^9, 3.751413887689702*^9}, {
   3.7514497392061462`*^9, 3.751449753771332*^9}, {3.751449816948592*^9, 
   3.751449832879426*^9}, {3.751449893191491*^9, 3.751449925281561*^9}, {
   3.7514952014442453`*^9, 3.751495277091241*^9}, {3.751496229866817*^9, 
   3.751496235291149*^9}, {3.751500258883885*^9, 3.75150029059533*^9}, {
   3.751500339868764*^9, 3.751500361273357*^9}, {3.751501336666408*^9, 
   3.751501364521573*^9}, {3.751501427617628*^9, 3.75150144088948*^9}, 
   3.7515023020039387`*^9, {3.751544303899797*^9, 3.75154449100766*^9}, {
   3.751544566852551*^9, 3.7515446262322607`*^9}, {3.7515447906091022`*^9, 
   3.751544802313377*^9}, {3.751544853176393*^9, 3.751544950266217*^9}, 
   3.751545028891819*^9, {3.751545150023253*^9, 3.7515451505489817`*^9}, 
   3.7515452108731403`*^9, 3.7515454553147163`*^9, {3.751545538726372*^9, 
   3.7515456077392807`*^9}, 3.751545749361664*^9, {3.7515461587828074`*^9, 
   3.751546229370285*^9}, {3.751546287775136*^9, 3.751546408087384*^9}, {
   3.7515464622243633`*^9, 3.751546501937745*^9}, {3.75154665239802*^9, 
   3.751546667029038*^9}, {3.751546707686902*^9, 3.7515467096841927`*^9}, {
   3.75154696318172*^9, 3.751546967211232*^9}, {3.751546998959661*^9, 
   3.751546999365562*^9}, {3.751547066491044*^9, 3.751547066827104*^9}, {
   3.7515471551130323`*^9, 3.751547217563505*^9}, {3.75154725455088*^9, 
   3.7515472559555473`*^9}, {3.751547306810193*^9, 3.751547381877203*^9}, {
   3.751547472841761*^9, 3.751547488222123*^9}, {3.751547604876109*^9, 
   3.751547640363544*^9}, {3.751547725932337*^9, 3.751547809335772*^9}, {
   3.7515478506820593`*^9, 3.7515478700975437`*^9}, {3.751548205575552*^9, 
   3.751548205966792*^9}, {3.751548240984*^9, 3.751548241543971*^9}, {
   3.7515483022630377`*^9, 3.751548313593556*^9}, {3.751548346471261*^9, 
   3.751548364006566*^9}, {3.7515485040105743`*^9, 3.751548527329975*^9}, {
   3.751548585254485*^9, 3.7515485896678267`*^9}, {3.75154862064288*^9, 
   3.751548641215089*^9}, {3.751548754453659*^9, 3.751548755771061*^9}, {
   3.751548910620434*^9, 3.751548913935947*^9}, {3.751549150305698*^9, 
   3.751549151554152*^9}, {3.7515496196762447`*^9, 3.751549626016919*^9}, {
   3.751549667185154*^9, 3.751549678856324*^9}, {3.7515577141620092`*^9, 
   3.7515579769380617`*^9}, {3.7515580143835163`*^9, 3.751558079574191*^9}, {
   3.751558139857582*^9, 3.751558195790101*^9}, {3.751558240532427*^9, 
   3.7515582861143713`*^9}, {3.751558324075095*^9, 3.751558426638844*^9}, {
   3.751558464777012*^9, 3.751558601918417*^9}, 3.751560352996121*^9, {
   3.75156042092759*^9, 3.751560627526421*^9}, {3.751560663584948*^9, 
   3.751560714510477*^9}, {3.7515607818803864`*^9, 3.751560794463461*^9}, {
   3.75156084127586*^9, 3.751561133314806*^9}, 3.751561164773282*^9, {
   3.751561196733371*^9, 3.751561243936717*^9}, {3.751561304383685*^9, 
   3.751561340980473*^9}, 3.751561386672986*^9, {3.751561422738428*^9, 
   3.75156144065863*^9}, 3.751562798882519*^9, {3.751562887509857*^9, 
   3.751562921117014*^9}, {3.751563467793459*^9, 3.7515635333641148`*^9}, {
   3.751563632630026*^9, 3.7515636921251373`*^9}, {3.751563759502212*^9, 
   3.751563897380251*^9}, {3.751563993037971*^9, 3.751564094266683*^9}, {
   3.751564151559767*^9, 3.751564224337727*^9}, {3.751564276271806*^9, 
   3.751564305989726*^9}, {3.751564343859222*^9, 3.75156435460959*^9}, {
   3.751564535093318*^9, 3.7515645408736877`*^9}, {3.751564741592326*^9, 
   3.751564742102913*^9}, {3.751565345019071*^9, 3.75156534877533*^9}, {
   3.751565634300085*^9, 3.751565674872629*^9}, {3.751565725695607*^9, 
   3.7515657389456263`*^9}, {3.751565969051643*^9, 3.751566050044183*^9}, {
   3.751566213478771*^9, 3.751566253286952*^9}, {3.751566533556609*^9, 
   3.751566599795817*^9}, {3.751566687880625*^9, 3.751566717417803*^9}, {
   3.75156675168545*^9, 3.751566752801428*^9}, {3.7515699278371677`*^9, 
   3.7515699437221813`*^9}, {3.751570007435248*^9, 3.751570023074649*^9}, {
   3.751570187298478*^9, 3.751570276871649*^9}, {3.75157031791251*^9, 
   3.751570423485096*^9}, 3.751570496857205*^9, {3.751629658839513*^9, 
   3.7516296594040003`*^9}, {3.7516482293214006`*^9, 3.751648231469442*^9}, {
   3.7516482780902777`*^9, 3.751648311475588*^9}, {3.751649162201541*^9, 
   3.751649164218728*^9}, {3.751649243402997*^9, 3.7516492446550083`*^9}, {
   3.7516527010998697`*^9, 3.751652702898699*^9}, {3.751715802356991*^9, 
   3.751715806562908*^9}, {3.75171871008357*^9, 3.7517187102737837`*^9}, {
   3.751720224954956*^9, 3.751720225539547*^9}, {3.75180353537171*^9, 
   3.751803582381357*^9}, {3.7518037899935207`*^9, 3.751803790206752*^9}, {
   3.751803825916532*^9, 3.7518038333639183`*^9}, {3.751803871979451*^9, 
   3.751803880317416*^9}, {3.751804016114931*^9, 3.7518041994017487`*^9}, 
   3.751804458455153*^9, {3.751804504398995*^9, 3.751804526295822*^9}, {
   3.751804732406631*^9, 3.7518047850047007`*^9}, {3.751804823721807*^9, 
   3.751804946499888*^9}, {3.751805281461915*^9, 3.751805349480773*^9}, {
   3.751805468862206*^9, 3.751805469113765*^9}, {3.751805566244466*^9, 
   3.7518056109509153`*^9}, 3.751808767251944*^9, {3.7518088467776546`*^9, 
   3.751808870661173*^9}, {3.751808919757815*^9, 3.751808920413374*^9}, 
   3.751808981319714*^9, {3.7518252499023113`*^9, 3.751825251375906*^9}, {
   3.751825328900333*^9, 3.751825361695635*^9}, {3.751839909117784*^9, 
   3.751839931364519*^9}, {3.7518399699449863`*^9, 3.751839998208387*^9}, {
   3.751840294938734*^9, 3.751840326385133*^9}, {3.7518967909161043`*^9, 
   3.751896844040004*^9}, {3.751897133362459*^9, 3.751897177476837*^9}, {
   3.751897305149067*^9, 3.751897305839085*^9}, {3.7520615808981743`*^9, 
   3.752061588104498*^9}, {3.752062646708231*^9, 3.752062661202073*^9}, {
   3.752064136655918*^9, 3.7520641372269707`*^9}, {3.752064248490041*^9, 
   3.75206427979885*^9}, 3.752065152025157*^9, {3.752066091658476*^9, 
   3.752066129830204*^9}, {3.752066445418621*^9, 3.752066445888782*^9}, {
   3.752066658044258*^9, 3.752066681926094*^9}, {3.752075969387257*^9, 
   3.752075982538548*^9}, {3.7520764125990477`*^9, 3.7520764510757513`*^9}, {
   3.7520765951191673`*^9, 3.752076684355805*^9}, {3.752092158871442*^9, 
   3.752092167418763*^9}, {3.752092200307008*^9, 3.752092220497007*^9}, {
   3.752092340202873*^9, 3.7520923550284653`*^9}, {3.752092478861067*^9, 
   3.752092486157296*^9}, {3.752092659507174*^9, 3.752092681210889*^9}, {
   3.7521459834068537`*^9, 3.7521459838904676`*^9}, {3.752147642163064*^9, 
   3.7521476433711777`*^9}, {3.752152017499311*^9, 3.7521520808217897`*^9}, {
   3.752152118210091*^9, 3.75215212658908*^9}, {3.752152334126521*^9, 
   3.752152370506043*^9}, 3.752152403120139*^9, {3.7521524580668993`*^9, 
   3.752152459562866*^9}, 3.7521570577424173`*^9, {3.752157101919507*^9, 
   3.7521571345007257`*^9}, {3.7521573444158087`*^9, 
   3.7521573554796057`*^9}, {3.7521574018396587`*^9, 
   3.7521574053217173`*^9}, {3.7521575049655952`*^9, 3.752157531072028*^9}, {
   3.752157708439774*^9, 3.752157719625977*^9}, {3.7521577668252153`*^9, 
   3.752157795597269*^9}, {3.7521716630517187`*^9, 3.752171680076846*^9}, {
   3.752172505521257*^9, 3.752172511917243*^9}, {3.752172824056987*^9, 
   3.75217283001786*^9}, {3.752173568618661*^9, 3.7521735806465597`*^9}, {
   3.7521736896625566`*^9, 3.752173702052449*^9}, {3.752173759102345*^9, 
   3.7521738187852993`*^9}, 3.7521794820950527`*^9, {3.75217951320256*^9, 
   3.75217955312353*^9}, {3.752179600323564*^9, 3.752179668223575*^9}, 
   3.7521799284676867`*^9, {3.7521804551622868`*^9, 3.752180475952984*^9}, {
   3.7521806541977997`*^9, 3.752180661303561*^9}, {3.752180816084681*^9, 
   3.752180816244917*^9}, {3.752180987656527*^9, 3.752181106480834*^9}, {
   3.752181172853467*^9, 3.75218117899233*^9}, {3.7521812382793293`*^9, 
   3.752181304529496*^9}, {3.752181402562583*^9, 3.752181449480577*^9}, 
   3.752181597993726*^9, {3.752181736358014*^9, 3.752181750204384*^9}, 
   3.7521818037707872`*^9, {3.752182126017026*^9, 3.752182153654828*^9}, {
   3.752182281478896*^9, 3.752182290407185*^9}, {3.7521825358693447`*^9, 
   3.752182545468699*^9}, 3.752182575988284*^9, {3.7521826360832987`*^9, 
   3.7521826776752987`*^9}, {3.7521828459073877`*^9, 3.752182864123925*^9}, 
   3.752183170275855*^9, {3.752183217909232*^9, 3.7521832240121727`*^9}, {
   3.752183300184978*^9, 3.752183313975216*^9}, {3.752183390153081*^9, 
   3.752183390898892*^9}, {3.7521834288164387`*^9, 3.752183483720804*^9}, 
   3.7521835474042187`*^9, {3.752273694849972*^9, 3.7522737261110888`*^9}, 
   3.752273805004345*^9, {3.752273904665362*^9, 3.752273920904477*^9}, {
   3.752275531655908*^9, 3.752275533414812*^9}, {3.752275580008092*^9, 
   3.7522755811950912`*^9}, {3.752275708821249*^9, 3.7522757672652187`*^9}, {
   3.752275806775238*^9, 3.752275915309018*^9}, {3.752275975377531*^9, 
   3.752275981848155*^9}, {3.752276035316449*^9, 3.752276076312166*^9}, {
   3.752276153624391*^9, 3.752276208726913*^9}, {3.752276261790701*^9, 
   3.752276274374391*^9}, {3.752276923554844*^9, 3.752276926364685*^9}, {
   3.752276966767366*^9, 3.752277027124126*^9}, {3.752277099096285*^9, 
   3.752277111269759*^9}, {3.7522771523895683`*^9, 3.752277213688238*^9}, {
   3.752277255935055*^9, 3.752277264129553*^9}, {3.75227731675393*^9, 
   3.752277318037126*^9}, {3.752277349788732*^9, 3.752277479600333*^9}, {
   3.7522775797633257`*^9, 3.7522775801252728`*^9}, {3.752277808192891*^9, 
   3.7522778105722227`*^9}, 3.7522780061845427`*^9, {3.752278127262601*^9, 
   3.752278174821813*^9}, {3.752279057945835*^9, 3.752279081499097*^9}, {
   3.752279152188196*^9, 3.752279241389002*^9}, 3.752279281613937*^9, {
   3.7522794297167683`*^9, 3.752279474422346*^9}, {3.752280096225658*^9, 
   3.752280096851802*^9}, {3.7522811352934504`*^9, 3.752281202336376*^9}, {
   3.752281556955214*^9, 3.752281567957045*^9}, {3.7522816052146597`*^9, 
   3.752281608657193*^9}, {3.7522817274591627`*^9, 3.752281732232751*^9}, {
   3.752281813503372*^9, 3.7522818137779217`*^9}, {3.752281910121169*^9, 
   3.752281912776803*^9}, {3.752748945715547*^9, 3.752748947663766*^9}, 
   3.752749252370707*^9, {3.7527493899418907`*^9, 3.7527494421284733`*^9}, {
   3.752749504176861*^9, 3.752749553526404*^9}, {3.752749621352036*^9, 
   3.752749720661964*^9}, {3.752749752226017*^9, 3.752749777864914*^9}, {
   3.7527498432882843`*^9, 3.7527499283578157`*^9}, {3.7527549369542007`*^9, 
   3.752754938846842*^9}, {3.752756324716701*^9, 3.752756340071175*^9}, {
   3.754063622097188*^9, 3.754063632612301*^9}, 3.754064155518609*^9, {
   3.754121514130069*^9, 3.754121514853263*^9}, {3.7541223971168413`*^9, 
   3.7541225999452543`*^9}, 3.7541227464388237`*^9, 3.7541227829868717`*^9, {
   3.7541228159969807`*^9, 3.754122864894349*^9}, {3.754122956329381*^9, 
   3.754123045212085*^9}, {3.754123167422971*^9, 3.7541232796506557`*^9}, {
   3.7541233199928617`*^9, 3.754123490227311*^9}, {3.754123550363771*^9, 
   3.754123687415567*^9}, {3.7541237404999533`*^9, 3.754123760230887*^9}, 
   3.754123797269919*^9, {3.754123850146323*^9, 3.754123861845031*^9}, {
   3.75412398443369*^9, 3.75412409424841*^9}, {3.754124137795247*^9, 
   3.75412415910231*^9}, {3.754124193037058*^9, 3.7541242559676323`*^9}, {
   3.754124291083811*^9, 3.754124307012197*^9}, {3.754124537690098*^9, 
   3.7541245672323017`*^9}, 3.754135793324635*^9, {3.7541366318517323`*^9, 
   3.754136637654635*^9}, {3.7541366858810587`*^9, 3.754136757018668*^9}, {
   3.7541368535370417`*^9, 3.754136888796475*^9}, {3.754136960028844*^9, 
   3.754136969899824*^9}, {3.754137187671529*^9, 3.754137195014428*^9}, {
   3.754141818038086*^9, 3.75414182222723*^9}, {3.7541513473297157`*^9, 
   3.754151348182042*^9}, {3.754330810636457*^9, 3.754330843331029*^9}, {
   3.754331120487884*^9, 3.754331155971434*^9}, {3.7543311931138487`*^9, 
   3.754331200190875*^9}, {3.7543312750497704`*^9, 3.7543313542053537`*^9}, {
   3.7544852023344593`*^9, 3.754485247134144*^9}, {3.754485287253162*^9, 
   3.754485287502878*^9}, {3.754485351165757*^9, 3.7544853800379477`*^9}, {
   3.7544854385325003`*^9, 3.754485444965713*^9}, {3.7544856245015507`*^9, 
   3.754485649439831*^9}, {3.754486366142123*^9, 3.754486387208395*^9}, {
   3.7544866955339003`*^9, 3.754486696418746*^9}, {3.754487282323132*^9, 
   3.754487329239684*^9}, {3.754487394866325*^9, 3.754487413759767*^9}, {
   3.754487538000409*^9, 3.7544875381133223`*^9}, {3.754487667273378*^9, 
   3.7544876958105717`*^9}, {3.754493974354369*^9, 3.754493974701631*^9}, {
   3.754494011333267*^9, 3.7544940197483587`*^9}, {3.754494150975482*^9, 
   3.7544941637200193`*^9}, {3.754494515967327*^9, 3.754494516073038*^9}, {
   3.754494775575644*^9, 3.754494780034144*^9}, {3.754494990507143*^9, 
   3.754495043434288*^9}, {3.7544988954439993`*^9, 3.7544988979820337`*^9}, {
   3.7544997889089746`*^9, 3.7544997890887833`*^9}, {3.7545001175863934`*^9, 
   3.754500178361161*^9}, {3.754572820888763*^9, 3.754572831256238*^9}, {
   3.754572865734733*^9, 3.754572879499811*^9}, {3.7545729559179707`*^9, 
   3.754572956458428*^9}, {3.75457300710133*^9, 3.754573015337566*^9}, {
   3.75457308341521*^9, 3.754573109105504*^9}, {3.754573167329083*^9, 
   3.754573180630262*^9}, {3.754573365819425*^9, 3.754573398775877*^9}, {
   3.754573571201545*^9, 3.75457357175456*^9}, {3.754608988763803*^9, 
   3.754609015086355*^9}, {3.754609063912677*^9, 3.7546090679436073`*^9}, {
   3.754610242628561*^9, 3.754610295159087*^9}, {3.754610333103879*^9, 
   3.7546103336320133`*^9}, {3.754610649964373*^9, 3.754610704935411*^9}, {
   3.754611706628105*^9, 3.754611708879949*^9}, {3.754847116534647*^9, 
   3.7548471270259247`*^9}, {3.754847719958889*^9, 3.754847720132848*^9}, {
   3.754848312412483*^9, 3.754848321421958*^9}, {3.754848962154217*^9, 
   3.7548489678281507`*^9}, {3.7548490184614077`*^9, 3.754849026216877*^9}, {
   3.7548492178888073`*^9, 3.754849218817491*^9}, 3.754849309951839*^9, {
   3.754849377163265*^9, 3.754849381602543*^9}, {3.754849552964464*^9, 
   3.754849553115199*^9}, 3.7548496207617407`*^9, {3.754849658480318*^9, 
   3.754849670057632*^9}, {3.7548497241575737`*^9, 3.7548497305549927`*^9}, {
   3.7548501104025497`*^9, 3.754850135706584*^9}, {3.754850182363468*^9, 
   3.754850197317019*^9}, {3.754850339547133*^9, 3.754850439755369*^9}, {
   3.754850495626272*^9, 3.754850523017771*^9}, {3.754851170271948*^9, 
   3.754851170452181*^9}, {3.754851494021463*^9, 3.754851494395323*^9}, {
   3.754851529483313*^9, 3.754851529925001*^9}, {3.754851798819605*^9, 
   3.754851803051182*^9}, {3.754852039425036*^9, 3.75485203957406*^9}, {
   3.754852168882285*^9, 3.754852180269474*^9}, {3.754858978081665*^9, 
   3.754858989522112*^9}, 3.7548590241141872`*^9, {3.7548598318562193`*^9, 
   3.7548598601813993`*^9}, {3.754865733301014*^9, 3.75486574045786*^9}, {
   3.7548660436428413`*^9, 3.754866058418468*^9}, {3.754866712871106*^9, 
   3.754866725965336*^9}, {3.754866790731844*^9, 3.754866801750863*^9}, {
   3.754867296956472*^9, 3.75486735185109*^9}, {3.7548673880805798`*^9, 
   3.7548674001738443`*^9}, {3.754867763801944*^9, 3.754867764144758*^9}, {
   3.754958173357213*^9, 3.754958187895822*^9}, {3.7549588956374607`*^9, 
   3.7549589138739443`*^9}, {3.754958957465185*^9, 3.7549590136558123`*^9}, {
   3.754959075774109*^9, 3.754959077766461*^9}, {3.754959148137809*^9, 
   3.75495926773836*^9}, 3.75500630937894*^9, {3.7550065856797123`*^9, 
   3.7550066063231297`*^9}, {3.755006737580084*^9, 3.755006739566422*^9}, {
   3.755006781231806*^9, 3.755007104467483*^9}, {3.755007151311378*^9, 
   3.755007152185923*^9}, 3.755007259564527*^9, {3.755007914236836*^9, 
   3.755007915232511*^9}, {3.755247522092022*^9, 3.7552475365499563`*^9}, {
   3.755247766441949*^9, 3.755247801559157*^9}, {3.755247840096203*^9, 
   3.755247840987837*^9}, {3.755247879991646*^9, 3.755247924403981*^9}, {
   3.755248354958202*^9, 3.7552483558021917`*^9}, {3.755248405632469*^9, 
   3.755248419525907*^9}, {3.755249715148719*^9, 3.755249718032016*^9}, {
   3.755249751663553*^9, 3.755249905741626*^9}, {3.7552499450607452`*^9, 
   3.75525023566903*^9}, {3.755250269696862*^9, 3.7552502710131207`*^9}, {
   3.7552503293447638`*^9, 3.75525033143932*^9}, {3.755250438601899*^9, 
   3.755250473185933*^9}, {3.755250655658609*^9, 3.7552506738212748`*^9}, {
   3.755250958223282*^9, 3.755250958543625*^9}, {3.755251681680253*^9, 
   3.755251682106015*^9}, {3.75525284458423*^9, 3.755252847083231*^9}, {
   3.755253324893388*^9, 3.755253325330454*^9}, {3.755301486765423*^9, 
   3.755301511662035*^9}, {3.755302753065727*^9, 3.755302755344303*^9}, 
   3.7553027883571453`*^9, {3.755302845600499*^9, 3.755302878293973*^9}, {
   3.755302925209134*^9, 3.755302925955482*^9}, {3.7553040515956707`*^9, 
   3.755304098850338*^9}, {3.7553044648842897`*^9, 3.755304471176095*^9}, {
   3.7553472682610207`*^9, 3.755347272000785*^9}, {3.7553499191033163`*^9, 
   3.755349936349008*^9}, {3.755422393099413*^9, 3.7554224233233843`*^9}, {
   3.755422870178986*^9, 3.755422885106379*^9}, {3.755422923121078*^9, 
   3.75542300054183*^9}, {3.755423124678637*^9, 3.755423234845224*^9}, {
   3.755423329282667*^9, 3.755423354767371*^9}, {3.755425680764172*^9, 
   3.7554256815293093`*^9}, {3.7554257154647217`*^9, 3.755425879873691*^9}, {
   3.755426019562004*^9, 3.755426235398281*^9}, {3.7554262797882757`*^9, 
   3.755426284730166*^9}, {3.755426338793591*^9, 3.75542635137204*^9}, {
   3.755426911936101*^9, 3.755426922412732*^9}, {3.755427142798565*^9, 
   3.755427183095715*^9}, {3.755427214609956*^9, 3.755427245104414*^9}, {
   3.755427276532742*^9, 3.755427283213551*^9}, {3.7554274238006907`*^9, 
   3.755427424358007*^9}, {3.755427507386279*^9, 3.7554275092442217`*^9}, {
   3.7554275675308867`*^9, 3.755427570678254*^9}, {3.755433269771144*^9, 
   3.7554332706114407`*^9}, {3.755433313553482*^9, 3.7554333174400063`*^9}, {
   3.755433411343354*^9, 3.755433482924155*^9}, {3.755433514928276*^9, 
   3.755433551105975*^9}, {3.7554336064663267`*^9, 3.755433622179472*^9}, {
   3.7554336951660433`*^9, 3.755433696932371*^9}, {3.755433753358274*^9, 
   3.755433758044161*^9}, {3.755433804470769*^9, 3.755433899583919*^9}, {
   3.755477022819119*^9, 3.7554770417422333`*^9}, {3.7556830528588676`*^9, 
   3.75568306122622*^9}, {3.7556835483653183`*^9, 3.7556836044414387`*^9}, {
   3.7556836655439262`*^9, 3.755683668331143*^9}, {3.755683768246958*^9, 
   3.755683768559569*^9}, {3.755683811347587*^9, 3.755683811709539*^9}, 
   3.755683913275329*^9, {3.7556839554356003`*^9, 3.755683961182766*^9}, {
   3.755685060034141*^9, 3.7556850636683607`*^9}, {3.7556851868551903`*^9, 
   3.755685187378409*^9}, {3.755685231688531*^9, 3.755685239680018*^9}, {
   3.755686129369987*^9, 3.7556862562114487`*^9}, {3.755686303354609*^9, 
   3.755686332835499*^9}, {3.755686389707356*^9, 3.7556864409756937`*^9}, {
   3.75568951892443*^9, 3.755689539257038*^9}, {3.755689578521665*^9, 
   3.7556896564263973`*^9}, {3.7556898456775923`*^9, 
   3.7556898550866013`*^9}, {3.755689895040262*^9, 3.755689898014393*^9}, {
   3.755689977926793*^9, 3.7556899791266823`*^9}, {3.755690015866645*^9, 
   3.755690053158037*^9}, {3.7556900932093782`*^9, 3.7556901062145557`*^9}, {
   3.7556902095936337`*^9, 3.7556902168171053`*^9}, {3.755690247101677*^9, 
   3.7556902711404*^9}, {3.7556924688084*^9, 3.755692475915601*^9}, {
   3.755692557986556*^9, 3.7556926290952806`*^9}, {3.755692695256089*^9, 
   3.755692834280476*^9}, {3.755692936108672*^9, 3.755692939085765*^9}, {
   3.75569298362528*^9, 3.7556930409100323`*^9}, {3.7556930880224257`*^9, 
   3.7556931506632853`*^9}, {3.7556941886249447`*^9, 3.755694205282571*^9}, {
   3.75569425590546*^9, 3.755694259898266*^9}, {3.755694310602397*^9, 
   3.755694330674732*^9}, {3.755694487406158*^9, 3.755694488844489*^9}, {
   3.7556947274897547`*^9, 3.755694779590214*^9}, {3.7557049302122173`*^9, 
   3.755704937566185*^9}, {3.7557078286022873`*^9, 3.755707834189084*^9}, {
   3.755707968101376*^9, 3.755708019971181*^9}, {3.75570812359126*^9, 
   3.7557081495685987`*^9}, {3.75570854619156*^9, 3.755708574041499*^9}, {
   3.755708880011118*^9, 3.755708911040578*^9}, {3.75570935561722*^9, 
   3.755709437523445*^9}, 3.7557095100388813`*^9, {3.7557095803301067`*^9, 
   3.7557095838953333`*^9}, {3.755709688211372*^9, 3.7557097558163147`*^9}, {
   3.7557098330219183`*^9, 3.755709866788094*^9}, {3.7557106992209873`*^9, 
   3.7557107814240427`*^9}, {3.755711557824696*^9, 3.7557115605817633`*^9}, {
   3.75571170755195*^9, 3.7557117083506823`*^9}, {3.756141164065071*^9, 
   3.756141181442298*^9}, 3.756142144800865*^9, 3.756142898325725*^9, {
   3.756143550077177*^9, 3.756143562536339*^9}, {3.756143695541692*^9, 
   3.756143697693379*^9}, {3.7561437955316277`*^9, 3.756143796737253*^9}, {
   3.756146574579453*^9, 3.7561465760317173`*^9}, {3.756147159933301*^9, 
   3.756147161558188*^9}, {3.7562107435879173`*^9, 3.756210801939302*^9}, {
   3.7562108369690866`*^9, 3.756210906890929*^9}, {3.7562109489522533`*^9, 
   3.756210984975522*^9}, 3.756211076978339*^9, {3.756211111452993*^9, 
   3.75621113281013*^9}, {3.7562113153157177`*^9, 3.75621131872064*^9}, 
   3.7562136615073223`*^9, {3.756213732370673*^9, 3.756213749664596*^9}, 
   3.756213890453517*^9, {3.75621407510172*^9, 3.756214088630928*^9}, {
   3.756221551919251*^9, 3.756221583398347*^9}, {3.756221631718973*^9, 
   3.756221632154929*^9}, 3.756221665529406*^9, {3.756223407761814*^9, 
   3.75622346955024*^9}, {3.756225411123475*^9, 3.7562254275390377`*^9}, 
   3.756231363874659*^9, {3.7562314084915323`*^9, 3.7562314110599213`*^9}, {
   3.756231447946885*^9, 3.756231517536724*^9}, {3.7562315491757317`*^9, 
   3.7562316442731943`*^9}, {3.756231755111334*^9, 3.7562317688969173`*^9}, {
   3.7562318004558773`*^9, 3.7562318444543953`*^9}, {3.756231885307659*^9, 
   3.75623198655403*^9}, {3.7562320187900257`*^9, 3.7562320327990932`*^9}, {
   3.756232067913239*^9, 3.756232177018683*^9}, {3.756232262714541*^9, 
   3.7562323668140793`*^9}, {3.756232417693754*^9, 3.7562326296224337`*^9}, {
   3.7562326739686947`*^9, 3.756232783999585*^9}, {3.756233370672895*^9, 
   3.7562334137529783`*^9}, {3.7562334466895103`*^9, 3.756233711247658*^9}, {
   3.75628666712228*^9, 3.756286680578197*^9}, {3.756286895344059*^9, 
   3.7562869515949793`*^9}, {3.756287108631535*^9, 3.756287156278784*^9}, {
   3.7562872275620832`*^9, 3.756287244928432*^9}, {3.756287286089666*^9, 
   3.7562876943306217`*^9}, {3.756292144687725*^9, 3.756292263963587*^9}, {
   3.7562922943716373`*^9, 3.756292341045073*^9}, {3.756292378083601*^9, 
   3.756292430279633*^9}, {3.7562924705884323`*^9, 3.756292525908036*^9}, {
   3.756292563889703*^9, 3.7562926917514563`*^9}, {3.756292771521162*^9, 
   3.756292802847764*^9}, {3.756293028700492*^9, 3.7562930290158777`*^9}, {
   3.7562930782572107`*^9, 3.756293082558216*^9}, {3.756293124077866*^9, 
   3.7562931604518538`*^9}, {3.7562933614314528`*^9, 
   3.7562933977719393`*^9}, {3.7562935897831593`*^9, 3.756293696449957*^9}, {
   3.756293735068676*^9, 3.756293810929764*^9}, {3.756293967079191*^9, 
   3.756293974470159*^9}, {3.756294012221101*^9, 3.7562940598437157`*^9}, {
   3.756294111502735*^9, 3.756294157541315*^9}, {3.756294188870201*^9, 
   3.756294207248509*^9}, 3.756294238006122*^9, 3.756294273348197*^9, {
   3.756294303517749*^9, 3.7562943695546093`*^9}, 3.75629442575954*^9, {
   3.7562944591147957`*^9, 3.756294495498395*^9}, {3.756294899589336*^9, 
   3.756294927458006*^9}, {3.756295865437607*^9, 3.756295865645677*^9}, {
   3.756295956408695*^9, 3.756296016077436*^9}, {3.756296170415904*^9, 
   3.756296174788724*^9}, {3.756296389362907*^9, 3.756296434731489*^9}, {
   3.7562970047423077`*^9, 3.7562970462928057`*^9}, {3.756299066641769*^9, 
   3.756299079718869*^9}, {3.756300331277583*^9, 3.756300332947452*^9}, {
   3.756300402903195*^9, 3.756300422310813*^9}, {3.756300478763731*^9, 
   3.7563004811729393`*^9}, {3.75630062508267*^9, 3.7563006358665*^9}, {
   3.756300673619885*^9, 3.756300777241529*^9}, {3.7563008545833*^9, 
   3.7563008574367867`*^9}, {3.756300954336443*^9, 3.75630097173906*^9}, {
   3.756301032345619*^9, 3.7563010542937307`*^9}, {3.756310265727147*^9, 
   3.7563103155174723`*^9}, {3.756310346004117*^9, 3.75631034651996*^9}, {
   3.7563826258934937`*^9, 3.756382894366784*^9}, {3.756382941937121*^9, 
   3.756383230539545*^9}, {3.7563833002870607`*^9, 3.756383315977311*^9}, {
   3.7563833545474777`*^9, 3.756383356233531*^9}, {3.756383912459772*^9, 
   3.756383914865676*^9}, {3.756384066170746*^9, 3.7563840671522617`*^9}, 
   3.7563843357194567`*^9, {3.7563844123540792`*^9, 3.756384489494129*^9}, {
   3.7563846168096952`*^9, 3.7563846495478773`*^9}, {3.756384753090228*^9, 
   3.7563847577847633`*^9}, {3.756466809546493*^9, 3.7564668254183617`*^9}, {
   3.756467243796472*^9, 3.756467309765403*^9}, {3.75646747055219*^9, 
   3.7564675502403183`*^9}, {3.756467584168499*^9, 3.756467643454492*^9}, {
   3.756467696462799*^9, 3.756467908735153*^9}, {3.756468023241139*^9, 
   3.7564681032624617`*^9}, {3.756468207685101*^9, 3.756468215822713*^9}, {
   3.756468318966177*^9, 3.756468342095788*^9}, 3.756468417127316*^9, 
   3.75646855916963*^9, {3.756470565064533*^9, 3.75647060781323*^9}, 
   3.756470641383808*^9, {3.756470691580412*^9, 3.756470730420197*^9}, 
   3.756479184346808*^9, {3.7564792512766933`*^9, 3.756479264832137*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"e6ee71de-10b6-46de-bd08-b2d14f1f1b4f"],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`alpha$$ = {
    0., 0, 0, 0, 0, 0, 0, 0, 0}, $CellContext`alphabar$$ = {0., 0., 0., 0., 
    0., 0., 0., 0., 0.}, $CellContext`aReliable$$ = 
    3, $CellContext`biases$$ = {0.0625, 0.25, 0.375, 0.25, 
    0.0625}, $CellContext`bReliable$$ = 
    2, $CellContext`coefs$$ = CompressedData["
1:eJxTTMoPSmViYGBgBWJOBgSYpOIJRIfsSaUZsIIHOMRxAWLVfyDRXBi4YP8A
7N5X9ku25d7elvvb/sd/EGB2kAEJT2JyuOABot/YK+B1D/nmAABMfkgo
    "], $CellContext`d2b$$ = CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQCE4Gl4DRL/3Q3gKDhBa58DqVSBgBOE3GB5I
AwM1B4i40IFJKp5A9Alq/4H9lj/ill0WZXJ4EZV6WPCy3gGIua4OCxilgCjg
wPbc29tyb/s7lAawA5HrASG5h4JyDw0dlnx/DtJxoGTtpocdmfftZ5hs91s0
ienA2cau5vepRg5gZYL+B+rfHK97czzGoe+xRd/jGfEHljhpAVGYw0HOOQc4
5zgfyPweeO0Sh4oDxB2f9ke2d4tnbf9rv1itIZFzjf6BQluu64sLfB0uhU6w
2PMt7sBF3rsXeO8mw/kweZh6mH6YeTDzYfbB7Ie5B+Y+mHth7of5B+Y/mH9h
/oeFByx8YOEFCz9YeMLCFxbesPCHxQcsfmDxhRJ/wPiExS9qfFMKPtgDACHW
4XI=
    "], $CellContext`d2t$$ = CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQCF4rL3vkfY+0wMQXoADhI45sHoVCCRB+A2J
B9LAIMwBIu50YJKKJxApQdV/2P//k/7/T/npDkfDa4Co+8DZM0DAM99BPOeg
WI7jMoj5M5Y6GIPBnAO/lvj/WnK+3WHDj671P7rSD0DcYQKR39x1wLLvsUVf
8maHG026N5pqT0LMe3PZ4XihzPFCmysHgKYeFNM5DbE/YTuEnzPdoVkXpCPl
gCAIXFzo8HKyHRCdhcjbPHW4dxcEPh6QARkk+tlBD2zBqwN7dgNB9HUHjdpL
6rWXth8Akeq1rQ5ge8+sOfDEAuSgmw5gdz3+DPHPAUZHCJ/5INiYtX+g4fHq
ANidMqeh6mdAzN+92sFr/hfP+V9uHoC46yvUPcwHwcos2B25tyUAEeNBFzD4
4ADx18UDG1ijgWiBg+wVRyCaC3F/4RlI+Oi+OFAOBt8dIOJ/DoCN4f7mEAoG
Tw9IVE4Ur5x4HBIfB6cdkFrACERVDhB61QGI+DGo/DWo+XfgfJg8TD1MPwDn
qRMM
    "], $CellContext`d2tLeft$$ = {{1.}}, $CellContext`d2tRight$$ = {{
    1.}}, $CellContext`dosIsing$$ = {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
     2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0, 
     0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 0, 
     0}, {1, 0, 0, 0, 0}}}, $CellContext`eval$$ = 10, $CellContext`fac$$ = 
    Rational[2, 3], $CellContext`func$$ = Function[$CellContext`x$, 
     $CellContext`densT[$CellContext`x$, 3, 3, 
      2]], $CellContext`funcChanged$$ = False, $CellContext`funcName$$ = 
    Tooltip["network reliability", 
     "the two terminal Moore-Shannon network reliability for the toy network \
illustrated. \nI.e., the probability of getting a message from Source to \
Terminus when the probability of transmitting over each edge is x"], \
$CellContext`hFracIsing$$ = 0.25, $CellContext`isDiscrete$$ = 
    False, $CellContext`isMonotonic$$ = False, $CellContext`leftM$$ = 
    1, $CellContext`lenReliable$$ = {2, 3}, $CellContext`lorderReliable$$ = 
    1, $CellContext`matchData$$ = True, $CellContext`matchName$$ = 
    "data", $CellContext`mBinom$$ = 4, $CellContext`mIsing$$ = 
    4, $CellContext`mpair$$ = {1, 9}, $CellContext`mPole$$ = 
    4, $CellContext`mReliable$$ = 3, $CellContext`msg$$ = 
    "\nEval 10\n\nnew alpha {0., 0, 0, 0, 0, 0, 0, 0, 0}\nnew alpha bar {0., \
0., 0., 0., 0., 0., 0., 0., 0.}\nNew Bezier coefficients: {0., 0.25, \
0.821429, 1.71429, 2.5, 2.32143, 0.892857, 0.5, 0.}", $CellContext`numPts$$ = 
    9, $CellContext`oldFuncName$$ = 
    "network reliability", $CellContext`oldHFracIsing$$ = 
    0.5, $CellContext`oldLorder$$ = 1, $CellContext`oldMatchName$$ = 
    "data", $CellContext`oldMBinom$$ = 4, $CellContext`oldMIsing$$ = 
    3, $CellContext`oldMpair$$ = {1, 9}, $CellContext`oldMPole$$ = 
    4, $CellContext`oldmReliable$$ = 3, $CellContext`oldNumPts$$ = 
    9, $CellContext`oldPBinom$$ = 0.5, $CellContext`oldPtPole$$ = {0.5, 
    0.5}, $CellContext`oldRorder$$ = 1, $CellContext`oldWhichPlot$$ = 
    "normed", $CellContext`pBinom$$ = 0.5, $CellContext`plot1$$ = {
     Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.5, 0, 0.5]], 
            Line[CompressedData["
1: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
Qsr/AG4rSo9MTPDAT0Jlcc8Zg/8DHus2iw==
             "]]}, "Charting`Private`Tag$38660#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
             "]]}, "Charting`Private`Tag$38660#2"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[1, 0, 0]], 
            Line[CompressedData["
1:eJxF0H0s1AEYB/A7rlHW6fRiPzp2ovIWk5RUKhZ5qXmbLG8T0vWGbKXVdM1J
XmLtJuX9JaUbR+6scmLctMz7EYo7ziXceducGy1XbfU8z/bdd5//vnsYUTf9
Y7RIJJLvn/xtr5iZ/tbZoBOkf0dxM4qXEo6u/32wJL+wgXAHe3cPvy0iAsHB
0ermp0Q0eNzukVs2kQQu3Xk+LYNIBbN0G/Y9JjjgCyFlvKXlSrCehhXqYcID
W/gtzLRn8sG3e5xd81fegw35NAmZ3AJulLl19R5rA7cxi4xDlCKwau9x/Zrr
n8Baa9xtxhadYCdNZGNAbRe4K9Wxp8OqF2yaq1irXugDK9RSyZD9ALhyrqmT
+kQMptJfLcrlg+CsK4LYUvMv4NWTXHlcyjA4yUHE39U+ApbWijL7GV/BP5mD
BZZ3v4GtT+lsxDaNgT3KGZfrDSX4L3qE2WSoFGyjDNIb9p0Ab9df0hWtoykt
Bbw9hZPgq45No5u9ZWDu2ajSj6tolcJo23TeFFgQ4KHNcZeDUzzZJfxpNGPc
a6SC/R189HAqh3CYBoea9K6RxWhVZ7YsnvUDnE8JT/I3n8H9EkG5lgi96T4r
0DlhFkyqDufJDObAiS942QZt6GbrdF3aDQWY5pVo85CqBI/Z9omThei6Yldz
efg8OIznRKNvoB+wy1hjbxbANTP0AqrPIji9iB0pOYeO9p+3qPVD7xYK63yD
0Rk5FzuyotBxTs+XtySjzVJ3eOpUoTeO3Ns6/Bo9Oj81UMVF5wY3hJ2pR2us
/G+xheix/pxibTH6XZr6kngIzXGJsKwYQXu/PMA/LUF/uNP9mTWLzrM9lOOn
RCfICgMZi+j9PtekrStoCnmwMleNnhC4MCPX0UJmhZ39L/QzUz2VRoP+DRRC
Ph8=
             "]]}, "Charting`Private`Tag$38660#3"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> 1., Axes -> {True, True}, 
        AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
        Identity, Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], ImageSize -> Medium, 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0, 1}, {0., 1.785901103034143}}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       LineLegend[{
         RGBColor[0.5, 0, 0.5], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 0]}, {
        "function to approximate and 9 sampled values", 
         "1 term Taylor series at 0", "1 term Taylor series at 1"}, 
        LabelStyle -> {}, LegendLayout -> "Column"], Above, Identity]], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           PointSize[
            Rational[1, 32]]], 
          Point[{{0., 0.}, {0., 0.}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{-1., 1.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           PointSize[
            Rational[1, 32]]], 
          Point[{{1., 0.}, {1., 0.}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 2.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           PointSize[
            Rational[1, 32]]], 
          
          Point[{{0.125, 0.3834070563316345}, {0.25, 0.9520111083984375}, {
           0.375, 1.4967092871665955`}, {0.5, 1.77734375}, {0.625, 
           1.6473707556724548`}, {0.75, 1.1526947021484375`}, {0.875, 
           0.5289644598960876}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.875}, {0, 1.77734375}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 0.875}, {0, 1.77734375}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, 
       Ticks -> {Automatic, Automatic}}]}, $CellContext`plot2$$ = {
     Legended[
      Graphics[{{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.5, 0, 0.5]], 
            Line[CompressedData["
1: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
Qsr/AG4rSo9MTPDAT0Jlcc8Zg/8DHus2iw==
             "]]}, "Charting`Private`Tag$38884#1"]}}, {}, {}}, {
       DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
        AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
           Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
        GridLines -> {None, None}, DisplayFunction -> Identity, 
        PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.05], 
           Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
        DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
        Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0},
         DisplayFunction :> Identity, 
        Frame -> {{False, False}, {False, False}}, 
        FrameLabel -> {{None, None}, {None, None}}, 
        FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
        GridLines -> {None, None}, GridLinesStyle -> Directive[
          GrayLevel[0.5, 0.4]], 
        Method -> {
         "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
          AbsolutePointSize[6], "ScalingFunctions" -> None, 
          "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              (Identity[#]& )[
               Part[#, 1]], 
              (Identity[#]& )[
               Part[#, 2]]}& )}}, 
        PlotRange -> {{0, 1}, {0., 1.785901103034143}}, PlotRangeClipping -> 
        True, PlotRangePadding -> {{
           Scaled[0.02], 
           Scaled[0.02]}, {
           Scaled[0.02], 
           Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
      Placed[
       PointLegend[{
         RGBColor[0.5, 0, 0.5], 
         RGBColor[0, 0, 1], 
         RGBColor[1, 0, 0], 
         RGBColor[0.5, 0, 0.5]}, {
        "function to approximate and its 9 Bezier control points", 
         "1 Bezier control points from data on left", 
         "1 Bezier control points from data on right"}, LabelStyle -> {}, 
        LegendLayout -> "Column"], Above, Identity]], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0.5, 0, 0.5], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0., 
           0.}}, {{0.125, 0.25}}, {{0.25, 0.8214285714285801}}, {{0.375, 
           1.714285714285702}}, {{0.5, 2.4999999999999964`}}, {{0.625, 
           2.3214285714285676`}}, {{0.75, 0.8928571428571335}}, {{0.875, 
           0.5000000000000036}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 1.}, {0, 2.4999999999999964`}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1.}, {0, 2.4999999999999964`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[0, 0, 1], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0., 
           0.}}, {{0., 0.}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{-1., 1.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{-1., 1.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{1., 
           0.}}, {{1., 0.}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 2.}, {-1., 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 2.}, {-1., 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[
      GraphicsComplex[CompressedData["
1:eJxd03tI01EUB/BtYr7SUkKZobBc0vojJQOpjGqIWrpoc/YAs3wU/gJL8YWR
pKY9Vy21FmQiuk1bthL8o9TWdLK2rKlbtjVlTV3OrbUZipm2qJDOgR24XD58
7z3cP86l5ZznnKaQSCTW3/Vv96yclVD1VWrj3v9Wc9JJc9+F4MqluKdJkc/A
JlbyXcXNbnDsUL1VsPASPPL87BUy+TU4JLuwZThhABxpU7uOOQbBbBEx3Vnw
BpxVbrCEb34Lrq+8dSNd+g68xSu7Vbl1GMwaJlseO0fA1PhF1VisFqxlaLuD
buvACZmvPlksH8A9HUOHW+gfwfSqfk3+JT24tcjYHKowgAOdxtJRmhHMkNjr
GBfGwcerImbP9E6ASyfj2V1hJrAos3TtZOZnsCIgm6RnmcGSbStuxTL6oUks
jGqaBFO4So1f6hSYSRTcky2ieQHR3jP3p8FpxZylhkQLODSf39g9g37xK+N9
W90X8OiRO9ep22fA83uMTrIOzbM/0BdWW8ExdILg0Gfx/W65gDKIbmriHdhZ
ZAMLVIRwKsQO9uvpqQkZQHNTG9zrz30FdxCVtJogB7iYNa6q6EMnyw5SLVnf
wAua/WsifqPDRJ1lExInONGXwQ9Kc4FXaw68+h9qwZtqN6T4iF0eeQk4Thnp
8K/APJjpL/TSeZ7Pw/mzRsl4OZiH564rq+tD+9K8tdU2z/tcsLw8up11FPPm
+eCTSV1oXpdPL9OEruVTbPIFz36JOE/y9o1SNubm3Q068RO05ue1mDYDWmm4
fILmQjNTqktOLXv23wGOypvNMB3CnGzWBeo70HOP1IRuDG29OChgO9C5jn4p
/weaJty3K9aN/gNZ5DfK
       "], {{{}, {}, 
         Annotation[{
           Directive[
            AbsoluteThickness[1.6], 
            FaceForm[
             Opacity[0.3]], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            Opacity[1]], 
           Line[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 
            12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 
            28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
            44, 45, 46, 47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 
            55, 74, 68, 63, 59, 75, 69, 64, 76, 70, 77, 50}, VertexColors -> 
            Automatic]}, "Charting`Private`Tag$39053#1"]}}, 
       VertexColors -> CompressedData["
1:eJxTTMoPSmViYGDwBWJmBlzgg/1AiR+49Hlq3vaDcPkA7uYolUmv7Zffid5+
4voRuPg1Ds1LvKde2W+ZM9es6+VxuPjlGRFFc1lf2Vv4zy2sOXYKLm60Zsbj
BL+X9m726/ycH56Fi+sVhOisb39h/3TCvuK5yRfg4n3bFdwMzz23t74r9N7n
/EW4eNLEso5Iief2ESfydz+LvAwXvyLtsYgn+Jn9+jWrn0qcugIXX6Gp1ft5
1lP70/ofEkwjr8HFpV60+6defmL/u1exm/Xhdbg4k2W+VS3/E/u0p4bCeX43
4eK+vOnfTkQ8tp922+vNgVu34OKmk251zp/0yJ7ptJPyGp87cPH6WXHvVt58
aG8c6by68e5duHhacJyWveBD+4pDBo+40u/DxY/Me95X5fPAvmZSnbVY9gO4
OMdtps7Lmvft5YQz9WSMHiLU39RdfHz2Xfs4AeeAd68R4i73K+OVNe7Ya1RP
9pRa9AguvoHzZs7p3bfsQ0wzsnenP4aLR0zV1+w0uGkvn6OzR0PhCVz8kPry
9nX7r9t7fyox5X6BEM+SFpv6Uv+aPdMz4zb3NU/h4n+MZ3wuWH7FPjzsEWtA
8jO4eFCw9Zd4y8v2vGKi685qPoeLP7t8dXHKmov2SUHmreKPEeI20RO/XrC8
YO/w57zx7hkvEOmU/4CB8Nyz9o1f33BdiX2JsFfT58r6jlP2cdk/BXaKvoKL
dwRJ7ZFeedx+gUGXvfBdhHiD7XXGzd1H7OuKuOZaTn+NCGeza92Siw/aP1Nk
vLTT9w1c/MKHb/mGk/bab1Ko0V8v/BYuXvBLrqUtabu91JxnuwvOIMQN5E8r
VM3ZaP807WrB8invEOE/ceWnjq3L7K3nW/01j3wPF18gsSaC4eYUKH/g8j1p
4rjUUUs9rc0ZKPMHm71DxT2Y4gD+CFYN
        "]], {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {-1., 1.}}, PlotRangeClipping -> True, 
       PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
          Line[CompressedData["
1:eJxd2Xk4VO/fB3BpE6koWZJKkiQVlVZv4UsLUkolQiRUki202kpKSaSi3Z6U
SiXbnCGy7/uY3WAsU+qbJPXcfr/n+eeZf+Z6XXPmnHN/zj33535fs+jIqT1H
xcXExFImiImNv///l/Po3LIrimugMid6hdnQOjj+x8bQOTN/6d8+k//1Xlje
zJA4zrLGf493xoLjTr42JS5w+I99cOqqm3dcjB/s/+NQZF9YMhqmcxlO/3EM
aszTz8n5xKJ0j5XYl6+JkNV501lckoizP3VfmKi8RKbCy+1/2zLAMje9VXTt
LRxE4RsWt2ZBpyK6O+57Dqg8jSf3Jmej6pX75QkTCiElF7FbLvI9Zjt6Pq7Z
TMd5jS17+9g5UO4tEx3oL4bdPZdnElW52Jvkxss4WYr9JwKjj1vm44HDqfgI
/1KcUL+Vf9o6H/x5vlauIaWYnsS94m2bD5/oS0WL75WikzdvsrtrPmIvxj27
X1yK46mcAdVL+Wg6+MkpfN5nfNXoayjJzMf+GYv4TmWfEc5aEtwrUQCbM618
pSXlSBtxddfMKoDvzlOlWFmOgXADVkt2AW4tmJLuvKEctk3lMsEfC0Av1T2V
aV6OJkbe+8qiAqgp3BzZ6lcOI5rxlk3NBej58M8Mt9Jy6N3U6LzwqwB+v17r
vXerQG+syqsXBoWIOR8ZYZVZCX8nq+uziguRXNFv/c+HSnTVyrj3lBaiQNFs
sR69Ets7jtzJryjEQLZknlJzJV44ruTYNxTin8ErA5yxSqzgu5wI5RZi5HCw
pad5FQ6kq9svFaPBweDM3Mj+KiSJCZJHlGnQnOj4tESzBq9M4j/27KEhOnK4
OWptDY6/9bmaspeGiQo3pA4Z1KBrLHXU2ZqGTq1cH9G+GmTJUVUdB8nx1nKm
CkE12LO/b2uOAw2T0sv63Fpq0LfKTmeNBw2nNe7dn2JYC3u7HzarwmnYVTOB
nzZYC6OoecdOf6Ch/3Hs7dffarFi7qhDaQ4NkV7LjHJ/1mLlfWsb5VwayuV2
P60Ur0NDs7RFUT4NJraPHURz66C3BTsnF9GAXv3ONajD7JT4ZTZVNKyeeK65
8GYdxI6lVuzk0KCk9+Nz06p63A7pWes5hUJXclLGjnX1kO9+Ffl0KoXMufui
CjfV4+/+AX6DBAXjH2/2p5nUY3tqTIyuFAXP7NOCc7b1EI83nt49k0Kp7sBE
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
xlVjIjyTTLnEztiA//6r9AX/9//S/wBXJTpY
           "]]}, "Charting`Private`Tag$39076#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.1417410706885162}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.125, 
           0.14285714285714285`}}, {{0.25, 0.14285714285714285`}}, {{0.375, 
           0.14285714285714285`}}, {{0.5, 0.14285714285714285`}}, {{0.625, 
           0.14285714285714285`}}, {{0.75, 0.14285714285714285`}}, {{0.875, 
           0.14285714285714285`}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.875}, {0, 0.2857142857142857}}, PlotRangeClipping -> 
       True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 0.875}, {0, 0.2857142857142857}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
          Line[CompressedData["
1:eJxdmnk8lG/095GlEqEIoRRC0qJSoo9UliQttiIlKqVFEUVSWVKUNQnV2Nds
Wcq+zz2JhCLbjK0wwwhZEj339/d7nn+e+cO83i/Xfd3XOedzznWu6zWy564f
P8/FwcFxlvzz3/f//7GbE6M9ktgOzXlfu3uCJrD5Hz6A8doN29wW2f1fNkHm
lhbLByNO+N/xdihN/plZX+GFs//Dzqix939u5RCKM//D3nC5mHD4YGUstN6d
4TMp9MZ96O9+ZRSH1Q7JB9da+mBDWffUibY41Lfvrnwf7Yvz/AP5dGY8NAqt
iobWPIbjWOmfu/xJELsT+9ZQ4RkqLrw7pLYpDbb/M38YzC37NrTcy8Yyjd9K
2Y5hsKv8LDhQlo13t5uftFPDkNku9/QNRw54pgIPb3J5jhUB/udFHuQgZWxx
Y1NTOIYTp0SmPd5hdODPN+mAl/j4h6U/czEPro3d/e8WXkM9r3lr9sJ7yC0v
Odhl+gY3tuy6c3vHBzQYRSXyvn0DjUCi4JfDBzwd2JibvomCIX4pqbnWD+g5
N3jrXwcFTm9Z3o7phfA6bTMbvysW82KRztJ6xaAeP8Ex9iseiq9YE9sPlsHm
K69ljGQCwsaU7d9dL8O0eWHe8f0JYOc6hE++LIPcaVmHvLAEiFG8+8pGynD/
Ivurm3oixpLmamBQjp13/dN4PJKwfJPF0wuD5YhPqDJbvTgVm77zMn4LVUJd
0TX705ZUbLuS+u3Zukp8SVVedu9kKha4X0gu216Jv5nBFYzUVNh4Nfe/M6uE
ReEZlUSjNNRN5M4WRlZC6PMc59bQdNzk2JBdKF0F9xm1t7oymcjqeCAsKVQN
XtslmRt1M4HfiRxrZarxsr47S+haJlq7Xo4JqFQjK/ZxbntJJq682rYuVq8a
Tons0wWqWeCNzZx861GNhKMHzxs2ZOHP1bO37AaqMcyz5YdWbxYe7TCNn/hV
jR1Fkhe3TGVhYFBk2ZWFapTLj9mLymTDWceqSXxVDdr/RF6hX81GskXHETu9
GggmjDk5CeTAO+e9X3NcDcxPdUyel81BgWzOun8ZNYheXnvLYkcOLjntXida
WANltyhXrdM5+MOKieJorIGOsa4739scuD88dKf1Tw1cZ6MeRh1+hwWdf9Sw
w7WgG+kFV/nn4t1WnYqPjFp8daf0XojJRdqx+3VrhmtBpMyqLS3IhVjX9SXW
E7XI40n/drQ3FyXeCa7hPFT4lQhJde/Kw4uz0h6zilRs39SeODOQh+JzJ+ci
HahQslSbiZrLAyVG7PRTJyokHwcYQDgfMzHyBpfdqeAd2Mvy0cxHSNvUiv4n
VHyPjtu6IjQfmYHBRd+TqXi07GrxJu0C7H08Yk1nUOGuUSvwxbQAs3P+Et4/
qXCyX3PG2aEAI8w9SStHqbCo/sJZFF4Ay2y5gNk/VKjd3amnP1KA57130lpW
EGhj/vtyLvI96gddA3v2EWiSOLmeN+s9wrodaYf1CFTr5Tin1LxH37dq4YTD
BLLj7FaNjb2HEY+XpLQ5AV9LmpWH3gdcfxUvt8mBwLa6kJ8vJj9AYcLlXVcg
gRplwWe0xYW4mDR+qj2UgOWTx9vnpApxe22cH/UFgQCD+w+sDxbiQFFijtMb
Aj+oV1fLhxfC3QB9KzMI3N0wVGGWWgjOLWnWL7IJrHxkZ+9XWohhM6vWpXkE
NHUt85g/CvFD9txcdRGBiGp94xz1Iuxtykt6RBBQkav+3WdYhAYt/aTQOgKV
XogWPVsE3som8eAGAr91dg7d9itC6itX/7MtBPQr1nvhexHMRZ5qn6AT6F37
RunGSBECJDJsWD0E7tyXbIzlLAZrj/xF134CCRCW5lUuRpffc3PbIQIcpQv5
n9yKIf50zjxsnECYtNvphWfF6FD0ly+dJLDR4/eiLXHF+FP1UK99ivSHJuto
aF0xdLfylg/9IcCOujhdTSefD1Da1vWXwKO53ldTE8VQ5ejfXLVAoKDw+/BJ
qRI0HxrmvshFwyFJ02D/LSV4XeUzLcdNA+NOo3rJgRK8jzVP/8pDg8Buqvfa
qyUwedkRsnwJDfYFuTI/S0rg3ypd/0OQhgWxLTXiTSXgfmhnqClEQ6hLmsOh
HyX4zHdr2luYhqodse/fCpbCL19UcGwFDRbPpc/Q15Wif35tqIgoDaOTETzC
6qUYPs9yUxSjQSI38LjzmVIoV51MUhWn4d0K/tkEp1I0C2zlXSNBrtfJ903r
o1KYqKj95ZKkgd7EqbskuhS8UufD20l23ubB0sgqxcSOqp6E1TQsDpkJuVJd
CnG1fUw7KRoSfjntft1WirtbPpatkqahPuuyLydnGaTf3pu3kKFh5WOT+T6x
MmzfKtc3TvIpm73OtSpliD2zK+veGhoouxWZyTplqIiedP5Lcr+wyDl/C7IO
B/nuu7KWhk3Dc21Xr5UhT1lIoYHkG5UDxke9y1CVnrRtnSwNOZGfa7dFlkE/
3dzVnuS/Nz9oiWaVgWP1Gu4YkrUN43Kna8pw4fCvwTqSH65/urG9owz/5vJ2
DJHcMOcSW/yrDOdPGPyZIXnx5ayAz4vKoTnmrjtH8kYzeaJcsBzewyLKYyQb
60QuypEox512am4ryddVlyNOrhyV3fpT2SSHSnq7hW0uh1vsroV7JOfzzub5
aJRDyVa1cy/JbeNXf7kcLAd7Ku/NL9Keue5eFfuj5fBsMrZ4QbJMnbn9Scty
iC2/IbqF5H0Fn+IOXSjHS0evH0Wkf+zi9tH33CiHv8NAuwbJvoH5kpvulmPR
xmHOt6R/k903msk8Kgct/PtlEZI/XaQELw8px46TY3IOZHxGTojWc7wqh/zA
GRSQ8duu8m9/Xw75/PbWL0pkfM3EnT1bSspxdH6J/VEy/ne4hwpriHI0JTMj
L5N6Ke1s2prcXY5j11+IuK0i9ULoXX05VI7DVWq3rpN6484rTn4yWQ4z1/VZ
FqQe9Z4mrrm6tAKC2xSHeUm9Xr2z2tJatAKpNgW8n0g9PzsfFG68tgJNR57t
9CH13qLlJrBtZwU0XAOXtgjQ8FuJrb9+XwUcH3XWXVpGg7iYnffKwxXoW1rQ
PrGUButRo7kpG3K+9l7JAT4afr6WHSp6WoFFfGcKtDhp4PcPl3sbUYHni9+6
uv4joOrKf/Z1XAVsCYGZhHkCzsa/v93/UIHVXJ43emYJLPwjqg8OVGCrxYrG
5l8EVtg4Uj5rVmKCS9gmh6w/O6hva57qVWKJ9uYdh7oImGxiDhseJ/dtKzPe
tnYCIbPndxAXK/E2Ib/p61eyPoZYfiwPqURXyTUXS7LeiVXpTmYPVkLi5jbG
y1wC25W8JRwnKrGw8sDl/+rpicCKvaoLlRgw+v3en6y3zy01H6euqIKm29cW
i2RyPZNbZeL2ViHXvNfCN4rAKnlp/bCwKvDH0nl33yewy//U1eNvqvB0yUu3
5LsEzH+9CBFKrYKlreGN5XcIRJaIdAWUVeG992/R6hsEpMwW3/QZrkLjx5/3
aOcIrH40EeWiXY2mwme1R/aT/x+isS1Y1fi9sV86eIEKAfsIWE9Vw5lzxypT
cv/i+nkh0JajBmPiVj0iU1T09S/afG1lDXY0Hl16d4SKRIbWNS/NGrQsvx7N
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
X3mN4f/93uv/ABmj398=
           "]]}, "Charting`Private`Tag$39138#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.19634959638479596`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.125, 
           0.5}}, {{0.25, 0.}}, {{0.375, 0.}}, {{0.5, 0.}}, {{0.625, 0.}}, {{
           0.75, 0.}}, {{0.875, 0.5}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.875}, {0, 0.5}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 0.875}, {0, 0.5}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
          Line[CompressedData["
1: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
oS7PU9L6LQuNhQ43Fi58h9SSLIPE57ngs3JJa95dCeP8NSny6s+wbuQD24xR
DfMZ780V2a9gkmX/Ld+5FrrV17q559/hpBe9X2TjRwhaPZ7f7VeFOL+IsKMF
DZgsc+YyLaiB/CKr9Br5ZtQZ3rAezPiAw80L+x+xKDC6nvTjZWQDGGnxt4vG
KWh6dlR0JKkBEa5y2mWTFNjcDC7ky2jAR4Ej6Q0cVBzTrFhuVtIAXfM0S7Yg
FdxyA8tTvzQAI8RnFVAh88vBlV+hEdsX+Xa8i6Ji9rlVYcqHRoio/q5rV2zB
fNKxUEVGEways/IP7myBWoh5afyvJhQImka/02jB6OL36uPzTdD5/ez4I90W
1Kl0CCSuaYbL80uDvuYtONjx813AzmbUKjMXSYe2oGyZ++EvV5vhodhPuH5p
QY+M+GTzYgq0025LDvW3IN7tXuKipRSsWK3NZT7agtOZ1hLKKyhIZz9o3Per
BUfv1A5eF6CAUnDGXHh5K3ybRgSnN1KwcWu3d/nOVrhNLY0U1aWAKtdSvDKy
FV4vLMpVgyi413FuhcPtVjBn5FTablBwPmjq3PukVogsWhbiFEbB1CeJtb4Z
rfhR1FkdHUPBuuiL3iMvW2E6JOH38D4FTr95iOpvrSgQy2ngKaOAs2p/rfeu
Nqzb9burgIxL08Xu9e1EG9be3txf/YOCpHUXLyvqtCFD63hOxwQFCp4JckOH
2nDV770Fc5oCU7mBWyY2bbB/tcB6iIuK9KhAI4WoNlj5/Fq1QpwKDfM3nf39
bThzq1NPWI+KC/F3ar+NtGGm8LOOtz4VaU0ez/tYbaBqG7i1G1KxeO+2mN7J
NvTEONgFGlPRuPH+gU887ai0lMsuOEWFBdu/pFWlHbZ/ti4zcqYiUtYiq2VX
OyQ4VBe7XaSiwmrXbSrRDmH+ZPnYS1RItf240HygHZb97OlqDyoYL8/K1Ju3
4+q6tvuzflRcDtSJrwxuR0RkTeGzCCryyySCKm624+/95/vvkHn0eWLWpTyy
HYV5I5xXYqjQOv/c4G1SO8q4JP4oxVOx1EBmcWl+O7rXbMt2v0tFksASt6dt
7Xgsd2EJcqloONRvWdjZjh0KqVODeVTMh5QfetLTjnF19spbj6mwnr4s/3i4
Hcb6Xlm1hVTIfRn5mjPbDq3Inqu8JVSU5dQbpUl34L1nQDOrkgoh/yrX5fId
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
DdvPOacTlJ7t/u+tsO/4/94P+38botYb
           "]]}, "Charting`Private`Tag$39200#1"]}}, {
      DisplayFunction -> Identity, Axes -> {True, True}, 
       AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
       Identity, FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], Method -> {"ScalingFunctions" -> None}, 
       PlotRange -> {{0., 1.}, {0., 0.28163186351706426`}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.05], 
          Scaled[0.05]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{}, {{{
          Directive[
           PointSize[0.012833333333333334`], 
           AbsoluteThickness[1.6], 
           RGBColor[
           0.5411764705882353, 0.7137254901960784, 0.027450980392156862`], 
           AbsolutePointSize[6]], 
          GeometricTransformation[
           Inset[
            Style["\[FilledSquare]", FontSize -> 25], {0., 0.}], {{{0.125, 
           0.}}, {{0.25, 0.}}, {{0.375, 1.}}, {{0.5, 0.}}, {{0.625, 0.}}, {{
           0.75, 0.}}, {{0.875, 0.}}}]}, {}}}, {}, {}, {}, {}}, {
      DisplayFunction -> Identity, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
       PlotRange -> {{0, 0.875}, {0, 1.}}, PlotRangeClipping -> True, 
       ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
       GoldenRatio^(-1), Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, PlotRange -> {{0, 0.875}, {0, 1.}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1: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
f2gNxdtrZtHye1POfkZnfe6gTaMNImOfKUqxIDb9m84k+q1TsCBsYUEa9dCm
MfSujeaCZltZ8L5bBoj9XduOXTB8BwuOfTzlW4v+9+7J9kZ0hcOcQA06vU7k
yLqdOJ6nxi+riPcryTqEokVaRN+Uo8dmDGpCdrHghkZhAJk4T/nFPX68mwVK
/c9nv6P7Ppxku6vAgoLf98SI88tbOm1DDtrQuvNCBFqPy0xhBv2t60/YK3SO
tZP5bUUW7OiR4glFB8u/yb+lxIK/WQm1QcR5JH/I3U6ZBfFXLg8R5ykf5tM/
l1Qxn56E2JihW9iLTT6gd/5+oWiKVpabLuhFH//TOkWcz3q9zIMc1LB+BY67
G6K1ZBW2PjyA8db4z0wHvfIB1ShGnQVxOX8+Eue/UOm1OQOA+dJpJS2E/ujw
2vO2NgvuXFKdz8HzZWSYmVkmOvbWlRNZ6Nc/pA5OobeK7Ar5jg7h+zzleooF
9uIfRZPRHp9y7V11WHCpUmZNLPpCe4upyxmsH/LD58HEeVlXQvXWORZQd3+r
vIz2lIsZs7+A8diuKDWH5/FNcZ+DvxCOftg7hf4hnrZrCB36ITB+gjj/ryRb
WV9kgcy5uq3E+d1lsJ1pYYr5zb2OsxNtE7+RbGyG/Scn1og4/xtIvXiucRXr
deLvsafo7eu8lNbZYL4LRhiJojNk2iQE77LA+LjngwW837CZq47+CmBBT4jG
yRq8/yiRhWzXvcV8bhnqMFmmgfzpwozxJBaUvvgqXYT3p8Elu96kPBboB/sf
kVqkQWDrq8KcGhZMGrVZK8/j/auL5BHXiv0vM2jr0VkaCAkW8mv8ZkGiQ/fy
vmkabL5+8ITCIgvmWz7dbfhLg+G+TMtF/mZoHX5j4/aHBlEhKbISEs1QYbpl
JWmUBuJXH5SM7GmG+FcqL4Z+08DEVEcj8nAzmJP4w6UHaeD+4JV1lF4zjH74
2jbdh59XdTp7mjfDMWm+4209+PyRxJ3pN9ERp7aYdNLgS+vxlFdezWC3QmAy
t5UGcx+7Npo8b4baYt52FRYN5F7My9t/bAaT7JgpjQYaSHxeu/NKWjMUC14u
tKXSoHmQbYK9qBn2PnmZ+qiWBvcN7a/P0prBsUqkQxrv2619TYW13c0w2Z1i
NFhCA6mPpKLJCfQPY295Eg2U/Dxe1XK2QPzl6+2WeJ9nC1XT9VnbAh0/uQ9U
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
PvwPaioXHQ==
            "]]}, "Charting`Private`Tag$39264#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0.12315111980647298`}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, 
       AxesOrigin -> {0, 0.12315111980647298`}, DisplayFunction :> Identity, 
       Frame -> {{False, False}, {False, False}}, 
       FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {0.12315111980647298`, 0.39269590311278496`}}, 
       PlotRangeClipping -> True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
     Graphics[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            AbsoluteThickness[1.6], 
            RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]], 
           Line[CompressedData["
1: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
xIHXJMReSGzI+bsRLaV9vhuI/b0vobFCfyNKLbqiWIP9xlM4JeK+FBroqDut
WYXzT8xs2U6QRHYix/pVq3H+Nc/a59eKoyS1VLESbI20+K9R8WKo25p+VKUG
n0ei443ql0WRRfL1ZsVa/H+PTxfF7IRRz3PJjGLsxvLJ3hQjIeRYW+mvUUdC
nIf6dUEDQeT2a2rHoXrcb5mqV8U1rUWsP/E8HdisjUWvpPjWIO8VewZsG/D5
O0ipTXFcha7v9Ih2f0PC/rabfMMHVyBu7VWu49hnTu9lkn186I7FM8KvEd9H
hdeWhAQtR/G+o+SdtyQMKNT2CnHxIPHIW83rmvD79Yf7Yr8tQ48fy2YkYr/M
P5ebUM+FchucLHLfkRC1MReG/RYp3u1Sktve4++tsE7/e/U8hejtHc7Cpkcd
F7woPkf5Om7lldlMguKdlCcBq2co6QvCGrIt+H4UnfpGNvsP5fyKL1zp2PeV
znNKzaco3DJmsf+1knD+t/4Ko+8TlHal1bYbP+D83S+oXFY9Tkna37r5Efau
Oyp1tTYkReWIYWFSG77PdDWfUvYYo7xzfUM8bCdhncDlQBZJozgGEh8TPuJ+
/jqX93DXCCXY72RSzicS2tfmHA4fHKbkeIedfPUZ5/MqhbHIu4OUDxfylNs6
cD8s/6F9K08fZdz14/TgF9z/SK3OjRbspoi6TNZPdJIQIFlOF875QtF0ELvL
24Xz8WR+u+CpT5TjVppW4t0kWK1IWDA2aaXcOnJ8844efF85+mRplNNEkfTV
/2aMrWm/yfK8VxOlKHVHnAe23+OOVrvpt5QB9jR3MfaUulr2Yf63FNWoGOr+
bySkBH+Jvqj/hkJtrn9h0IvPqxpWms/BWsr18RxXN+yzylZoJLaGIrQhenME
drGqgxXfYDUF3Ozi2rDD3SbFttyqoiQtn/Sx7CMhI9y3n3emknJYV47i0o/r
wRSPyT2/MsrQ2ZV/QrALTjzo3zBdSrkaR77IwtZ9v8z74tVSypOhqs107L/f
3hYdvFlCWQg8xnNpAK9XzjjepqiI8qIqtPX6d3y+7g5KtFj1nLJejW6b9APf
zxoOciu4ZVD+2j9sr8C+7hqibTaZThkK0tftwTbrGnMTD0qnFLalK4kNkbBS
qce9zjCNYnba7l8CttEm/qAfax9T7ia0PokZJmHLZY3y91cfUvgm8zlhv3C8
gjpENilGURYKvG5foeH9nTocqMO4THFAmqELJN7f1jcdndbvpkg4c/tNzpDQ
9+HTCd6aeq3Du2UKhP7i+5d657LU+Rqt61zEyF7s/WGenhc/vtYaTPc3v4y9
KuS/n0pHXmo9GR5XmMImbh11eG6cp7Xz1I/eP7M43hYHAueH4rR0XKu1Zufx
/vctH9leZ67lrd7nJbFAwtLh5U/rOw5rZfH9zdXAdpe0Tnl91ECLL3efSAC2
DpV7V5qZptYHWh5rDvta6NhQ+U9ZLauzyf8tLOL1OzacNqgf0gzTqOjc+A/3
xx2uNEHLLs3KlV0rEXZq9dSOXeatmpJ566/ewM7UqDuU/atY8wfzjtk/bFqX
WPpYvafm+qrs25uWcL/tPPJ581F7Td27ja8J7NBLDmw0oqOZpbS07Sb2Zr3R
Mo8GLs2u+Y1OadhuqRGb2kc6NPjaNBPqsJ0snxSufhOrceCxbcsP7K/nqaIb
GmU0zl64urSE7enfd9X+lsC+/wHBT08D
            "]]}, "Charting`Private`Tag$39306#1"]}}, {}, {}}, {
      DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
       AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
          Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
       GridLines -> {None, None}, DisplayFunction -> Identity, 
       PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.05], 
          Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
       DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
       Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
       DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}},
        FrameLabel -> {{None, None}, {None, None}}, 
       FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
       GridLines -> {None, None}, GridLinesStyle -> Directive[
         GrayLevel[0.5, 0.4]], 
       Method -> {
        "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
         AbsolutePointSize[6], "ScalingFunctions" -> None, 
         "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             (Identity[#]& )[
              Part[#, 1]], 
             (Identity[#]& )[
              Part[#, 2]]}& )}}, 
       PlotRange -> {{0, 1}, {0., 0.03124809622089881}}, PlotRangeClipping -> 
       True, PlotRangePadding -> {{
          Scaled[0.02], 
          Scaled[0.02]}, {
          Scaled[0.02], 
          Scaled[0.02]}}, 
       Ticks -> {
        Automatic, 
         Automatic}}]}, $CellContext`ptPole$$ = $CellContext`oldPtPole$$, \
$CellContext`range$$ = {-0.1, 1}, $CellContext`recomputeCoefs$$ = 
    False, $CellContext`recomputeTaylor$$ = False, $CellContext`rightM$$ = 
    1, $CellContext`rorderReliable$$ = 
    1, $CellContext`show$$ = {}, $CellContext`t2b$$ = CompressedData["
1:eJxTTMoPSmViYGDghGII+GDPQBUAM+cAhebBzLlgP0nFE4gWkWkezJwb9re3
5QLRbqh5k0g0D2bOA6g5p6HmbLKXveIIRL1Emgcz54n9dpAxt69B6WNw84hz
H8ycF/Zg1SoP4ebB3IfqX1zhBzPnDdw8mPtg/oXQN+DxAaHR4xdmDvk0AHq2
Xso=
    "], $CellContext`vals$$ = {0., 0.3834070563316345, 0.9520111083984375, 
    1.4967092871665955`, 1.77734375, 1.6473707556724548`, 1.1526947021484375`,
     0.5289644598960876, 0.}, $CellContext`whichPlot$$ = "normed", 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`mpair$$], {1, 4}, ""}, 1, 
      Dynamic[$CellContext`numPts$$], 1}, {
      Hold[
       Row[{"Number of coefficients known: left ", 
         Dynamic[
          Part[$CellContext`mpair$$, 1]], 
         Manipulate`Place[1], 
         Dynamic[$CellContext`numPts$$ + 1 - Part[$CellContext`mpair$$, 2]], 
         " right"}]], Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`matchName$$], "data", 
       "Estimate function based on exact "}, {"data", "derivatives"}}, {{
       Hold[$CellContext`whichPlot$$], "normed", 
       "Plot positive, normed function or its monotonic integral?"}, {
      "normed", "monotonic"}}, {{
       Hold[$CellContext`show$$], {
        Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]]}, 
       "select which interpolations to show:"}, {
       Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
       Style[
       "uniform", FontColor -> 
        RGBColor[
         0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
       Style[
       "bimodal", FontColor -> 
        RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
       Style[
       "threshold", FontColor -> 
        RGBColor[
         0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
       Style[
       "bounds", FontColor -> 
        RGBColor[
         0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]]}}, {{
       Hold[$CellContext`funcName$$], 
       Tooltip[
       "binomial", 
        "a binomial distribution with parameters N and p. Illustrates fitting \
an inherently discrete function."], "underlying function:"}, {
       Tooltip[
       "binomial", 
        "a binomial distribution with parameters N and p. Illustrates fitting \
an inherently discrete function."], 
       Tooltip[
       "pole", "N uniformly-sampled values from a function with a pole in the \
complex plane. Illustrates fitting samples from a non-polynomial function."], 
       Tooltip[
       "network reliability", 
        "the two terminal Moore-Shannon network reliability for the toy \
network illustrated. \nI.e., the probability of getting a message from Source \
to Terminus when the probability of transmitting over each edge is x"], 
       Tooltip["Ising", 
        StringForm[
        "the partition function of a two-dimensional Ising model with N sites \
on a square in an external field:\n ``(T) =`` n(s,f) exp{`` [s+``f]}", 
         Subscript[$CellContext`Z, "N,H/J"], 
         "\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)", 
         2 $CellContext`J/$CellContext`kT, $CellContext`H/$CellContext`J]]}}, \
{{
       Hold[$CellContext`ptPole$$], $CellContext`oldPtPole$$, 
       Row[{
         Spacer[40], "position of pole in complex plane"}]}, 0.01, 1}, {{
       Hold[$CellContext`mPole$$], $CellContext`oldMPole$$, 
       "number of samples"}, 2, 100, 1}, {{
       Hold[$CellContext`pBinom$$], $CellContext`oldPBinom$$, "p"}, 0.01, 
      1}, {{
       Hold[$CellContext`mBinom$$], $CellContext`oldMBinom$$, "N"}, 2, 50, 
      1}, {{
       Hold[$CellContext`mReliable$$], $CellContext`oldmReliable$$, 
       "number of long parallel paths"}, 2, 20, 1}, {{
       Hold[$CellContext`lenReliable$$], {$CellContext`bReliable$$, \
$CellContext`aReliable$$}, "length of short and long paths"}, 2, 20, 1}, {{
       Hold[$CellContext`lorderReliable$$], $CellContext`oldLorder$$, 
       " strut(s)"}, 0, 
      Dynamic[
       $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], 1}, {{
       Hold[$CellContext`rorderReliable$$], $CellContext`oldRorder$$, 
       " cut(s)"}, 0, 
      Dynamic[
       Min[20, 
        $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]], 1}, {{
       Hold[$CellContext`hFracIsing$$], $CellContext`oldHFracIsing$$, 
       "ratio of internal to total field J/(H+|J|)"}, -1, 1, 0.01}, {{
       Hold[$CellContext`mIsing$$], $CellContext`oldMIsing$$, "N"}, 1, 50, 
      1}, {
      Hold[
       Dynamic[
        Switch[
         Part[$CellContext`funcName$$, 1], "pole", 
         Row[{
           Spacer[50], 
           Panel[
            Column[{
              Manipulate`Place[2], 
              Manipulate`Place[3]}], "pole parameters", Top, Alignment -> 
            Center]}], "binomial", 
         Row[{
           Spacer[150], 
           Panel[
            Column[{
              Manipulate`Place[4], 
              Manipulate`Place[5]}], "binomial parameters", Top, Alignment -> 
            Center]}], "network reliability", 
         Row[{
           Spacer[20], 
           Panel[
            Row[{
              Column[{
                Manipulate`Place[6], 
                Manipulate`Place[7], 
                Row[{"consider unions of ", $CellContext`lorderReliable$$, 
                  Manipulate`Place[8]}], 
                Row[{"consider unions of ", 
                  Dynamic[$CellContext`rorderReliable$$], 
                  Manipulate`Place[9]}]}], 
              Spacer[40], 
              Column[{"toy network", 
                Dynamic[
                 Magnify[
                  $CellContext`drawToy[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 2]], 
                Row[{
                  StringJoin["Total of ", 
                   TextString[
                    $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " struts and ", 
                   TextString[
                    $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " cuts"]}]}]}]]}], 
         "Ising", 
         Row[{
           Spacer[50], 
           Panel[
            Column[{
              Manipulate`Place[10], 
              Manipulate`Place[11], "x in plots is 1-exp[-2(H+|J|)/(kT)]"}], 
            "Ising parameters", Top, Alignment -> Center]}]]]], 
      Manipulate`Dump`ThisIsNotAControl}, {
      Hold[
       Row[{
         Spacer[300], "(shift-click scales plots down, ctrl-click scales up)", 
         Spacer[20]}, Alignment -> Center]], 
      Manipulate`Dump`ThisIsNotAControl}, {{
       Hold[$CellContext`numPts$$], 5}, 0}, {{
       Hold[$CellContext`oldNumPts$$], 1}, 0}, {{
       Hold[$CellContext`mpair$$], {1, 5}}, 0}, {{
       Hold[$CellContext`oldMpair$$], {1, 5}}, 0}, {{
       Hold[$CellContext`func$$], 
       Function[$CellContext`x, 1]}, 0}, {{
       Hold[$CellContext`oldFuncName$$], "none"}, 0}, {{
       Hold[$CellContext`isMonotonic$$], False}, 0}, {{
       Hold[$CellContext`oldWhichPlot$$], "normed"}, 0}, {{
       Hold[$CellContext`matchData$$], True}, 0}, {{
       Hold[$CellContext`oldMatchName$$], "data"}, 0}, {{
       Hold[$CellContext`show$$], {}}, 0}, {{
       Hold[$CellContext`mBinom$$], 4}, 0}, {{
       Hold[$CellContext`oldMBinom$$], 4}, 0}, {{
       Hold[$CellContext`pBinom$$], 0.5}, 0}, {{
       Hold[$CellContext`oldPBinom$$], 0.5}, 0}, {{
       Hold[$CellContext`mPole$$], 4}, 0}, {{
       Hold[$CellContext`oldMPole$$], 4}, 0}, {{
       Hold[$CellContext`ptPole$$], {0.5, 0.5}}, 0}, {{
       Hold[$CellContext`oldPtPole$$], {0.5, 0.5}}, 0}, {{
       Hold[$CellContext`mReliable$$], 2}, 0}, {{
       Hold[$CellContext`oldmReliable$$], 2}, 0}, {{
       Hold[$CellContext`lenReliable$$], {2, 3}}, 0}, {{
       Hold[$CellContext`aReliable$$], 3}, 0}, {{
       Hold[$CellContext`bReliable$$], 2}, 0}, {{
       Hold[$CellContext`lorderReliable$$], 1}, 0}, {{
       Hold[$CellContext`rorderReliable$$], 1}, 0}, {{
       Hold[$CellContext`oldLorder$$], 1}, 0}, {{
       Hold[$CellContext`oldRorder$$], 1}, 0}, {{
       Hold[$CellContext`mIsing$$], 4}, 0}, {{
       Hold[$CellContext`oldMIsing$$], 3}, 0}, {{
       Hold[$CellContext`hFracIsing$$], 0.25}, 0}, {{
       Hold[$CellContext`oldHFracIsing$$], 0.5}, 0}, {{
       Hold[$CellContext`isDiscrete$$], True}, 0}, {{
       Hold[$CellContext`leftM$$], 1}, 0}, {{
       Hold[$CellContext`rightM$$], 1}, 0}, {{
       Hold[$CellContext`d2tLeft$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2tRight$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2b$$], {{1}}}, 0}, {{
       Hold[$CellContext`d2t$$], {{1}}}, 0}, {{
       Hold[$CellContext`t2b$$], {{1}}}, 0}, {{
       Hold[$CellContext`vals$$], {1, 1, 1, 1}}, 0}, {{
       Hold[$CellContext`alpha$$], {1}}, 0}, {{
       Hold[$CellContext`alphabar$$], {1}}, 0}, {{
       Hold[$CellContext`coefs$$], {{1}}}, 0}, {{
       Hold[$CellContext`funcChanged$$], True}, 0}, {{
       Hold[$CellContext`recomputeCoefs$$], True}, 0}, {{
       Hold[$CellContext`recomputeTaylor$$], True}, 0}, {{
       Hold[$CellContext`msg$$], ""}, 0}, {{
       Hold[$CellContext`eval$$], 0}, 0}, {{
       Hold[$CellContext`biases$$], {0.0625, 0.25, 0.375, 0.25, 0.0625}}, 
      0}, {{
       Hold[$CellContext`dosIsing$$], {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
        2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0, 
        0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 0, 
        0}, {1, 0, 0, 0, 0}}}}, 0}, {{
       Hold[$CellContext`plot1$$], {{}}}, 0}, {{
       Hold[$CellContext`plot2$$], {{}}}, 0}, {{
       Hold[$CellContext`range$$], {-0.1, 1}}, 0}, {{
       Hold[$CellContext`fac$$], 
       Rational[2, 3]}, 0}}, Typeset`size$$ = {
    785., {210.134033203125, 215.865966796875}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    False, $CellContext`mpair$31238$$ = 0, $CellContext`matchName$31239$$ = 
    False, $CellContext`whichPlot$31240$$ = False, $CellContext`show$31241$$ =
     0, $CellContext`funcName$31242$$ = 0, $CellContext`ptPole$31243$$ = 
    0, $CellContext`mPole$31244$$ = 0, $CellContext`pBinom$31245$$ = 
    0, $CellContext`mBinom$31246$$ = 0, $CellContext`mReliable$31247$$ = 
    0, $CellContext`lenReliable$31248$$ = 
    0, $CellContext`lorderReliable$31249$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     3, StandardForm, 
      "Variables" :> {$CellContext`alpha$$ = {1}, $CellContext`alphabar$$ = {
         1}, $CellContext`aReliable$$ = 
        3, $CellContext`biases$$ = {0.0625, 0.25, 0.375, 0.25, 
         0.0625}, $CellContext`bReliable$$ = 
        2, $CellContext`coefs$$ = {{1}}, $CellContext`d2b$$ = {{
         1}}, $CellContext`d2t$$ = {{1}}, $CellContext`d2tLeft$$ = {{
         1}}, $CellContext`d2tRight$$ = {{
         1}}, $CellContext`dosIsing$$ = {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 0, 
          2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 0, 0,
           0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 0, 4, 
          0, 0}, {1, 0, 0, 0, 0}}}, $CellContext`eval$$ = 
        0, $CellContext`fac$$ = Rational[2, 3], $CellContext`func$$ = 
        Function[$CellContext`x, 1], $CellContext`funcChanged$$ = 
        True, $CellContext`funcName$$ = 
        Tooltip["binomial", 
          "a binomial distribution with parameters N and p. Illustrates \
fitting an inherently discrete function."], $CellContext`hFracIsing$$ = 
        0.25, $CellContext`isDiscrete$$ = True, $CellContext`isMonotonic$$ = 
        False, $CellContext`leftM$$ = 
        1, $CellContext`lenReliable$$ = {2, 3}, $CellContext`lorderReliable$$ = 
        1, $CellContext`matchData$$ = True, $CellContext`matchName$$ = 
        "data", $CellContext`mBinom$$ = 4, $CellContext`mIsing$$ = 
        4, $CellContext`mpair$$ = {1, 4}, $CellContext`mPole$$ = 
        4, $CellContext`mReliable$$ = 2, $CellContext`msg$$ = 
        "", $CellContext`numPts$$ = 5, $CellContext`oldFuncName$$ = 
        "none", $CellContext`oldHFracIsing$$ = 0.5, $CellContext`oldLorder$$ = 
        1, $CellContext`oldMatchName$$ = "data", $CellContext`oldMBinom$$ = 
        4, $CellContext`oldMIsing$$ = 
        3, $CellContext`oldMpair$$ = {1, 5}, $CellContext`oldMPole$$ = 
        4, $CellContext`oldmReliable$$ = 2, $CellContext`oldNumPts$$ = 
        1, $CellContext`oldPBinom$$ = 
        0.5, $CellContext`oldPtPole$$ = {0.5, 0.5}, $CellContext`oldRorder$$ = 
        1, $CellContext`oldWhichPlot$$ = "normed", $CellContext`pBinom$$ = 
        0.5, $CellContext`plot1$$ = {{}}, $CellContext`plot2$$ = {{}}, \
$CellContext`ptPole$$ = $CellContext`oldPtPole$$, $CellContext`range$$ = \
{-0.1, 1}, $CellContext`recomputeCoefs$$ = 
        True, $CellContext`recomputeTaylor$$ = True, $CellContext`rightM$$ = 
        1, $CellContext`rorderReliable$$ = 
        1, $CellContext`show$$ = {}, $CellContext`t2b$$ = {{
         1}}, $CellContext`vals$$ = {1, 1, 1, 1}, $CellContext`whichPlot$$ = 
        "normed"}, "ControllerVariables" :> {
        Hold[$CellContext`mpair$$, $CellContext`mpair$31238$$, 0], 
        Hold[$CellContext`matchName$$, $CellContext`matchName$31239$$, False], 
        Hold[$CellContext`whichPlot$$, $CellContext`whichPlot$31240$$, False], 
        Hold[$CellContext`show$$, $CellContext`show$31241$$, 0], 
        Hold[$CellContext`funcName$$, $CellContext`funcName$31242$$, 0], 
        Hold[$CellContext`ptPole$$, $CellContext`ptPole$31243$$, 0], 
        Hold[$CellContext`mPole$$, $CellContext`mPole$31244$$, 0], 
        Hold[$CellContext`pBinom$$, $CellContext`pBinom$31245$$, 0], 
        Hold[$CellContext`mBinom$$, $CellContext`mBinom$31246$$, 0], 
        Hold[$CellContext`mReliable$$, $CellContext`mReliable$31247$$, 0], 
        Hold[$CellContext`lenReliable$$, $CellContext`lenReliable$31248$$, 0], 
        Hold[$CellContext`lorderReliable$$, \
$CellContext`lorderReliable$31249$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> ($CellContext`messageNB = Part[
          Notebooks["Messages"], 1]; 
       SetOptions[$CellContext`messageNB, PrintPrecision -> 
         4]; $CellContext`range0 = {0, 
         1}; $CellContext`eval$$ = $CellContext`eval$$ + 
         1; $CellContext`recomputeTaylor$$ = 
        False; $CellContext`recomputeCoefs$$ = False; $CellContext`msg$$ = 
        StringJoin["\nEval ", 
          TextString[$CellContext`eval$$], "\n"]; 
       If[$CellContext`numPts$$ != $CellContext`oldNumPts$$, \
$CellContext`recomputeTaylor$$ = True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged n to ", 
            TextString[$CellContext`numPts$$]]; $CellContext`mpair$$ = {
            Min[$CellContext`numPts$$, $CellContext`leftM$$], 
            Max[
            1, $CellContext`numPts$$ + 
             
             1 - $CellContext`rightM$$]}; $CellContext`oldMpair$$ = {-1, -1}; \
$CellContext`d2b$$ = N[
            $CellContext`dataToBezierMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; $CellContext`d2t$$ = N[
            $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; $CellContext`t2b$$ = N[
            $CellContext`taylorToBezierMatrix[$CellContext`numPts$$ - 
             1, $CellContext`numPts$$]]; Null]; If[
         Or[$CellContext`funcChanged$$, $CellContext`numPts$$ != \
$CellContext`oldNumPts$$], 
         If[$CellContext`numPts$$ == $CellContext`oldNumPts$$, \
$CellContext`msg$$ = 
           StringJoin[$CellContext`msg$$, 
             "\nfunction changed"]]; $CellContext`recomputeTaylor$$ = 
          True; $CellContext`vals$$ = N[
            Table[
             $CellContext`func$$[$CellContext`k/($CellContext`numPts$$ - 
              1)], {$CellContext`k, 0, $CellContext`numPts$$ - 
              1}]]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nNew vals: ", 
            
            TextString[$CellContext`vals$$]]; $CellContext`oldNumPts$$ = \
$CellContext`numPts$$; Null]; 
       If[$CellContext`oldMatchName$$ != $CellContext`matchName$$, \
$CellContext`recomputeTaylor$$ = True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged from ", 
            TextString[$CellContext`oldMatchName$$], " to ", 
            
            TextString[$CellContext`matchName$$]]; $CellContext`matchData$$ = \
$CellContext`matchName$$ == 
           "data"; $CellContext`oldMatchName$$ = $CellContext`matchName$$; 
         Null]; If[
         Or[$CellContext`recomputeTaylor$$, Part[$CellContext`mpair$$, 1] != 
          Part[$CellContext`oldMpair$$, 1]], $CellContext`recomputeCoefs$$ = 
          True; If[
           Not[$CellContext`funcChanged$$], 
           If[Part[$CellContext`oldMpair$$, 1] != -1, $CellContext`msg$$ = 
             StringJoin[$CellContext`msg$$, "\nchanged leftm from ", 
               TextString[$CellContext`leftM$$], " to ", 
               TextString[
                Part[$CellContext`mpair$$, 1]]]]; $CellContext`leftM$$ = 
            Part[$CellContext`mpair$$, 1]; 
           Part[$CellContext`oldMpair$$, 1] = 
            Part[$CellContext`mpair$$, 1]; $CellContext`d2tLeft$$ = N[
              $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
               1, $CellContext`leftM$$]]; Null]; 
         If[$CellContext`matchData$$, $CellContext`alpha$$ = Flatten[{
               Dot[$CellContext`d2tLeft$$, 
                Part[$CellContext`vals$$, 
                 Span[1, $CellContext`leftM$$]]], 
               Table[0, $CellContext`numPts$$ - $CellContext`leftM$$]}]; 
           Null, $CellContext`alpha$$ = If[$CellContext`isDiscrete$$, 
              N[
               Dot[$CellContext`d2t$$, $CellContext`vals$$]], 
              Table[
               Normal[
                SeriesCoefficient[
                 Refine[
                  Series[
                   $CellContext`func$$[$CellContext`x], {$CellContext`x, 
                    0, $CellContext`numPts$$}]], $CellContext`k - 
                 1]], {$CellContext`k, 1, $CellContext`numPts$$}]]; 
           Null]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nnew alpha ", 
            TextString[$CellContext`alpha$$]]; Null]; If[
         Or[$CellContext`recomputeTaylor$$, Part[$CellContext`mpair$$, 2] != 
          Part[$CellContext`oldMpair$$, 2]], $CellContext`recomputeCoefs$$ = 
          True; If[
           Not[$CellContext`funcChanged$$], 
           If[Part[$CellContext`oldMpair$$, 2] != -1, $CellContext`msg$$ = 
             StringJoin[$CellContext`msg$$, "\nchanged rightm from ", 
               TextString[$CellContext`rightM$$], " to ", 
               
               TextString[$CellContext`numPts$$ + 1 - 
                Part[$CellContext`mpair$$, 
                 2]]]]; $CellContext`rightM$$ = $CellContext`numPts$$ + 1 - 
             Part[$CellContext`mpair$$, 2]; 
           Part[$CellContext`oldMpair$$, 2] = 
            Part[$CellContext`mpair$$, 2]; $CellContext`d2tRight$$ = N[
              $CellContext`dataToTaylorMatrix[$CellContext`numPts$$ - 
               1, $CellContext`rightM$$]]; Null]; 
         If[$CellContext`matchData$$, $CellContext`alphabar$$ = N[
              Flatten[{
                Dot[$CellContext`d2tRight$$, 
                 Part[$CellContext`vals$$, 
                  Span[-1, -$CellContext`rightM$$, -1]]], 
                Table[0, $CellContext`numPts$$ - $CellContext`rightM$$]}]]; 
           Null, $CellContext`alphabar$$ = If[$CellContext`isDiscrete$$, 
              N[
               Dot[$CellContext`d2t$$, 
                Reverse[$CellContext`vals$$]]], 
              Table[
               Normal[
                SeriesCoefficient[
                 Refine[
                  Series[
                   $CellContext`func$$[
                   1 - $CellContext`y], {$CellContext`y, 
                    0, $CellContext`numPts$$}], 0 < $CellContext`y < 
                  1], $CellContext`k - 1]], {$CellContext`k, 
                1, $CellContext`numPts$$}]]; Null]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nnew alpha bar ", 
            TextString[$CellContext`alphabar$$]]; 
         Null]; $CellContext`funcChanged$$ = False; 
       If[$CellContext`recomputeCoefs$$, $CellContext`coefs$$ = N[
            $CellContext`buildBezierCoefs[$CellContext`leftM$$, \
$CellContext`rightM$$, $CellContext`numPts$$, $CellContext`t2b$$, \
$CellContext`alpha$$, $CellContext`alphabar$$, $CellContext`d2b$$, \
$CellContext`vals$$, $CellContext`matchData$$, $CellContext`isMonotonic$$, \
$CellContext`isDiscrete$$]]; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nNew Bezier coefficients: ", 
            TextString[
             Part[$CellContext`coefs$$, -1]]]; $CellContext`recomputeCoefs$$ = 
          False; $CellContext`plot1$$ = \
$CellContext`buildPlot1[$CellContext`leftM$$, $CellContext`rightM$$, \
$CellContext`vals$$, $CellContext`func$$, $CellContext`alpha$$, \
$CellContext`alphabar$$]; $CellContext`plot2$$ = \
$CellContext`buildPlot2[$CellContext`leftM$$, $CellContext`rightM$$, \
$CellContext`vals$$, $CellContext`func$$, $CellContext`coefs$$, \
$CellContext`show$$, $CellContext`matchData$$, $CellContext`isMonotonic$$, \
$CellContext`range$$]; Null]; 
       If[$CellContext`oldWhichPlot$$ != $CellContext`whichPlot$$, \
$CellContext`funcChanged$$ = True; $CellContext`msg$$ = 
          StringJoin[$CellContext`msg$$, "\nchanged from ", 
            TextString[$CellContext`oldWhichPlot$$], " to ", 
            
            TextString[$CellContext`whichPlot$$]]; $CellContext`isMonotonic$$ = \
$CellContext`whichPlot$$ == 
           "monotonic"; $CellContext`oldWhichPlot$$ = \
$CellContext`whichPlot$$; Null]; Switch[
         Part[$CellContext`funcName$$, 1], "binomial", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to binomial from ", $CellContext`oldFuncName$$]; \
$CellContext`mBinom$$ = $CellContext`oldMBinom$$; $CellContext`numPts$$ = \
$CellContext`mBinom$$ + 1; $CellContext`isDiscrete$$ = 
            True; $CellContext`oldFuncName$$ = 
            "binomial"; $CellContext`oldMatchName$$ = 
            "data"; $CellContext`funcChanged$$ = True; Null]; 
         If[ControlActive[$CellContext`pBinom$$, $CellContext`oldPBinom$$] != \
$CellContext`pBinom$$, $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, "\nchanged p to ", 
              TextString[$CellContext`pBinom$$], " from ", 
              
              TextString[$CellContext`oldPBinom$$]]; \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldPBinom$$ = $CellContext`pBinom$$; Null]; 
         If[ControlActive[$CellContext`mBinom$$, $CellContext`oldMBinom$$] != \
$CellContext`mBinom$$, $CellContext`funcChanged$$ = True; $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, "\nchanged m to ", 
              TextString[$CellContext`mBinom$$], " from ", 
              
              TextString[$CellContext`oldMBinom$$]]; $CellContext`numPts$$ = \
$CellContext`mBinom$$ + 1; $CellContext`oldMBinom$$ = $CellContext`mBinom$$; 
           Null]; 
         If[$CellContext`funcChanged$$, $CellContext`biases$$ = \
$CellContext`binom[$CellContext`mBinom$$, $CellContext`pBinom$$]; \
$CellContext`msg$$ = StringJoin[$CellContext`msg$$, "\n (m,p) ", 
              TextString[$CellContext`mBinom$$], " ", 
              TextString[$CellContext`pBinom$$], " new biases ", 
              TextString[$CellContext`biases$$]]; $CellContext`func$$ = 
            If[$CellContext`whichPlot$$ == "normed", 
              $CellContext`discreteDensity[$CellContext`biases$$], 
              $CellContext`discreteCumul[$CellContext`biases$$]]]; Null, 
         "network reliability", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to network reliability from ", \
$CellContext`oldFuncName$$]; $CellContext`mReliable$$ = \
$CellContext`oldmReliable$$; $CellContext`isDiscrete$$ = 
            False; $CellContext`oldFuncName$$ = 
            "network reliability"; $CellContext`oldMatchName$$ = 
            "derivatives"; $CellContext`funcChanged$$ = True; Null]; 
         If[ControlActive[
             Part[$CellContext`lenReliable$$, 1], $CellContext`bReliable$$] != 
           Part[$CellContext`lenReliable$$, 1], $CellContext`funcChanged$$ = 
            True; $CellContext`bReliable$$ = 
            Part[$CellContext`lenReliable$$, 1]; Null]; If[ControlActive[
             Part[$CellContext`lenReliable$$, 2], $CellContext`aReliable$$] != 
           Part[$CellContext`lenReliable$$, 2], $CellContext`funcChanged$$ = 
            True; $CellContext`aReliable$$ = 
            Part[$CellContext`lenReliable$$, 2]; Null]; 
         If[ControlActive[$CellContext`mReliable$$, \
$CellContext`oldmReliable$$] != $CellContext`mReliable$$, \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldmReliable$$ = $CellContext`mReliable$$; 
           Null]; If[
          ControlActive[$CellContext`lorderReliable$$, \
$CellContext`oldLorder$$] != $CellContext`lorderReliable$$, 
           Part[$CellContext`mpair$$, 1] = 
            Switch[$CellContext`lorderReliable$$, 0, 
              1, $CellContext`mReliable$$ + 1, $CellContext`numPts$$, 
              Blank[], $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`lorderReliable$$]; Null]; 
         If[ControlActive[$CellContext`rorderReliable$$, \
$CellContext`oldRorder$$] != $CellContext`rorderReliable$$, 
           Part[$CellContext`mpair$$, 2] = $CellContext`numPts$$ + 1 - 
             Switch[$CellContext`rorderReliable$$, 0, 1, $CellContext`n, 
              1 + $CellContext`bReliable$$ ($CellContext`aReliable$$ - 
                 1)^$CellContext`mReliable$$, 
              Blank[], $CellContext`mReliable$$ + Ceiling[
                Log2[
                 
                 Ceiling[$CellContext`rorderReliable$$/$CellContext`bReliable$\
$]]]]; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`bReliable$$ + 
              2 + ($CellContext`aReliable$$ - 
                1) $CellContext`mReliable$$, $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`mReliable$$]; $CellContext`func$$ = 
            If[$CellContext`whichPlot$$ == "normed", 
              $CellContext`toyDensity[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 
              $CellContext`toyCumul[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]]; If[
           
           Or[$CellContext`funcChanged$$, $CellContext`oldLorder$$ != \
$CellContext`lorderReliable$$], 
           Part[$CellContext`mpair$$, 1] = 
            Switch[$CellContext`lorderReliable$$, 0, 
              1, $CellContext`mReliable$$ + 1, $CellContext`numPts$$, 
              Blank[], $CellContext`bReliable$$ + 
              1 + ($CellContext`aReliable$$ - 
                1) $CellContext`lorderReliable$$]; $CellContext`oldLorder$$ = \
$CellContext`lorderReliable$$; Null]; If[
           
           Or[$CellContext`funcChanged$$, $CellContext`oldRorder$$ != \
$CellContext`rorderReliable$$], $CellContext`oldRorder$$ = \
$CellContext`rorderReliable$$; Null]; Null, "pole", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 1], $CellContext`msg$$ = 
            StringJoin[$CellContext`msg$$, 
              "\nchanged func to pole from ", $CellContext`oldFuncName$$]; \
$CellContext`mPole$$ = $CellContext`oldMPole$$; $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`mPole$$ + 
              1, $CellContext`mPole$$]; $CellContext`ptPole$$ = \
$CellContext`oldPtPole$$; $CellContext`isDiscrete$$ = 
            False; $CellContext`oldFuncName$$ = 
            "pole"; $CellContext`oldMatchName$$ = 
            "data"; $CellContext`funcChanged$$ = True; Null]; If[ControlActive[
             Part[$CellContext`ptPole$$, 1], 
             Part[$CellContext`oldPtPole$$, 1]] != 
           Part[$CellContext`ptPole$$, 1], $CellContext`funcChanged$$ = True; 
           Part[$CellContext`oldPtPole$$, 1] = Part[$CellContext`ptPole$$, 1]; 
           Null]; If[ControlActive[
             Part[$CellContext`ptPole$$, 2], 
             Part[$CellContext`oldPtPole$$, 2]] != 
           Part[$CellContext`ptPole$$, 2], $CellContext`funcChanged$$ = True; 
           Part[$CellContext`oldPtPole$$, 2] = Part[$CellContext`ptPole$$, 2]; 
           Null]; If[
          ControlActive[$CellContext`mPole$$, $CellContext`oldMPole$$] != \
$CellContext`mPole$$, $CellContext`funcChanged$$ = 
            True; $CellContext`numPts$$ = 
            If[$CellContext`isMonotonic$$, $CellContext`mPole$$ + 
              1, $CellContext`mPole$$]; $CellContext`oldMPole$$ = \
$CellContext`mPole$$; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`func$$ = 
           If[$CellContext`whichPlot$$ == "normed", 
             $CellContext`poleDensity[
              Part[$CellContext`ptPole$$, 1], 
              Part[$CellContext`ptPole$$, 2]], 
             $CellContext`poleCumul[
              Part[$CellContext`ptPole$$, 1], 
              Part[$CellContext`ptPole$$, 2]]]]; Null, "Ising", 
         If[$CellContext`oldFuncName$$ != 
           Part[$CellContext`funcName$$, 
             1], $CellContext`mIsing$$ = $CellContext`oldMIsing$$; \
$CellContext`hFracIsing$$ = $CellContext`oldHFracIsing$$; \
$CellContext`isDiscrete$$ = False; $CellContext`oldFuncName$$ = 
            "Ising"; $CellContext`oldMatchName$$ = 
            "derivatives"; $CellContext`funcChanged$$ = True; Null]; If[
           
           Or[$CellContext`funcChanged$$, 
            ControlActive[$CellContext`hFracIsing$$, \
$CellContext`oldHFracIsing$$] != $CellContext`hFracIsing$$], \
$CellContext`funcChanged$$ = 
            True; $CellContext`oldHFracIsing$$ = $CellContext`hFracIsing$$; 
           Null]; If[
           
           Or[$CellContext`funcChanged$$, 
            ControlActive[$CellContext`mIsing$$, $CellContext`oldMIsing$$] != \
$CellContext`mIsing$$], $CellContext`funcChanged$$ = 
            True; $CellContext`oldMIsing$$ = $CellContext`mIsing$$; Null]; 
         If[$CellContext`funcChanged$$, $CellContext`numPts$$ = Denominator[
               Rationalize[$CellContext`hFracIsing$$]] $CellContext`mIsing$$; 
           If[$CellContext`isMonotonic$$, $CellContext`numPts$$ = \
$CellContext`numPts$$ + 1]; 
           If[Length[$CellContext`dosIsing$$] < $CellContext`mIsing$$, \
$CellContext`dosIsing$$ = $CellContext`isingDoS1D[$CellContext`mIsing$$, \
$CellContext`dosIsing$$]]; NotebookWrite[$CellContext`messageNB, "\ndos: "]; 
           NotebookWrite[$CellContext`messageNB, 
             Cell[
              BoxData[
               ToBoxes[
                MatrixForm[
                 
                 Part[$CellContext`dosIsing$$, $CellContext`mIsing$$]]]]]]; \
$CellContext`func$$ = $CellContext`ising1D[
              
              Part[$CellContext`dosIsing$$, $CellContext`mIsing$$], \
$CellContext`hFracIsing$$, $CellContext`isMonotonic$$]; Null]; Null]; 
       EventHandler[
         Dynamic[
          Grid[{
            Flatten[{
              
              Show[$CellContext`plot1$$, AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 1}, $CellContext`range$$}, PlotRangeClipping -> 
               True, ImageSize -> Medium, AspectRatio -> 1.], 
              Show[
               $CellContext`selectPlots[$CellContext`plot2$$, \
$CellContext`show$$, $CellContext`numPts$$, $CellContext`leftM$$, \
$CellContext`rightM$$], AxesOrigin -> {0, 0}, 
               PlotRange -> {{0, 1}, $CellContext`range$$}, PlotRangeClipping -> 
               True, ImageSize -> Medium, AspectRatio -> 1.]}]}, Spacings -> 
           5]], {"MouseDown" :> ($CellContext`range0 = $CellContext`range$$), 
          "MouseClicked" :> Which[
            CurrentValue[
            "AltKey"], $CellContext`range$$ = $CellContext`range$$ \
$CellContext`fac$$, 
            CurrentValue[
            "ShiftKey"], $CellContext`range$$ = \
$CellContext`range$$/$CellContext`fac$$]}]), 
      "Specifications" :> {{{$CellContext`mpair$$, {1, 4}, ""}, 1, 
         Dynamic[$CellContext`numPts$$], 1, ControlType -> IntervalSlider, 
         Appearance -> {"Paired"}, Enabled -> 
         Dynamic[Part[$CellContext`funcName$$, 1] != "network reliability"], 
         ControlPlacement -> 1}, 
        Row[{"Number of coefficients known: left ", 
          Dynamic[
           Part[$CellContext`mpair$$, 1]], 
          Manipulate`Place[1], 
          Dynamic[$CellContext`numPts$$ + 1 - Part[$CellContext`mpair$$, 2]], 
          " right"}], {{$CellContext`matchName$$, "data", 
          "Estimate function based on exact "}, {"data", "derivatives"}, 
         ControlType -> 
         RadioButton}, {{$CellContext`whichPlot$$, "normed", 
          "Plot positive, normed function or its monotonic integral?"}, {
         "normed", "monotonic"}, ControlType -> 
         RadioButton}, {{$CellContext`show$$, {
           Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]]}, 
          "select which interpolations to show:"}, {
          Style["lowest-order", FontColor -> RGBColor[0., 0., 0.]], 
          Style[
          "uniform", FontColor -> 
           RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]], 
          Style[
          "bimodal", FontColor -> 
           RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]], 
          Style[
          "threshold", FontColor -> 
           RGBColor[
            0.5411764705882353, 0.7137254901960784, 0.027450980392156862`]], 
          Style[
          "bounds", FontColor -> 
           RGBColor[
            0.1450980392156863, 0.43529411764705883`, 0.3843137254901961]]}, 
         ControlType -> CheckboxBar}, {{$CellContext`funcName$$, 
          Tooltip[
          "binomial", 
           "a binomial distribution with parameters N and p. Illustrates \
fitting an inherently discrete function."], "underlying function:"}, {
          Tooltip[
          "binomial", 
           "a binomial distribution with parameters N and p. Illustrates \
fitting an inherently discrete function."], 
          Tooltip[
          "pole", "N uniformly-sampled values from a function with a pole in \
the complex plane. Illustrates fitting samples from a non-polynomial \
function."], 
          Tooltip[
          "network reliability", 
           "the two terminal Moore-Shannon network reliability for the toy \
network illustrated. \nI.e., the probability of getting a message from Source \
to Terminus when the probability of transmitting over each edge is x"], 
          Tooltip["Ising", 
           StringForm[
           "the partition function of a two-dimensional Ising model with N \
sites on a square in an external field:\n ``(T) =`` n(s,f) exp{`` [s+``f]}", 
            Subscript[$CellContext`Z, "N,H/J"], 
            "\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)", 
            2 $CellContext`J/$CellContext`kT, \
$CellContext`H/$CellContext`J]]}, ControlType -> 
         RadioButton}, {{$CellContext`ptPole$$, $CellContext`oldPtPole$$, 
          Row[{
            Spacer[40], "position of pole in complex plane"}]}, 0.01, 1, 
         ControlType -> Slider2D, Appearance -> "Labeled", ControlPlacement -> 
         2}, {{$CellContext`mPole$$, $CellContext`oldMPole$$, 
          "number of samples"}, 2, 100, 1, Appearance -> {"Labeled"}, 
         ControlPlacement -> 
         3}, {{$CellContext`pBinom$$, $CellContext`oldPBinom$$, "p"}, 0.01, 1,
          Appearance -> "Labeled", ControlPlacement -> 
         4}, {{$CellContext`mBinom$$, $CellContext`oldMBinom$$, "N"}, 2, 50, 
         1, Appearance -> "Labeled", ControlPlacement -> 
         5}, {{$CellContext`mReliable$$, $CellContext`oldmReliable$$, 
          "number of long parallel paths"}, 2, 20, 1, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         6}, {{$CellContext`lenReliable$$, {$CellContext`bReliable$$, \
$CellContext`aReliable$$}, "length of short and long paths"}, 2, 20, 1, 
         ControlType -> IntervalSlider, MinIntervalSize -> 1, Method -> 
         "Push", Appearance -> {"Labeled", "Paired"}, ControlPlacement -> 
         7}, {{$CellContext`lorderReliable$$, $CellContext`oldLorder$$, 
          " strut(s)"}, 0, 
         Dynamic[
          $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], 1, ControlPlacement -> 
         8}, {{$CellContext`rorderReliable$$, $CellContext`oldRorder$$, 
          " cut(s)"}, 0, 
         Dynamic[
          Min[20, 
           $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]]], 1, ControlPlacement -> 
         9}, {{$CellContext`hFracIsing$$, $CellContext`oldHFracIsing$$, 
          "ratio of internal to total field J/(H+|J|)"}, -1, 1, 0.01, 
         Appearance -> {"Labeled"}, ControlPlacement -> 
         10}, {{$CellContext`mIsing$$, $CellContext`oldMIsing$$, "N"}, 1, 50, 
         1, Appearance -> "Labeled", ControlPlacement -> 11}, 
        Dynamic[
         Switch[
          Part[$CellContext`funcName$$, 1], "pole", 
          Row[{
            Spacer[50], 
            Panel[
             Column[{
               Manipulate`Place[2], 
               Manipulate`Place[3]}], "pole parameters", Top, Alignment -> 
             Center]}], "binomial", 
          Row[{
            Spacer[150], 
            Panel[
             Column[{
               Manipulate`Place[4], 
               Manipulate`Place[5]}], "binomial parameters", Top, Alignment -> 
             Center]}], "network reliability", 
          Row[{
            Spacer[20], 
            Panel[
             Row[{
               Column[{
                 Manipulate`Place[6], 
                 Manipulate`Place[7], 
                 Row[{"consider unions of ", $CellContext`lorderReliable$$, 
                   Manipulate`Place[8]}], 
                 Row[{"consider unions of ", 
                   Dynamic[$CellContext`rorderReliable$$], 
                   Manipulate`Place[9]}]}], 
               Spacer[40], 
               Column[{"toy network", 
                 Dynamic[
                  Magnify[
                   $CellContext`drawToy[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$], 2]], 
                 Row[{
                   StringJoin["Total of ", 
                    TextString[
                    $CellContext`numStruts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " struts and ", 
                    TextString[
                    $CellContext`numCuts[$CellContext`mReliable$$, \
$CellContext`aReliable$$, $CellContext`bReliable$$]], " cuts"]}]}]}]]}], 
          "Ising", 
          Row[{
            Spacer[50], 
            Panel[
             Column[{
               Manipulate`Place[10], 
               Manipulate`Place[11], "x in plots is 1-exp[-2(H+|J|)/(kT)]"}], 
             "Ising parameters", Top, Alignment -> Center]}]]], 
        Row[{
          Spacer[300], 
          "(shift-click scales plots down, ctrl-click scales up)", 
          Spacer[20]}, Alignment -> Center], {{$CellContext`numPts$$, 5}, 0, 
         ControlType -> None}, {{$CellContext`oldNumPts$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mpair$$, {1, 5}}, 0, ControlType -> 
         None}, {{$CellContext`oldMpair$$, {1, 5}}, 0, ControlType -> 
         None}, {{$CellContext`func$$, 
          Function[$CellContext`x, 1]}, 0, ControlType -> 
         None}, {{$CellContext`oldFuncName$$, "none"}, 0, ControlType -> 
         None}, {{$CellContext`isMonotonic$$, False}, 0, ControlType -> 
         None}, {{$CellContext`oldWhichPlot$$, "normed"}, 0, ControlType -> 
         None}, {{$CellContext`matchData$$, True}, 0, ControlType -> 
         None}, {{$CellContext`oldMatchName$$, "data"}, 0, ControlType -> 
         None}, {{$CellContext`show$$, {}}, 0, ControlType -> 
         None}, {{$CellContext`mBinom$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMBinom$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`pBinom$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`oldPBinom$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`mPole$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMPole$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`ptPole$$, {0.5, 0.5}}, 0, ControlType -> 
         None}, {{$CellContext`oldPtPole$$, {0.5, 0.5}}, 0, ControlType -> 
         None}, {{$CellContext`mReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`oldmReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`lenReliable$$, {2, 3}}, 0, ControlType -> 
         None}, {{$CellContext`aReliable$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`bReliable$$, 2}, 0, ControlType -> 
         None}, {{$CellContext`lorderReliable$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`rorderReliable$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`oldLorder$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`oldRorder$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`mIsing$$, 4}, 0, ControlType -> 
         None}, {{$CellContext`oldMIsing$$, 3}, 0, ControlType -> 
         None}, {{$CellContext`hFracIsing$$, 0.25}, 0, ControlType -> 
         None}, {{$CellContext`oldHFracIsing$$, 0.5}, 0, ControlType -> 
         None}, {{$CellContext`isDiscrete$$, True}, 0, ControlType -> 
         None}, {{$CellContext`leftM$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`rightM$$, 1}, 0, ControlType -> 
         None}, {{$CellContext`d2tLeft$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2tRight$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2b$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`d2t$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`t2b$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`vals$$, {1, 1, 1, 1}}, 0, ControlType -> 
         None}, {{$CellContext`alpha$$, {1}}, 0, ControlType -> 
         None}, {{$CellContext`alphabar$$, {1}}, 0, ControlType -> 
         None}, {{$CellContext`coefs$$, {{1}}}, 0, ControlType -> 
         None}, {{$CellContext`funcChanged$$, True}, 0, ControlType -> 
         None}, {{$CellContext`recomputeCoefs$$, True}, 0, ControlType -> 
         None}, {{$CellContext`recomputeTaylor$$, True}, 0, ControlType -> 
         None}, {{$CellContext`msg$$, ""}, 0, ControlType -> 
         None}, {{$CellContext`eval$$, 0}, 0, ControlType -> 
         None}, {{$CellContext`biases$$, {0.0625, 0.25, 0.375, 0.25, 0.0625}},
          0, ControlType -> 
         None}, {{$CellContext`dosIsing$$, {{{1, 0}, {1, 0}}, {{1, 0, 0}, {0, 
           0, 2}, {1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 3, 0}, {0, 0, 3, 0}, {1, 
           0, 0, 0}}, {{1, 0, 0, 0, 0}, {0, 0, 4, 0, 0}, {0, 0, 4, 0, 2}, {0, 
           0, 4, 0, 0}, {1, 0, 0, 0, 0}}}}, 0, ControlType -> 
         None}, {{$CellContext`plot1$$, {{}}}, 0, ControlType -> 
         None}, {{$CellContext`plot2$$, {{}}}, 0, ControlType -> 
         None}, {{$CellContext`range$$, {-0.1, 1}}, 0, ControlType -> 
         None}, {{$CellContext`fac$$, 
          Rational[2, 3]}, 0, ControlType -> None}}, 
      "Options" :> {
       TrackedSymbols :> {$CellContext`funcName$$, $CellContext`whichPlot$$, \
$CellContext`matchName$$, $CellContext`mpair$$, $CellContext`numPts$$, \
$CellContext`show$$, $CellContext`func$$, $CellContext`pBinom$$, \
$CellContext`mPole$$, $CellContext`mBinom$$, $CellContext`mReliable$$, \
$CellContext`mIsing$$, $CellContext`ptPole$$, $CellContext`funcChanged$$, \
$CellContext`lenReliable$$, $CellContext`lorderReliable$$, \
$CellContext`rorderReliable$$, $CellContext`aReliable$$, \
$CellContext`bReliable$$, $CellContext`hFracIsing$$, $CellContext`range$$}}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{830., {421., 427.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    Initialization:>(($CellContext`func$$ = \
$CellContext`discreteDensity[$CellContext`biases$$]; $CellContext`tmp = {}; \
$CellContext`dosIsing$$ = $CellContext`isingDoS1D[4, $CellContext`tmp]; Null); 
     Typeset`initDone$$ = True),
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.75629588206476*^9, 3.7562960283888063`*^9, {3.756296182275735*^9, 
   3.7562962008736362`*^9}, 3.756296454580454*^9, {3.756297104856555*^9, 
   3.75629712170588*^9}, {3.756297420808877*^9, 3.7562974298988953`*^9}, {
   3.756297500402741*^9, 3.756297522721637*^9}, {3.7562975810880613`*^9, 
   3.75629762489499*^9}, {3.756297694397456*^9, 3.756297702328665*^9}, {
   3.756298390515003*^9, 3.756298412507663*^9}, {3.756298504241493*^9, 
   3.7562985388115883`*^9}, {3.756298589876542*^9, 3.756298594904277*^9}, 
   3.756298935680005*^9, 3.75629909644128*^9, {3.756299178219791*^9, 
   3.756299197793995*^9}, {3.7563010610842524`*^9, 3.7563010738399143`*^9}, 
   3.75630559922913*^9, 3.7563058195922413`*^9, 3.7563094466839037`*^9, {
   3.756309529478211*^9, 3.7563096076861*^9}, 3.756309637848091*^9, {
   3.7563103499028997`*^9, 3.7563103572178717`*^9}, {3.756310396570859*^9, 
   3.756310399494485*^9}, {3.7563104516281967`*^9, 3.756310473768371*^9}, 
   3.7563105462969933`*^9, 3.756310704416499*^9, {3.756310749056281*^9, 
   3.7563107787439613`*^9}, 3.756310819987505*^9, {3.756310926806357*^9, 
   3.7563109355354767`*^9}, 3.75631097405676*^9, 3.7563111042530107`*^9, {
   3.756311162156948*^9, 3.756311195815592*^9}, 3.756382515761034*^9, 
   3.756383374820497*^9, {3.756383492179196*^9, 3.756383505881665*^9}, {
   3.756383539912911*^9, 3.756383584035555*^9}, {3.756383644054535*^9, 
   3.756383651152062*^9}, 3.756383954565789*^9, 3.756384206921801*^9, 
   3.756384261063312*^9, 3.756384496212446*^9, 3.756384535011263*^9, 
   3.7563846562428923`*^9, {3.7563847671596727`*^9, 3.756384814370599*^9}, {
   3.7563848486058903`*^9, 3.756384860373261*^9}, 3.756465764391323*^9, 
   3.756466320397499*^9, 3.756466935490306*^9, {3.756467048012897*^9, 
   3.756467094002871*^9}, {3.756467207200526*^9, 3.75646721199328*^9}, 
   3.756467912471033*^9, 3.7564680778533697`*^9, {3.7564681088235083`*^9, 
   3.7564681460929537`*^9}, {3.756468221721389*^9, 3.75646826712055*^9}, {
   3.75646838001954*^9, 3.7564684007931137`*^9}, {3.756469869590691*^9, 
   3.756469895629834*^9}, 3.756470491886599*^9, {3.7564707508119783`*^9, 
   3.756470757592552*^9}, {3.756479186302568*^9, 3.756479194195347*^9}, {
   3.756479267789752*^9, 3.756479287810731*^9}},
 CellLabel->"Out[60]=",ExpressionUUID->"6f9543ad-fde6-4d13-89be-103d082dad61"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Some Useful Functions", "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731515959149905*^9, 3.731515986939397*^9}, 
   3.735897754256469*^9, 3.735912560005618*^9, 3.7360263904281693`*^9, 
   3.738338214591082*^9, 3.738338255972303*^9, 3.738338299642967*^9, {
   3.75414309609628*^9, 3.7541431138035088`*^9}, {3.754384484618182*^9, 
   3.754384512794907*^9}, 3.7543871300811453`*^9, 
   3.754608826471537*^9},ExpressionUUID->"912421aa-3894-415b-931e-\
bec10ff48e38"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "Power", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Power", "[", 
    RowBox[{"0", ",", "0"}], "]"}], "=", "1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Protect", "[", "Power", "]"}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.739470643871122*^9, 3.739470653047101*^9}, {
   3.740038018370751*^9, 3.7400382251102*^9}, {3.740038281365237*^9, 
   3.7400383036446247`*^9}, {3.740038338148169*^9, 3.740038341555978*^9}, {
   3.740038397138607*^9, 3.740038441601426*^9}, {3.740038472857666*^9, 
   3.740038532848617*^9}, {3.740038599953497*^9, 3.7400387189168453`*^9}, {
   3.740038758475917*^9, 3.7400387672421417`*^9}, {3.740047374798435*^9, 
   3.7400473764199333`*^9}, {3.7401806966960697`*^9, 3.740180697543334*^9}, {
   3.747916780209693*^9, 3.7479168234765177`*^9}, {3.7497430818452063`*^9, 
   3.749743100771366*^9}, {3.749743142440259*^9, 3.749743172901198*^9}, {
   3.749743455045706*^9, 3.7497434673520393`*^9}, {3.749753657476753*^9, 
   3.749753661526771*^9}, {3.749851637762883*^9, 3.749851649920735*^9}, {
   3.7503421500477867`*^9, 3.750342150593059*^9}, {3.750357909601777*^9, 
   3.75035791225455*^9}, {3.7514124853986692`*^9, 3.751412487201974*^9}, {
   3.7515587952528563`*^9, 3.751558828142271*^9}, {3.7515602791045513`*^9, 
   3.75156028040341*^9}, {3.75414309609652*^9, 3.754143113803712*^9}, {
   3.754384125265614*^9, 3.754384125749943*^9}, {3.754384484618483*^9, 
   3.754384512795226*^9}, {3.754385926739571*^9, 3.7543859324297037`*^9}, {
   3.754386644962385*^9, 3.754386656578006*^9}, {3.7543866943408422`*^9, 
   3.7543866949535627`*^9}, {3.754386801668117*^9, 3.754386803595443*^9}, {
   3.754386908781386*^9, 3.754386925735894*^9}, {3.754386981487494*^9, 
   3.754386994758624*^9}, 3.754387130081334*^9, 3.7546088264728622`*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"523b4af4-68a5-4b28-a172-fc0561c750b2"],

Cell["\<\
Convert a list of y - values to an evenly spaced list of (x, y) values. N \
values -> spacing is 1/(N-1).
Convert 2 lists of y-values to an evenly spaced list of (x,y) pairs with a \
gap between them. Spacing is 1/(N-1)\
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731961787412735*^9, 3.735897205944943*^9, 3.736026283177816*^9, 
   3.736026433421797*^9, 3.738336820434924*^9, 3.738338255972569*^9, 
   3.7383382996448793`*^9, {3.754143096096674*^9, 3.754143113803841*^9}, {
   3.754383868539587*^9, 3.75438389008118*^9}, 3.754384364986289*^9, {
   3.7543844079171047`*^9, 3.754384444150877*^9}, 3.754384512795376*^9, 
   3.754384669734274*^9, 3.7543849293747396`*^9, {3.7543858504106417`*^9, 
   3.754385851229516*^9}, 3.754387130081518*^9, 
   3.754608826472993*^9},ExpressionUUID->"802e4f4c-f1ae-4198-88cf-\
12d0b7b4e8a9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"vec2pts", ",", "vec2pts2"}], "]"}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"vec2pts", "[", "v_List", "]"}], " ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "v", "]"}], "-", "1"}], ")"}]}], ",", 
        RowBox[{"v", "[", 
         RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", 
        RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}]}], ";"}],
  FontSize->12], "\n", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"vec2pts2", "[", 
     RowBox[{
     "left_List", ",", " ", "right_List", ",", " ", "numPts_Integer"}], "]"}],
     ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"k", "-", "1"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1"}], ")"}]}], ",", 
            RowBox[{"left", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "left", "]"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1", "-", 
               RowBox[{"Length", "[", "right", "]"}], "+", "k"}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"numPts", "-", "1"}], ")"}]}], ",", 
            RowBox[{"right", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "1", ",", 
            RowBox[{"Length", "[", "right", "]"}]}], "}"}]}], "]"}]}], "}"}], 
      ",", "1"}], "]"}]}], ";"}],
  FontSize->12]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711921088552628*^9, 3.7119211097961493`*^9}, {
   3.731790604059466*^9, 3.731790611498961*^9}, {3.731952779424247*^9, 
   3.7319528041177073`*^9}, {3.731961748306985*^9, 3.731961805662774*^9}, {
   3.7321275767966757`*^9, 3.732127577936163*^9}, 3.732129892137265*^9, {
   3.732129940318245*^9, 3.732129940653027*^9}, {3.735120065648696*^9, 
   3.735120066906206*^9}, 3.7351201214823503`*^9, {3.735377940960054*^9, 
   3.735377941563971*^9}, {3.7355817944550047`*^9, 3.7355817962972813`*^9}, {
   3.7355822009311733`*^9, 3.735582201422387*^9}, {3.735806093213682*^9, 
   3.7358061110431337`*^9}, 3.735815886447948*^9, 3.735897205945092*^9, {
   3.7360126517264853`*^9, 3.736012675379636*^9}, {3.736012779179078*^9, 
   3.736012794617731*^9}, {3.736013011623317*^9, 3.736013018096143*^9}, {
   3.736013574415472*^9, 3.736013578074375*^9}, 3.736013735899682*^9, {
   3.7360260970178328`*^9, 3.736026128249078*^9}, {3.736026199085821*^9, 
   3.736026199436565*^9}, 3.736026245978737*^9, 3.736026283178073*^9, 
   3.73602643342202*^9, {3.736071633658515*^9, 3.7360716341888647`*^9}, {
   3.7360718157709017`*^9, 3.736071822870947*^9}, {3.736071862547578*^9, 
   3.7360718675907173`*^9}, {3.7374525545456343`*^9, 3.737452574407715*^9}, 
   3.7383368204351387`*^9, 3.738338255972747*^9, 3.738338299645056*^9, {
   3.7395593503768053`*^9, 3.7395593524148912`*^9}, {3.739559403816723*^9, 
   3.73955940484562*^9}, {3.7516476984794703`*^9, 3.7516477106767683`*^9}, {
   3.7516479823105927`*^9, 3.7516479856507587`*^9}, {3.754143096096828*^9, 
   3.754143113803988*^9}, {3.7543844079173717`*^9, 3.754384444151209*^9}, 
   3.754384512795582*^9, 3.75438466973461*^9, 3.754384929375008*^9, {
   3.7543858627351*^9, 3.7543859226831503`*^9}, 3.7543871300816517`*^9, 
   3.754608826473733*^9, {3.755280604362906*^9, 3.755280605016005*^9}, {
   3.755280806436697*^9, 3.755280842135542*^9}, 3.7554359720845137`*^9, 
   3.755684910115588*^9, {3.755705464431643*^9, 3.755705465005785*^9}, {
   3.7559731295403633`*^9, 3.755973132256159*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"2eb0914a-b7bd-4a4a-80fa-ac69b2ebd63e"],

Cell[TextData[{
 "Transformations:\n",
 StyleBox["taylorToBezier, a u x u transform from first u Taylor coefficients \
to first u of n+1 Bernstein coefficients of order n, with u <= n+1.\nThe \
transformation for (n,u) is the top left uxu submatrix of the transformation \
for (n,v) when v > u.\ndataToTaylor, a u x u transform from u uniformly \
spaced data points with spacing 1/n to u Taylor coefficients.\ndataToBezier, \
a u x u transform from a set of u evenly spaced data points with spacing 1/n \
to the first u of n+1 Bernstein coefficients of order n, with u <= n+1.\nThe \
transformation has a reflection symmetry - T(i,j) = T(n-i,n-j) - but not a \
submatrix property like taylorToBezier\[CloseCurlyQuote]s", "Text"]
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731515991976057*^9, 3.7315160168658743`*^9}, {
   3.7319618468465567`*^9, 3.73196185810015*^9}, 3.735897741532148*^9, 
   3.73602629600515*^9, 3.736026433422143*^9, {3.7381456099696074`*^9, 
   3.738145642483931*^9}, 3.738145693586835*^9, {3.738336626367819*^9, 
   3.738336632923174*^9}, 3.738336847120315*^9, 3.7383382559734898`*^9, 
   3.738338299645796*^9, {3.739009051145157*^9, 3.739009063636244*^9}, {
   3.7541222143676233`*^9, 3.7541222657735167`*^9}, 3.7541413743168287`*^9, 
   3.754143113804927*^9, {3.7543850030014877`*^9, 3.754385005904833*^9}, {
   3.754385351916408*^9, 3.7543854000099363`*^9}, {3.7543854308614283`*^9, 
   3.754385458328477*^9}, {3.7543859980787983`*^9, 3.754386025432249*^9}, 
   3.754387130081771*^9, {3.754485487398271*^9, 3.754485582197139*^9}, {
   3.7544879341860456`*^9, 3.754487934547057*^9}, {3.754493841047365*^9, 
   3.754493859972951*^9}, 3.754608826473879*^9, {3.7548200689752197`*^9, 
   3.75482021346402*^9}},ExpressionUUID->"33188028-e5c7-4f01-8c46-\
f6e5ee9beff8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "taylorToBezierMatrix", ",", "dataToTaylorMatrix", ",", 
    "dataToBezierMatrix"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"taylorToBezierMatrix", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"#1", "<", "#2"}], ",", "0", ",", 
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{
           RowBox[{"n", "+", "1", "-", "#2"}], ",", 
           RowBox[{"n", "+", "1", "-", "#1"}]}], "]"}], "/", 
         RowBox[{"Binomial", "[", 
          RowBox[{"n", ",", 
           RowBox[{"#1", "-", "1"}]}], "]"}]}]}], "]"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "u"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"dataToTaylorMatrix", "[", 
     RowBox[{
      RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"n", "^", 
        RowBox[{"(", "rowl", ")"}]}], 
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "1"}], ")"}], "^", 
              RowBox[{"(", 
               RowBox[{"colj", "+", "k"}], ")"}]}], " ", 
             RowBox[{
              RowBox[{"StirlingS1", "[", 
               RowBox[{"k", ",", "rowl"}], "]"}], "/", " ", 
              RowBox[{"Factorial", "[", 
               RowBox[{"k", "-", "colj"}], "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Max", "[", 
               RowBox[{"{", 
                RowBox[{"colj", ",", "rowl"}], "}"}], "]"}], ",", 
              RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}], "/", 
          RowBox[{"Factorial", "[", "colj", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"colj", ",", "0", ",", 
           RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"rowl", ",", "0", ",", 
        RowBox[{"u", "-", "1"}]}], "}"}]}], "]"}]}], ";"}],
  FontSize->14], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dataToBezierMatrix", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"u_Integer", "?", "NonNegative"}]}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"taylorToBezierMatrix", "[", 
     RowBox[{"n", ",", "u"}], "]"}], " ", ".", " ", 
    RowBox[{"dataToTaylorMatrix", "[", 
     RowBox[{"n", ",", "u"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.731794490925537*^9, 3.731794506955234*^9}, {
   3.731882929619594*^9, 3.731882935394905*^9}, {3.731961868662656*^9, 
   3.731961888511642*^9}, {3.73196194981362*^9, 3.731961952356213*^9}, {
   3.731961999193293*^9, 3.731962002073203*^9}, 3.735377868957844*^9, 
   3.735897741532358*^9, {3.736026114129704*^9, 3.736026125843461*^9}, 
   3.736026296005555*^9, 3.73602643342239*^9, {3.7362433797898197`*^9, 
   3.736243380328628*^9}, {3.736287208290736*^9, 3.736287209456901*^9}, {
   3.737984483890965*^9, 3.737984511962612*^9}, {3.737984990237115*^9, 
   3.737985004848363*^9}, 3.738336665554935*^9, 3.738336847120494*^9, 
   3.7383368898034*^9, {3.738338104887143*^9, 3.7383381185668087`*^9}, 
   3.738338255973734*^9, 3.738338299646023*^9, {3.7383944178988028`*^9, 
   3.738394418397745*^9}, {3.7383944850289516`*^9, 3.738394609851923*^9}, {
   3.738394799224453*^9, 3.7383948017422743`*^9}, {3.73841729500432*^9, 
   3.738417327357477*^9}, {3.738949610616933*^9, 3.738949614244711*^9}, {
   3.7389508591309566`*^9, 3.7389508818419533`*^9}, {3.739008187496028*^9, 
   3.7390081961649923`*^9}, {3.739008392954417*^9, 3.739008393379183*^9}, {
   3.739008440355089*^9, 3.7390084407932367`*^9}, {3.739009017776005*^9, 
   3.7390090376137533`*^9}, {3.749555186743133*^9, 3.749555197584284*^9}, {
   3.74955525035618*^9, 3.749555278432848*^9}, {3.749555388295278*^9, 
   3.7495553939160967`*^9}, {3.749555466053526*^9, 3.749555466295764*^9}, {
   3.7495564413708982`*^9, 3.749556479919909*^9}, {3.749556516602826*^9, 
   3.749556547683037*^9}, {3.749579162417766*^9, 3.749579168627864*^9}, {
   3.749579224457796*^9, 3.749579229589809*^9}, 3.7541413743169403`*^9, 
   3.754143113805045*^9, {3.754385331636599*^9, 3.7543853327892447`*^9}, 
   3.754385979432186*^9, {3.7543865960332737`*^9, 3.7543866393542852`*^9}, 
   3.754387130081893*^9, {3.754486996667405*^9, 3.7544870033418417`*^9}, {
   3.754487784837748*^9, 3.754487895868473*^9}, {3.754487971335367*^9, 
   3.754487979520487*^9}, {3.754488072639188*^9, 3.754488075075388*^9}, {
   3.754488116685781*^9, 3.7544881248640203`*^9}, {3.754488182728508*^9, 
   3.754488183950274*^9}, {3.754493913004739*^9, 3.754493914650666*^9}, {
   3.754494057841743*^9, 3.754494060230774*^9}, {3.754494097561964*^9, 
   3.754494099523501*^9}, {3.7545720727185717`*^9, 3.754572072958062*^9}, {
   3.754572270963994*^9, 3.754572279510808*^9}, {3.754572440914484*^9, 
   3.7545724412451687`*^9}, {3.7545725515363283`*^9, 3.75457255674135*^9}, 
   3.754608826475161*^9, {3.754819798488879*^9, 3.754819801188841*^9}, {
   3.754819849399111*^9, 3.754819849678618*^9}, {3.754820448664645*^9, 
   3.754820449200594*^9}, {3.7548205069530354`*^9, 3.7548205079373083`*^9}, {
   3.7548223029984703`*^9, 3.754822304307889*^9}, {3.7548223521355677`*^9, 
   3.754822353379417*^9}, {3.754846520380213*^9, 3.754846576696081*^9}, {
   3.7548669091343946`*^9, 3.7548669092760267`*^9}, {3.7548669771462803`*^9, 
   3.754866977387639*^9}, 3.754958062775313*^9, {3.754958137540442*^9, 
   3.7549581529975758`*^9}, {3.755093511244752*^9, 3.755093540097097*^9}, {
   3.755116490998178*^9, 3.7551165213699627`*^9}, {3.7551166347256107`*^9, 
   3.755116648511799*^9}, {3.755247338067531*^9, 3.75524742682732*^9}, 
   3.7552474926263*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"88cb083b-6412-4f74-9ce1-1880850bac1b"],

Cell["\<\
Create a function evaluating the Taylor series given a set of Taylor \
coefficients.
Use this instead of Series to handle the Normal and Evaluate call\
\>", "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711918900134482*^9, 3.711918929700522*^9}, {
   3.731517086595916*^9, 3.731517087373741*^9}, 3.731952822863143*^9, 
   3.73589727444311*^9, 3.736026326714252*^9, 3.736026433422798*^9, {
   3.737746306926179*^9, 3.73774632243104*^9}, 3.738336942094256*^9, 
   3.7383382559744263`*^9, 3.738338299646661*^9, {3.7383430448806973`*^9, 
   3.738343083394471*^9}, {3.750355969958082*^9, 3.750355970459041*^9}, 
   3.754141374318205*^9, 3.7541431138060427`*^9, {3.754386202031747*^9, 
   3.754386232304257*^9}, 3.754386323216593*^9, {3.754386542633604*^9, 
   3.754386558976225*^9}, {3.754386829415042*^9, 3.754386867960476*^9}, 
   3.754387130082223*^9, 
   3.754608826476097*^9},ExpressionUUID->"faf73c06-db0a-4ef5-90cf-\
01af02531896"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getTaylor", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getTaylor", "[", "v_List", "]"}], " ", ":=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"v", "[", 
         RowBox[{"[", "k", "]"}], "]"}], 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", 
         RowBox[{"Length", "[", "v", "]"}]}], "}"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.754386461742337*^9, 3.754386558976416*^9}, {
   3.7543867780476007`*^9, 3.754386787026963*^9}, 3.754387130082326*^9, 
   3.754608826476757*^9, {3.754846974062871*^9, 3.754847012747313*^9}, {
   3.754848035212688*^9, 3.7548480357000217`*^9}, {3.754848111371355*^9, 
   3.754848111542493*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"ba259a72-d1e1-4d0c-8900-546301101a65"],

Cell[TextData[{
 "Create parametric Bezier function from Bernstein coefficients.\nUse ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "'s representation for this, so we don't have to code de Casteljau's \
algorithm"
}], "Subsection",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.711918900134482*^9, 3.711918929700522*^9}, {
   3.731517086595916*^9, 3.731517087373741*^9}, 3.731952822863143*^9, 
   3.73589727444311*^9, 3.736026326714252*^9, 3.736026433422798*^9, {
   3.737746306926179*^9, 3.73774632243104*^9}, 3.738336942094256*^9, 
   3.7383382559744263`*^9, 3.738338299646661*^9, {3.7383430448806973`*^9, 
   3.738343083394471*^9}, {3.750355969958082*^9, 3.750355970459041*^9}, 
   3.754141374318205*^9, 3.7541431138060427`*^9, {3.754386202031747*^9, 
   3.7543862171607933`*^9}, {3.754386873439093*^9, 3.754386876909111*^9}, 
   3.7543871300825157`*^9, 3.754608826476912*^9, {3.7561392028034773`*^9, 
   3.756139203363161*^9}},ExpressionUUID->"3b0ad7fd-dd0d-445e-a2e3-\
b0c2cac4f854"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "getBezier", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getBezier", "[", "v_List", "]"}], " ", ":=", "  ", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "v", "]"}], "\[Equal]", "1"}], ",", 
     RowBox[{"const", "[", 
      RowBox[{"v", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
     RowBox[{"BezierFunction", "[", " ", 
      RowBox[{"vec2pts", "[", "v", "]"}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.735897741532681*^9, {3.736011926226245*^9, 3.7360119547429667`*^9}, {
   3.7360128006961203`*^9, 3.73601281023013*^9}, {3.7360129922719727`*^9, 
   3.7360129997495117`*^9}, {3.736013551171611*^9, 3.7360135636565228`*^9}, 
   3.736026326714551*^9, 3.736026433422934*^9, 3.738336942094459*^9, 
   3.73833825597456*^9, 3.7383382996467867`*^9, {3.739546444136469*^9, 
   3.7395464445907784`*^9}, {3.7397207282430353`*^9, 3.739720739188971*^9}, {
   3.74973117402295*^9, 3.749731206868979*^9}, {3.749731331461752*^9, 
   3.749731356718264*^9}, {3.749731477361455*^9, 3.7497314975249567`*^9}, {
   3.751234457953278*^9, 3.7512344659450293`*^9}, 3.7512349155208178`*^9, {
   3.751239537170937*^9, 3.7512396055537863`*^9}, {3.75123969834319*^9, 
   3.751239698440075*^9}, {3.751647961955497*^9, 3.751647969951325*^9}, {
   3.751649375669798*^9, 3.751649378441306*^9}, 3.754141374318309*^9, 
   3.754143113806158*^9, {3.7543868897851353`*^9, 3.754386902076387*^9}, 
   3.754387130082705*^9, 3.754608826477573*^9, {3.754610312934773*^9, 
   3.7546103136766787`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"67abda04-21ef-4c91-9d41-85df673c975e"],

Cell[BoxData[
 StyleBox[
  RowBox[{
  "A", " ", "handy", " ", "function", " ", "for", " ", "blending", " ", 
   "colors"}], "Subsection",
  FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.732102558470532*^9, 3.732102596924732*^9}, {
   3.732114111910469*^9, 3.732114125581332*^9}, 3.732127502718733*^9, {
   3.732127533911353*^9, 3.732127550674966*^9}, {3.732127754237446*^9, 
   3.732127756993832*^9}, 3.7321288693227873`*^9, 3.73212891241963*^9, {
   3.732129415088895*^9, 3.732129425875176*^9}, {3.732129531845398*^9, 
   3.732129539033947*^9}, {3.732129953096222*^9, 3.732129958382139*^9}, {
   3.732130142641169*^9, 3.732130145759368*^9}, {3.73213018008291*^9, 
   3.732130206552321*^9}, {3.732130261505451*^9, 3.732130293497067*^9}, 
   3.7321304563241577`*^9, {3.7353779265778437`*^9, 3.735377936022112*^9}, {
   3.735471217068565*^9, 3.735471217900042*^9}, {3.7354969877023487`*^9, 
   3.735497092407927*^9}, {3.735544390943672*^9, 3.735544490189165*^9}, {
   3.735544543651828*^9, 3.735544607064198*^9}, {3.7355446616688232`*^9, 
   3.735544742578315*^9}, {3.735545139566977*^9, 3.735545208603848*^9}, {
   3.735552823769908*^9, 3.735552851835826*^9}, {3.7355578082832813`*^9, 
   3.735557818485927*^9}, {3.735559931339283*^9, 3.735559941100843*^9}, {
   3.735573240997778*^9, 3.735573249815032*^9}, {3.735594938713717*^9, 
   3.7355949439199944`*^9}, {3.735648909098857*^9, 3.735648910443869*^9}, {
   3.735648983570158*^9, 3.735648984393262*^9}, {3.735649018992484*^9, 
   3.7356490199346046`*^9}, {3.7356492326335163`*^9, 3.735649234654158*^9}, {
   3.735649268966217*^9, 3.735649270315702*^9}, {3.7356493152226543`*^9, 
   3.7356493612592983`*^9}, {3.735649663487281*^9, 3.73564968664286*^9}, {
   3.735649720842136*^9, 3.735649721309225*^9}, {3.735649819354648*^9, 
   3.735649838128467*^9}, {3.735649906570437*^9, 3.735649947850012*^9}, {
   3.735650030120523*^9, 3.735650081311432*^9}, {3.7356501412093973`*^9, 
   3.7356501459930677`*^9}, {3.7356501829128036`*^9, 3.735650226245116*^9}, {
   3.735650478307385*^9, 3.735650504144185*^9}, 3.735650624026601*^9, 
   3.735650660339768*^9, {3.7356506916645107`*^9, 3.735650694678915*^9}, {
   3.735650850326685*^9, 3.735650857932954*^9}, 3.735650893815444*^9, {
   3.735650948606904*^9, 3.735650978500313*^9}, {3.73565101058393*^9, 
   3.7356510304238977`*^9}, {3.7356511971156178`*^9, 
   3.7356512182962713`*^9}, {3.7356512709238234`*^9, 
   3.7356513073063374`*^9}, {3.735651347298937*^9, 3.735651348684575*^9}, {
   3.7356514107478657`*^9, 3.7356514157977667`*^9}, {3.735651508217677*^9, 
   3.7356515107373667`*^9}, {3.735651739144951*^9, 3.73565174051714*^9}, {
   3.7356517708043747`*^9, 3.7356517755452013`*^9}, {3.735651843042183*^9, 
   3.735651843200083*^9}, {3.7356520861355057`*^9, 3.735652086311399*^9}, {
   3.735652142066935*^9, 3.735652153016406*^9}, {3.735652193319667*^9, 
   3.7356521942960052`*^9}, {3.7356564414616823`*^9, 3.735656463366888*^9}, {
   3.735656644584326*^9, 3.735656703445451*^9}, {3.735656769066917*^9, 
   3.735656785443611*^9}, {3.735657005341816*^9, 3.7356570078911123`*^9}, {
   3.7356570629144077`*^9, 3.735657089789373*^9}, {3.735657145670114*^9, 
   3.735657174772538*^9}, {3.7356572735232277`*^9, 3.735657273850128*^9}, {
   3.73565732821902*^9, 3.735657328398617*^9}, {3.735657507029476*^9, 
   3.735657507622349*^9}, {3.735657582698598*^9, 3.735657590116972*^9}, {
   3.735657669862496*^9, 3.735657673802615*^9}, {3.735657744208853*^9, 
   3.735657757338828*^9}, {3.735657868896912*^9, 3.735657876664234*^9}, {
   3.735657947959414*^9, 3.735657948256514*^9}, {3.735658138909597*^9, 
   3.735658151303543*^9}, {3.735658185755516*^9, 3.7356581862153797`*^9}, {
   3.735658243972733*^9, 3.735658244319949*^9}, {3.73565831268548*^9, 
   3.735658312820302*^9}, 3.735658362380023*^9, {3.735658731353294*^9, 
   3.735658757122815*^9}, {3.735658798617049*^9, 3.735658800032707*^9}, {
   3.735658890604041*^9, 3.7356589063903437`*^9}, {3.73565894091717*^9, 
   3.7356589416763563`*^9}, {3.7356590386338673`*^9, 3.73565904342778*^9}, {
   3.735659125278323*^9, 3.735659137557932*^9}, {3.735659194111389*^9, 
   3.735659226093783*^9}, {3.735659348101001*^9, 3.735659350441386*^9}, {
   3.7356593845342293`*^9, 3.7356593896012707`*^9}, {3.735659446647326*^9, 
   3.735659500662261*^9}, {3.735659546539844*^9, 3.735659631429043*^9}, {
   3.735659785703455*^9, 3.735659788769508*^9}, 3.735660005142871*^9, {
   3.7356602596693563`*^9, 3.7356602638360577`*^9}, {3.735660421077979*^9, 
   3.735660481426803*^9}, {3.735660575078257*^9, 3.735660585952731*^9}, {
   3.735660617496057*^9, 3.735660619342904*^9}, {3.735661285821167*^9, 
   3.735661322529772*^9}, 3.7356614215336246`*^9, {3.735661461387319*^9, 
   3.735661487733156*^9}, {3.735662102446289*^9, 3.735662104937661*^9}, {
   3.735662164035537*^9, 3.735662191962673*^9}, {3.735662473827285*^9, 
   3.735662477153921*^9}, 3.735662551319089*^9, 3.735662595138855*^9, {
   3.7356626379706593`*^9, 3.735662642630128*^9}, {3.735662753734091*^9, 
   3.735662757084713*^9}, {3.735662839759568*^9, 3.735662858015263*^9}, {
   3.7356630553615313`*^9, 3.7356630572435503`*^9}, {3.735663116950877*^9, 
   3.735663118034788*^9}, 3.735663171039967*^9, {3.735667787985681*^9, 
   3.7356677920390387`*^9}, {3.735668081677809*^9, 3.7356680821259127`*^9}, {
   3.735668117460107*^9, 3.735668122696991*^9}, {3.735668199237842*^9, 
   3.735668203102934*^9}, {3.735668234494392*^9, 3.735668237676284*^9}, {
   3.73566826964065*^9, 3.7356682714232388`*^9}, {3.735679345887114*^9, 
   3.735679349645239*^9}, 3.735679415446059*^9, {3.735679535877398*^9, 
   3.735679539947708*^9}, {3.735716822120146*^9, 3.735716826017959*^9}, {
   3.735717193607283*^9, 3.735717211845129*^9}, {3.7357185021155376`*^9, 
   3.735718506415629*^9}, {3.7358047147111263`*^9, 3.735804799875762*^9}, {
   3.735805424270052*^9, 3.735805478092518*^9}, {3.735812575126211*^9, 
   3.735812576628275*^9}, {3.7358126265955677`*^9, 3.735812686176869*^9}, {
   3.735812752605093*^9, 3.735812752898879*^9}, {3.735812824005891*^9, 
   3.735812844020234*^9}, {3.735812897639289*^9, 3.735812897951201*^9}, {
   3.7358129513483257`*^9, 3.7358129564518213`*^9}, {3.735813241213028*^9, 
   3.735813245002002*^9}, {3.7358134784055557`*^9, 3.735813510833126*^9}, {
   3.735813637742559*^9, 3.735813639460161*^9}, {3.735815871832745*^9, 
   3.73581588319838*^9}, {3.735816242932254*^9, 3.735816260339443*^9}, {
   3.735816608974957*^9, 3.735816615630777*^9}, {3.735817121819501*^9, 
   3.7358171433285933`*^9}, {3.735818934579434*^9, 3.7358189393627577`*^9}, {
   3.7358189789150867`*^9, 3.735819008394449*^9}, {3.735896881234867*^9, 
   3.735896904338406*^9}, {3.735896944596465*^9, 3.735897023375228*^9}, {
   3.735897110973425*^9, 3.7358971521010647`*^9}, 3.735897185261899*^9, 
   3.7358972268437147`*^9, 3.735897284960593*^9, 3.7358977415329943`*^9, {
   3.735996146616042*^9, 3.735996166430722*^9}, {3.73599719299754*^9, 
   3.735997219430043*^9}, {3.735997254342575*^9, 3.735997259048862*^9}, {
   3.73600471967866*^9, 3.736004742521473*^9}, {3.736004777881364*^9, 
   3.7360047944411793`*^9}, {3.736009724822525*^9, 3.736009750739831*^9}, {
   3.736009813768564*^9, 3.7360098200550203`*^9}, {3.736010375102098*^9, 
   3.7360103954618*^9}, {3.736011014752948*^9, 3.736011019627995*^9}, {
   3.736011779648005*^9, 3.736011794075474*^9}, {3.736012510523621*^9, 
   3.7360125471590357`*^9}, {3.73601360306706*^9, 3.736013615448307*^9}, {
   3.7360138849032917`*^9, 3.736013917137372*^9}, {3.73601437929885*^9, 
   3.736014444133556*^9}, {3.736014552279443*^9, 3.736014609988225*^9}, {
   3.736015079214229*^9, 3.736015083907708*^9}, {3.736029460184594*^9, 
   3.736029471689818*^9}, {3.736060494124907*^9, 3.736060503506702*^9}, {
   3.7360637552643433`*^9, 3.736063769630118*^9}, 3.7360638247862186`*^9, {
   3.736063907784808*^9, 3.736063943566558*^9}, {3.736064039261862*^9, 
   3.73606404853127*^9}, {3.7360640819687843`*^9, 3.736064115334218*^9}, {
   3.736064165296238*^9, 3.736064166357782*^9}, {3.7360642555311728`*^9, 
   3.7360642747374496`*^9}, {3.736069149383876*^9, 3.736069166894781*^9}, {
   3.736069216397773*^9, 3.7360692267739353`*^9}, {3.736069257710615*^9, 
   3.736069269549946*^9}, {3.736069377265367*^9, 3.736069399494419*^9}, 
   3.7360694437663097`*^9, {3.736069475077023*^9, 3.7360694826447897`*^9}, {
   3.736069545940703*^9, 3.73606957544727*^9}, {3.73606962312125*^9, 
   3.7360696439539747`*^9}, {3.7360697301236258`*^9, 
   3.7360697627038193`*^9}, {3.7360698550376577`*^9, 3.736069910953578*^9}, {
   3.736069962639583*^9, 3.7360699818446817`*^9}, {3.7360701351315393`*^9, 
   3.736070149502872*^9}, {3.7360702781226473`*^9, 3.736070309877666*^9}, {
   3.7360704370945873`*^9, 3.736070476877026*^9}, {3.7360705735490437`*^9, 
   3.736070581434545*^9}, {3.7360722297050047`*^9, 3.73607225787475*^9}, {
   3.736072344049917*^9, 3.7360723578438263`*^9}, {3.736072540319373*^9, 
   3.7360725700046787`*^9}, {3.736072874373708*^9, 3.736072888881075*^9}, 
   3.736072975562001*^9, {3.736073208189991*^9, 3.736073216608439*^9}, {
   3.736074252473456*^9, 3.736074253697016*^9}, {3.737583105200396*^9, 
   3.737583149273025*^9}, {3.737583233297176*^9, 3.737583242414022*^9}, {
   3.737583274904525*^9, 3.737583277054326*^9}, {3.737583321606761*^9, 
   3.737583321989436*^9}, {3.737583382026021*^9, 3.73758338231382*^9}, {
   3.737583470402184*^9, 3.737583478080389*^9}, {3.737583529292481*^9, 
   3.7375835428344193`*^9}, {3.737583580866963*^9, 3.737583606937386*^9}, {
   3.737583647050335*^9, 3.737583663753199*^9}, {3.737583714611822*^9, 
   3.737583766296604*^9}, {3.737584069841462*^9, 3.737584134580638*^9}, {
   3.737584189437498*^9, 3.73758419333123*^9}, {3.7375842449055023`*^9, 
   3.737584246319572*^9}, {3.7376161329083357`*^9, 3.737616133393921*^9}, {
   3.7376161635957737`*^9, 3.737616163771865*^9}, {3.7376162681422377`*^9, 
   3.737616272437068*^9}, {3.737616324824353*^9, 3.7376163254790173`*^9}, {
   3.7376274183744297`*^9, 3.737627421155357*^9}, {3.7376274765552597`*^9, 
   3.7376274772968903`*^9}, {3.7376275224444027`*^9, 3.737627532644855*^9}, {
   3.737627744457905*^9, 3.737627776087906*^9}, {3.737628227409569*^9, 
   3.737628228150621*^9}, {3.7376284219486723`*^9, 3.737628424507503*^9}, {
   3.737629098727312*^9, 3.737629138227416*^9}, {3.7376296907590847`*^9, 
   3.737629691372527*^9}, {3.737886230220046*^9, 3.7378862414963713`*^9}, 
   3.737904998577546*^9, {3.737905086237756*^9, 3.7379050908476133`*^9}, {
   3.738060126307167*^9, 3.738060145190583*^9}, {3.738060246608797*^9, 
   3.7380602704241753`*^9}, {3.738060305651835*^9, 3.73806064449373*^9}, {
   3.738060692221726*^9, 3.738060692407413*^9}, {3.738063309246949*^9, 
   3.7380633103679*^9}, {3.7380636083317957`*^9, 3.738063695223586*^9}, {
   3.738063757560666*^9, 3.738063788381259*^9}, 3.738063897590468*^9, {
   3.7380639519796047`*^9, 3.7380639764985228`*^9}, {3.738064021996833*^9, 
   3.7380640224957237`*^9}, {3.7380641237675056`*^9, 3.738064132541601*^9}, 
   3.738064199953803*^9, {3.738064235750361*^9, 3.73806423630132*^9}, {
   3.7380643532275743`*^9, 3.7380643594905157`*^9}, {3.738064542601453*^9, 
   3.738064585701955*^9}, 3.738064716048737*^9, {3.738064778422545*^9, 
   3.7380648272702723`*^9}, {3.7380649863302183`*^9, 
   3.7380649866072493`*^9}, {3.738065050991549*^9, 3.738065066253873*^9}, {
   3.738065152295841*^9, 3.738065183416922*^9}, {3.7380653110048313`*^9, 
   3.738065369501004*^9}, {3.738065693145309*^9, 3.7380657000089483`*^9}, {
   3.738065825663471*^9, 3.7380658319658813`*^9}, {3.738065917268165*^9, 
   3.738065938270413*^9}, {3.73806638877108*^9, 3.738066416537117*^9}, {
   3.738066873956883*^9, 3.738066886530813*^9}, {3.738067164065469*^9, 
   3.738067171603098*^9}, {3.7380684819357157`*^9, 3.738068482370283*^9}, 
   3.738068547549898*^9, {3.7380701305767107`*^9, 3.73807014853202*^9}, {
   3.73807020697453*^9, 3.7380703760341873`*^9}, {3.7380705009723167`*^9, 
   3.7380705230107117`*^9}, {3.738070595356567*^9, 3.738070616337229*^9}, {
   3.738070953959182*^9, 3.7380709814808283`*^9}, {3.738071086575954*^9, 
   3.738071184047433*^9}, {3.738071226084917*^9, 3.7380713195574617`*^9}, {
   3.7380714131055183`*^9, 3.738071440354623*^9}, {3.7380716251471157`*^9, 
   3.7380716392590027`*^9}, {3.738071766125103*^9, 3.7380717744904213`*^9}, {
   3.738071876317552*^9, 3.73807202447581*^9}, {3.738072059420164*^9, 
   3.738072119190864*^9}, {3.738072173069127*^9, 3.738072184591444*^9}, 
   3.738336955301879*^9, 3.738338255975171*^9, 3.738338299647402*^9, {
   3.738345177779957*^9, 3.7383452298960752`*^9}, {3.738345325466111*^9, 
   3.7383454065951967`*^9}, {3.738345488403368*^9, 3.738345519405736*^9}, {
   3.738345572520175*^9, 3.738345576026328*^9}, {3.738750630787716*^9, 
   3.738750631850519*^9}, {3.738916901497798*^9, 3.738916902990119*^9}, {
   3.738916972368675*^9, 3.738917000487556*^9}, {3.738949491787883*^9, 
   3.738949497738669*^9}, {3.738949893639947*^9, 3.738949895149749*^9}, {
   3.739027402368133*^9, 3.739027414030789*^9}, {3.739027459120232*^9, 
   3.7390276187476263`*^9}, {3.7390276751154413`*^9, 
   3.7390276824353313`*^9}, {3.739027724193676*^9, 3.739027806193705*^9}, {
   3.73902787123553*^9, 3.739027871718473*^9}, {3.739028960833784*^9, 
   3.739028976987287*^9}, {3.739029069297614*^9, 3.739029074226367*^9}, {
   3.739029121063493*^9, 3.739029125818853*^9}, {3.739029173158266*^9, 
   3.739029177595796*^9}, {3.7390304594770203`*^9, 3.739030619075742*^9}, {
   3.7390315971133327`*^9, 3.739031630836677*^9}, {3.7390317151679277`*^9, 
   3.739031756649603*^9}, {3.739032300023691*^9, 3.739032344042932*^9}, {
   3.739032497018454*^9, 3.7390324974147577`*^9}, {3.739032759460058*^9, 
   3.7390328725469093`*^9}, 3.7390329337919407`*^9, {3.739033056409433*^9, 
   3.739033071854867*^9}, {3.739033163499449*^9, 3.7390332003926897`*^9}, 
   3.739033326934861*^9, 3.7390334969196577`*^9, {3.73903359704207*^9, 
   3.739033607588441*^9}, {3.739033869461527*^9, 3.73903387478139*^9}, {
   3.7390339275551157`*^9, 3.739033928558723*^9}, {3.739034056746669*^9, 
   3.739034103865707*^9}, {3.739034159634879*^9, 3.739034172048512*^9}, {
   3.739034278075027*^9, 3.739034383622189*^9}, {3.739034419439253*^9, 
   3.739034516254603*^9}, {3.7390345475499697`*^9, 3.739034659351832*^9}, {
   3.739034825851264*^9, 3.739034925287147*^9}, {3.739266590046399*^9, 
   3.739266603949102*^9}, 3.7392672832551537`*^9, {3.739267316492694*^9, 
   3.7392673230424757`*^9}, {3.739267365701989*^9, 3.739267489686923*^9}, {
   3.7392675415387497`*^9, 3.739267596904351*^9}, {3.739445861995351*^9, 
   3.739445865467003*^9}, {3.739473147393931*^9, 3.7394731493456907`*^9}, {
   3.739473192605424*^9, 3.7394733086851254`*^9}, {3.7395189834549437`*^9, 
   3.739518984276642*^9}, {3.7395190652857647`*^9, 3.739519141325289*^9}, {
   3.739519183579854*^9, 3.739519192793034*^9}, 3.7395194451661577`*^9, {
   3.7395209299859943`*^9, 3.739520946591774*^9}, {3.739521195736208*^9, 
   3.739521200697063*^9}, 3.739530972042251*^9, {3.739531247089264*^9, 
   3.739531315921474*^9}, {3.739532091938456*^9, 3.739532094504354*^9}, {
   3.739532243327567*^9, 3.739532244939783*^9}, {3.7397453215135193`*^9, 
   3.739745549450139*^9}, {3.739745580038732*^9, 3.739745615272418*^9}, {
   3.739747036627203*^9, 3.73974703937719*^9}, {3.7397472435583553`*^9, 
   3.739747293836514*^9}, {3.7397783932812653`*^9, 3.739778426422077*^9}, {
   3.739779626804604*^9, 3.739779627364358*^9}, {3.740260846112743*^9, 
   3.740260894331525*^9}, {3.7402609879265203`*^9, 3.740261094517726*^9}, {
   3.740261133941517*^9, 3.740261139372734*^9}, 3.740261419157898*^9, {
   3.749745507147835*^9, 3.7497455215268307`*^9}, {3.74974617774559*^9, 
   3.7497461884038773`*^9}, 3.749753729054751*^9, {3.749852864555781*^9, 
   3.74985286591755*^9}, 3.749852902803667*^9, {3.751412556589727*^9, 
   3.751412564145056*^9}, {3.751560129817213*^9, 3.75156017256548*^9}, {
   3.751560240243009*^9, 3.751560241343515*^9}, 3.754072864411167*^9, {
   3.754072970262003*^9, 3.754072978689069*^9}, {3.754073133513612*^9, 
   3.754073206435289*^9}, {3.75407334376059*^9, 3.754073349369935*^9}, 
   3.754141321553521*^9, 3.754143113806361*^9, {3.754386938301261*^9, 
   3.754386975544094*^9}, {3.7543870172745457`*^9, 3.754387075665242*^9}, 
   3.7543871165053263`*^9, 
   3.7546088264782057`*^9},ExpressionUUID->"367dfbb4-5237-404a-8971-\
7378dcb3f1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ramp", "[", 
    RowBox[{"x_", ",", "ml_", ",", "mr_", ",", "m_"}], "]"}], ":=", " ", 
   RowBox[{"Piecewise", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", 
         RowBox[{"x", "<", 
          RowBox[{"ml", "/", "m"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", 
         RowBox[{"x", ">", 
          RowBox[{"1", "-", 
           RowBox[{"mr", "/", "m"}]}]}]}], "}"}]}], "}"}], ",", 
     RowBox[{"x", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"m", "-", "ml"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"m", "-", "mr", "-", "ml"}], ")"}]}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.732102558470532*^9, 3.732102596924732*^9}, {
   3.732114111910469*^9, 3.732114125581332*^9}, 3.732127502718733*^9, {
   3.732127533911353*^9, 3.732127550674966*^9}, {3.732127754237446*^9, 
   3.732127756993832*^9}, 3.7321288693227873`*^9, 3.73212891241963*^9, {
   3.732129415088895*^9, 3.732129425875176*^9}, {3.732129531845398*^9, 
   3.732129539033947*^9}, {3.732129953096222*^9, 3.732129958382139*^9}, {
   3.732130142641169*^9, 3.732130145759368*^9}, {3.73213018008291*^9, 
   3.732130206552321*^9}, {3.732130261505451*^9, 3.732130293497067*^9}, 
   3.7321304563241577`*^9, {3.7353779265778437`*^9, 3.735377936022112*^9}, {
   3.735471217068565*^9, 3.735471217900042*^9}, {3.7354969877023487`*^9, 
   3.735497092407927*^9}, {3.735544390943672*^9, 3.735544490189165*^9}, {
   3.735544543651828*^9, 3.735544607064198*^9}, {3.7355446616688232`*^9, 
   3.735544742578315*^9}, {3.735545139566977*^9, 3.735545208603848*^9}, {
   3.735552823769908*^9, 3.735552851835826*^9}, {3.7355578082832813`*^9, 
   3.735557818485927*^9}, {3.735559931339283*^9, 3.735559941100843*^9}, {
   3.735573240997778*^9, 3.735573249815032*^9}, {3.735594938713717*^9, 
   3.7355949439199944`*^9}, {3.735648909098857*^9, 3.735648910443869*^9}, {
   3.735648983570158*^9, 3.735648984393262*^9}, {3.735649018992484*^9, 
   3.7356490199346046`*^9}, {3.7356492326335163`*^9, 3.735649234654158*^9}, {
   3.735649268966217*^9, 3.735649270315702*^9}, {3.7356493152226543`*^9, 
   3.7356493612592983`*^9}, {3.735649663487281*^9, 3.73564968664286*^9}, {
   3.735649720842136*^9, 3.735649721309225*^9}, {3.735649819354648*^9, 
   3.735649838128467*^9}, {3.735649906570437*^9, 3.735649947850012*^9}, {
   3.735650030120523*^9, 3.735650081311432*^9}, {3.7356501412093973`*^9, 
   3.7356501459930677`*^9}, {3.7356501829128036`*^9, 3.735650226245116*^9}, {
   3.735650478307385*^9, 3.735650504144185*^9}, 3.735650624026601*^9, 
   3.735650660339768*^9, {3.7356506916645107`*^9, 3.735650694678915*^9}, {
   3.735650850326685*^9, 3.735650857932954*^9}, 3.735650893815444*^9, {
   3.735650948606904*^9, 3.735650978500313*^9}, {3.73565101058393*^9, 
   3.7356510304238977`*^9}, {3.7356511971156178`*^9, 
   3.7356512182962713`*^9}, {3.7356512709238234`*^9, 
   3.7356513073063374`*^9}, {3.735651347298937*^9, 3.735651348684575*^9}, {
   3.7356514107478657`*^9, 3.7356514157977667`*^9}, {3.735651508217677*^9, 
   3.7356515107373667`*^9}, {3.735651739144951*^9, 3.73565174051714*^9}, {
   3.7356517708043747`*^9, 3.7356517755452013`*^9}, {3.735651843042183*^9, 
   3.735651843200083*^9}, {3.7356520861355057`*^9, 3.735652086311399*^9}, {
   3.735652142066935*^9, 3.735652153016406*^9}, {3.735652193319667*^9, 
   3.7356521942960052`*^9}, {3.7356564414616823`*^9, 3.735656463366888*^9}, {
   3.735656644584326*^9, 3.735656703445451*^9}, {3.735656769066917*^9, 
   3.735656785443611*^9}, {3.735657005341816*^9, 3.7356570078911123`*^9}, {
   3.7356570629144077`*^9, 3.735657089789373*^9}, {3.735657145670114*^9, 
   3.735657174772538*^9}, {3.7356572735232277`*^9, 3.735657273850128*^9}, {
   3.73565732821902*^9, 3.735657328398617*^9}, {3.735657507029476*^9, 
   3.735657507622349*^9}, {3.735657582698598*^9, 3.735657590116972*^9}, {
   3.735657669862496*^9, 3.735657673802615*^9}, {3.735657744208853*^9, 
   3.735657757338828*^9}, {3.735657868896912*^9, 3.735657876664234*^9}, {
   3.735657947959414*^9, 3.735657948256514*^9}, {3.735658138909597*^9, 
   3.735658151303543*^9}, {3.735658185755516*^9, 3.7356581862153797`*^9}, {
   3.735658243972733*^9, 3.735658244319949*^9}, {3.73565831268548*^9, 
   3.735658312820302*^9}, 3.735658362380023*^9, {3.735658731353294*^9, 
   3.735658757122815*^9}, {3.735658798617049*^9, 3.735658800032707*^9}, {
   3.735658890604041*^9, 3.7356589063903437`*^9}, {3.73565894091717*^9, 
   3.7356589416763563`*^9}, {3.7356590386338673`*^9, 3.73565904342778*^9}, {
   3.735659125278323*^9, 3.735659137557932*^9}, {3.735659194111389*^9, 
   3.735659226093783*^9}, {3.735659348101001*^9, 3.735659350441386*^9}, {
   3.7356593845342293`*^9, 3.7356593896012707`*^9}, {3.735659446647326*^9, 
   3.735659500662261*^9}, {3.735659546539844*^9, 3.735659631429043*^9}, {
   3.735659785703455*^9, 3.735659788769508*^9}, 3.735660005142871*^9, {
   3.7356602596693563`*^9, 3.7356602638360577`*^9}, {3.735660421077979*^9, 
   3.735660481426803*^9}, {3.735660575078257*^9, 3.735660585952731*^9}, {
   3.735660617496057*^9, 3.735660619342904*^9}, {3.735661285821167*^9, 
   3.735661322529772*^9}, 3.7356614215336246`*^9, {3.735661461387319*^9, 
   3.735661487733156*^9}, {3.735662102446289*^9, 3.735662104937661*^9}, {
   3.735662164035537*^9, 3.735662191962673*^9}, {3.735662473827285*^9, 
   3.735662477153921*^9}, 3.735662551319089*^9, 3.735662595138855*^9, {
   3.7356626379706593`*^9, 3.735662642630128*^9}, {3.735662753734091*^9, 
   3.735662757084713*^9}, {3.735662839759568*^9, 3.735662858015263*^9}, {
   3.7356630553615313`*^9, 3.7356630572435503`*^9}, {3.735663116950877*^9, 
   3.735663118034788*^9}, 3.735663171039967*^9, {3.735667787985681*^9, 
   3.7356677920390387`*^9}, {3.735668081677809*^9, 3.7356680821259127`*^9}, {
   3.735668117460107*^9, 3.735668122696991*^9}, {3.735668199237842*^9, 
   3.735668203102934*^9}, {3.735668234494392*^9, 3.735668237676284*^9}, {
   3.73566826964065*^9, 3.7356682714232388`*^9}, {3.735679345887114*^9, 
   3.735679349645239*^9}, 3.735679415446059*^9, {3.735679535877398*^9, 
   3.735679539947708*^9}, {3.735716822120146*^9, 3.735716826017959*^9}, {
   3.735717193607283*^9, 3.735717211845129*^9}, {3.7357185021155376`*^9, 
   3.735718506415629*^9}, {3.7358047147111263`*^9, 3.735804799875762*^9}, {
   3.735805424270052*^9, 3.735805478092518*^9}, {3.735812575126211*^9, 
   3.735812576628275*^9}, {3.7358126265955677`*^9, 3.735812686176869*^9}, {
   3.735812752605093*^9, 3.735812752898879*^9}, {3.735812824005891*^9, 
   3.735812844020234*^9}, {3.735812897639289*^9, 3.735812897951201*^9}, {
   3.7358129513483257`*^9, 3.7358129564518213`*^9}, {3.735813241213028*^9, 
   3.735813245002002*^9}, {3.7358134784055557`*^9, 3.735813510833126*^9}, {
   3.735813637742559*^9, 3.735813639460161*^9}, {3.735815871832745*^9, 
   3.73581588319838*^9}, {3.735816242932254*^9, 3.735816260339443*^9}, {
   3.735816608974957*^9, 3.735816615630777*^9}, {3.735817121819501*^9, 
   3.7358171433285933`*^9}, {3.735818934579434*^9, 3.7358189393627577`*^9}, {
   3.7358189789150867`*^9, 3.735819008394449*^9}, {3.735896881234867*^9, 
   3.735896904338406*^9}, {3.735896944596465*^9, 3.735897023375228*^9}, {
   3.735897110973425*^9, 3.7358971521010647`*^9}, 3.735897185261899*^9, 
   3.7358972268437147`*^9, 3.735897284960593*^9, 3.7358977415329943`*^9, {
   3.735996146616042*^9, 3.735996166430722*^9}, {3.73599719299754*^9, 
   3.735997219430043*^9}, {3.735997254342575*^9, 3.735997259048862*^9}, {
   3.73600471967866*^9, 3.736004742521473*^9}, {3.736004777881364*^9, 
   3.7360047944411793`*^9}, {3.736009724822525*^9, 3.736009750739831*^9}, {
   3.736009813768564*^9, 3.7360098200550203`*^9}, {3.736010375102098*^9, 
   3.7360103954618*^9}, {3.736011014752948*^9, 3.736011019627995*^9}, {
   3.736011779648005*^9, 3.736011794075474*^9}, {3.736012510523621*^9, 
   3.7360125471590357`*^9}, {3.73601360306706*^9, 3.736013615448307*^9}, {
   3.7360138849032917`*^9, 3.736013917137372*^9}, {3.73601437929885*^9, 
   3.736014444133556*^9}, {3.736014552279443*^9, 3.736014609988225*^9}, {
   3.736015079214229*^9, 3.736015083907708*^9}, {3.736029460184594*^9, 
   3.736029471689818*^9}, {3.736060494124907*^9, 3.736060503506702*^9}, {
   3.7360637552643433`*^9, 3.736063769630118*^9}, 3.7360638247862186`*^9, {
   3.736063907784808*^9, 3.736063943566558*^9}, {3.736064039261862*^9, 
   3.73606404853127*^9}, {3.7360640819687843`*^9, 3.736064115334218*^9}, {
   3.736064165296238*^9, 3.736064166357782*^9}, {3.7360642555311728`*^9, 
   3.7360642747374496`*^9}, {3.736069149383876*^9, 3.736069166894781*^9}, {
   3.736069216397773*^9, 3.7360692267739353`*^9}, {3.736069257710615*^9, 
   3.736069269549946*^9}, {3.736069377265367*^9, 3.736069399494419*^9}, 
   3.7360694437663097`*^9, {3.736069475077023*^9, 3.7360694826447897`*^9}, {
   3.736069545940703*^9, 3.73606957544727*^9}, {3.73606962312125*^9, 
   3.7360696439539747`*^9}, {3.7360697301236258`*^9, 
   3.7360697627038193`*^9}, {3.7360698550376577`*^9, 3.736069910953578*^9}, {
   3.736069962639583*^9, 3.7360699818446817`*^9}, {3.7360701351315393`*^9, 
   3.736070149502872*^9}, {3.7360702781226473`*^9, 3.736070309877666*^9}, {
   3.7360704370945873`*^9, 3.736070476877026*^9}, {3.7360705735490437`*^9, 
   3.736070581434545*^9}, {3.7360722297050047`*^9, 3.73607225787475*^9}, {
   3.736072344049917*^9, 3.7360723578438263`*^9}, {3.736072540319373*^9, 
   3.7360725700046787`*^9}, {3.736072874373708*^9, 3.736072888881075*^9}, 
   3.736072975562001*^9, {3.736073208189991*^9, 3.736073216608439*^9}, {
   3.736074252473456*^9, 3.736074253697016*^9}, {3.737583105200396*^9, 
   3.737583149273025*^9}, {3.737583233297176*^9, 3.737583242414022*^9}, {
   3.737583274904525*^9, 3.737583277054326*^9}, {3.737583321606761*^9, 
   3.737583321989436*^9}, {3.737583382026021*^9, 3.73758338231382*^9}, {
   3.737583470402184*^9, 3.737583478080389*^9}, {3.737583529292481*^9, 
   3.7375835428344193`*^9}, {3.737583580866963*^9, 3.737583606937386*^9}, {
   3.737583647050335*^9, 3.737583663753199*^9}, {3.737583714611822*^9, 
   3.737583766296604*^9}, {3.737584069841462*^9, 3.737584134580638*^9}, {
   3.737584189437498*^9, 3.73758419333123*^9}, {3.7375842449055023`*^9, 
   3.737584246319572*^9}, {3.7376161329083357`*^9, 3.737616133393921*^9}, {
   3.7376161635957737`*^9, 3.737616163771865*^9}, {3.7376162681422377`*^9, 
   3.737616272437068*^9}, {3.737616324824353*^9, 3.7376163254790173`*^9}, {
   3.7376274183744297`*^9, 3.737627421155357*^9}, {3.7376274765552597`*^9, 
   3.7376274772968903`*^9}, {3.7376275224444027`*^9, 3.737627532644855*^9}, {
   3.737627744457905*^9, 3.737627776087906*^9}, {3.737628227409569*^9, 
   3.737628228150621*^9}, {3.7376284219486723`*^9, 3.737628424507503*^9}, {
   3.737629098727312*^9, 3.737629138227416*^9}, {3.7376296907590847`*^9, 
   3.737629691372527*^9}, {3.737886230220046*^9, 3.7378862414963713`*^9}, 
   3.737904998577546*^9, {3.737905086237756*^9, 3.7379050908476133`*^9}, {
   3.738060126307167*^9, 3.738060145190583*^9}, {3.738060246608797*^9, 
   3.7380602704241753`*^9}, {3.738060305651835*^9, 3.73806064449373*^9}, {
   3.738060692221726*^9, 3.738060692407413*^9}, {3.738063309246949*^9, 
   3.7380633103679*^9}, {3.7380636083317957`*^9, 3.738063695223586*^9}, {
   3.738063757560666*^9, 3.738063788381259*^9}, 3.738063897590468*^9, {
   3.7380639519796047`*^9, 3.7380639764985228`*^9}, {3.738064021996833*^9, 
   3.7380640224957237`*^9}, {3.7380641237675056`*^9, 3.738064132541601*^9}, 
   3.738064199953803*^9, {3.738064235750361*^9, 3.73806423630132*^9}, {
   3.7380643532275743`*^9, 3.7380643594905157`*^9}, {3.738064542601453*^9, 
   3.738064585701955*^9}, 3.738064716048737*^9, {3.738064778422545*^9, 
   3.7380648272702723`*^9}, {3.7380649863302183`*^9, 
   3.7380649866072493`*^9}, {3.738065050991549*^9, 3.738065066253873*^9}, {
   3.738065152295841*^9, 3.738065183416922*^9}, {3.7380653110048313`*^9, 
   3.738065369501004*^9}, {3.738065693145309*^9, 3.7380657000089483`*^9}, {
   3.738065825663471*^9, 3.7380658319658813`*^9}, {3.738065917268165*^9, 
   3.738065938270413*^9}, {3.73806638877108*^9, 3.738066416537117*^9}, {
   3.738066873956883*^9, 3.738066886530813*^9}, {3.738067164065469*^9, 
   3.738067171603098*^9}, {3.7380684819357157`*^9, 3.738068482370283*^9}, 
   3.738068547549898*^9, {3.7380701305767107`*^9, 3.73807014853202*^9}, {
   3.73807020697453*^9, 3.7380703760341873`*^9}, {3.7380705009723167`*^9, 
   3.7380705230107117`*^9}, {3.738070595356567*^9, 3.738070616337229*^9}, {
   3.738070953959182*^9, 3.7380709814808283`*^9}, {3.738071086575954*^9, 
   3.738071184047433*^9}, {3.738071226084917*^9, 3.7380713195574617`*^9}, {
   3.7380714131055183`*^9, 3.738071440354623*^9}, {3.7380716251471157`*^9, 
   3.7380716392590027`*^9}, {3.738071766125103*^9, 3.7380717744904213`*^9}, {
   3.738071876317552*^9, 3.73807202447581*^9}, {3.738072059420164*^9, 
   3.738072119190864*^9}, {3.738072173069127*^9, 3.738072184591444*^9}, 
   3.738336955301879*^9, 3.738338255975171*^9, 3.738338299647402*^9, {
   3.738345177779957*^9, 3.7383452298960752`*^9}, {3.738345325466111*^9, 
   3.7383454065951967`*^9}, {3.738345488403368*^9, 3.738345519405736*^9}, {
   3.738345572520175*^9, 3.738345576026328*^9}, {3.738750630787716*^9, 
   3.738750631850519*^9}, {3.738916901497798*^9, 3.738916902990119*^9}, {
   3.738916972368675*^9, 3.738917000487556*^9}, {3.738949491787883*^9, 
   3.738949497738669*^9}, {3.738949893639947*^9, 3.738949895149749*^9}, {
   3.739027402368133*^9, 3.739027414030789*^9}, {3.739027459120232*^9, 
   3.7390276187476263`*^9}, {3.7390276751154413`*^9, 
   3.7390276824353313`*^9}, {3.739027724193676*^9, 3.739027806193705*^9}, {
   3.73902787123553*^9, 3.739027871718473*^9}, {3.739028960833784*^9, 
   3.739028976987287*^9}, {3.739029069297614*^9, 3.739029074226367*^9}, {
   3.739029121063493*^9, 3.739029125818853*^9}, {3.739029173158266*^9, 
   3.739029177595796*^9}, {3.7390304594770203`*^9, 3.739030619075742*^9}, {
   3.7390315971133327`*^9, 3.739031630836677*^9}, {3.7390317151679277`*^9, 
   3.739031756649603*^9}, {3.739032300023691*^9, 3.739032344042932*^9}, {
   3.739032497018454*^9, 3.7390324974147577`*^9}, {3.739032759460058*^9, 
   3.7390328725469093`*^9}, 3.7390329337919407`*^9, {3.739033056409433*^9, 
   3.739033071854867*^9}, {3.739033163499449*^9, 3.7390332003926897`*^9}, 
   3.739033326934861*^9, 3.7390334969196577`*^9, {3.73903359704207*^9, 
   3.739033607588441*^9}, {3.739033869461527*^9, 3.73903387478139*^9}, {
   3.7390339275551157`*^9, 3.739033928558723*^9}, {3.739034056746669*^9, 
   3.739034103865707*^9}, {3.739034159634879*^9, 3.739034172048512*^9}, {
   3.739034278075027*^9, 3.739034383622189*^9}, {3.739034419439253*^9, 
   3.739034516254603*^9}, {3.7390345475499697`*^9, 3.739034659351832*^9}, {
   3.739034825851264*^9, 3.739034925287147*^9}, {3.739266590046399*^9, 
   3.739266603949102*^9}, 3.7392672832551537`*^9, {3.739267316492694*^9, 
   3.7392673230424757`*^9}, {3.739267365701989*^9, 3.739267489686923*^9}, {
   3.7392675415387497`*^9, 3.739267596904351*^9}, {3.739445861995351*^9, 
   3.739445865467003*^9}, {3.739473147393931*^9, 3.7394731493456907`*^9}, {
   3.739473192605424*^9, 3.7394733086851254`*^9}, {3.7395189834549437`*^9, 
   3.739518984276642*^9}, {3.7395190652857647`*^9, 3.739519141325289*^9}, {
   3.739519183579854*^9, 3.739519192793034*^9}, 3.7395194451661577`*^9, {
   3.7395209299859943`*^9, 3.739520946591774*^9}, {3.739521195736208*^9, 
   3.739521200697063*^9}, 3.739530972042251*^9, {3.739531247089264*^9, 
   3.739531315921474*^9}, {3.739532091938456*^9, 3.739532094504354*^9}, {
   3.739532243327567*^9, 3.739532244939783*^9}, {3.7397453215135193`*^9, 
   3.739745549450139*^9}, {3.739745580038732*^9, 3.739745615272418*^9}, {
   3.739747036627203*^9, 3.73974703937719*^9}, {3.7397472435583553`*^9, 
   3.739747293836514*^9}, {3.7397783932812653`*^9, 3.739778426422077*^9}, {
   3.739779626804604*^9, 3.739779627364358*^9}, {3.740260846112743*^9, 
   3.740260894331525*^9}, {3.7402609879265203`*^9, 3.740261094517726*^9}, {
   3.740261133941517*^9, 3.740261139372734*^9}, 3.740261419157898*^9, {
   3.749745507147835*^9, 3.7497455215268307`*^9}, {3.74974617774559*^9, 
   3.7497461884038773`*^9}, 3.749753729054751*^9, {3.749852864555781*^9, 
   3.74985286591755*^9}, 3.749852902803667*^9, {3.751412556589727*^9, 
   3.751412564145056*^9}, {3.751560129817213*^9, 3.75156017256548*^9}, {
   3.751560240243009*^9, 3.751560241343515*^9}, 3.754072864411167*^9, {
   3.754072970262003*^9, 3.754072978689069*^9}, {3.754073133513612*^9, 
   3.754073206435289*^9}, {3.75407334376059*^9, 3.754073349369935*^9}, 
   3.754141321553521*^9, 3.754143113806361*^9, {3.754386938301261*^9, 
   3.754386975544094*^9}, {3.7543870172745457`*^9, 3.754387075665242*^9}, 
   3.754387116505473*^9, 3.754608826480709*^9},
 CellLabel->"In[15]:=",ExpressionUUID->"c9af6d59-1c83-498c-aeed-5ff41c940aff"],

Cell[TextData[{
 "The functions to analyze\n",
 StyleBox["For each parameterized probability density defined here, must \
define functions returning the density and the cumulative probability as \
functions of x and the parameters. You can let ", "Text"],
 StyleBox["Mathematica", "Text",
  FontSlant->"Italic"],
 StyleBox[" figure out one given the other by integrating or differentiating, \
but it may slow down updating substantially.", "Text"]
}], "Section",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.7319637757304583`*^9, 3.7319637861338577`*^9}, {
   3.735898548761734*^9, 3.7358986616736298`*^9}, {3.735898721527143*^9, 
   3.735898784030986*^9}, 3.7359126994511147`*^9, 3.73616128656539*^9, {
   3.737534568185649*^9, 3.737534592392858*^9}, 3.738338255975267*^9, 
   3.738338299647493*^9, 
   3.7541431138065147`*^9},ExpressionUUID->"c4d61151-5cba-4628-aa24-\
a2c7d698803c"],

Cell[TextData[StyleBox["Test", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, 3.749249767575053*^9, 
   3.754143113806664*^9},
 CellLabel->
  "In[1529]:=",ExpressionUUID->"1c34b377-656a-4cf7-87af-be565ee0a602"],

Cell["\<\
ClearAll[test,testDensity,testCumul];
testDensity:=Function[x,(1-x)^2+0.5 x (1-x)+x^2];
testCumul:=Function[x,1];\
\>", "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, 3.754143113806794*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"260b623f-98e8-404a-b6d7-1085d44f21b5"],

Cell[TextData[StyleBox["Binomial distribution", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737532533814249*^9, 3.737532547234335*^9}, 3.738338255975727*^9, 
   3.7383382996475687`*^9, {3.7492495086160297`*^9, 3.7492496876491137`*^9}, {
   3.7492497368978157`*^9, 3.749249736905263*^9}, {3.7497456947757597`*^9, 
   3.749745696158333*^9}, 
   3.7541431138069363`*^9},ExpressionUUID->"48db0d1a-cecf-4c5d-8b09-\
df2604874f66"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"binom", ",", "discreteDensity", ",", "discreteCumul"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"binom", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", "p_"}], "]"}], ":=", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"n", ",", "k"}], "]"}], 
       RowBox[{"p", "^", "k"}], " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "p"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"n", "-", "k"}], ")"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "n"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteDensity", "[", "p_List", "]"}], " ", ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"p", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"x", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Length", "[", "p", "]"}], "-", "1"}], ")"}]}], "-", 
            "0.5"}], "]"}], "+", "1"}], ")"}], "//", "N"}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"discreteCumul", "[", "p_List", "]"}], " ", ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"[", "k", "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", 
          RowBox[{
           RowBox[{"Ceiling", "[", 
            RowBox[{
             RowBox[{"x", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Length", "[", "p", "]"}], "-", "1"}], ")"}]}], "-", 
             "0.5"}], "]"}], "+", "1"}]}], "}"}]}], "]"}], "-", 
      RowBox[{
       RowBox[{"p", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/", "2"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.737531886321293*^9, 3.73753195197768*^9}, {
   3.737532113218192*^9, 3.737532187111287*^9}, {3.737532314367282*^9, 
   3.737532328152959*^9}, {3.7375324099648523`*^9, 3.737532438986512*^9}, 
   3.7375324916253633`*^9, {3.7375325338146057`*^9, 3.737532547234668*^9}, {
   3.737533555581559*^9, 3.73753373099868*^9}, {3.7375339427119513`*^9, 
   3.7375339469901667`*^9}, {3.737533980341501*^9, 3.7375339862835484`*^9}, {
   3.7375342558534613`*^9, 3.737534396688287*^9}, {3.7375345271270113`*^9, 
   3.737534527974811*^9}, {3.737534821176162*^9, 3.7375348272624483`*^9}, {
   3.737534874126359*^9, 3.737534916952495*^9}, {3.737534979571538*^9, 
   3.7375350001670322`*^9}, {3.737535062547394*^9, 3.737535096617594*^9}, {
   3.737535500318544*^9, 3.737535500684906*^9}, {3.737535565670382*^9, 
   3.737535580509572*^9}, {3.737535968841031*^9, 3.7375360918629713`*^9}, {
   3.737536173284389*^9, 3.737536282217926*^9}, {3.737538707033025*^9, 
   3.737538707816728*^9}, 3.737538900319604*^9, 3.737539416963769*^9, {
   3.7375778478278913`*^9, 3.737577849753892*^9}, {3.7375778949201097`*^9, 
   3.737577895269844*^9}, {3.737578156482383*^9, 3.7375781629579687`*^9}, {
   3.7375782178120127`*^9, 3.737578319892728*^9}, {3.737578384627439*^9, 
   3.737578456061039*^9}, {3.737578497361822*^9, 3.737578648650193*^9}, {
   3.737578729675352*^9, 3.737578792504963*^9}, {3.737578839904051*^9, 
   3.7375788400229816`*^9}, {3.7375788873108187`*^9, 3.737578914297316*^9}, {
   3.7375789970518913`*^9, 3.73757905670201*^9}, {3.7375791293745203`*^9, 
   3.737579244813169*^9}, {3.7375792895056047`*^9, 3.7375793136358547`*^9}, {
   3.737579358036264*^9, 3.737579366938898*^9}, {3.737579446492518*^9, 
   3.737579464091166*^9}, {3.737579526594549*^9, 3.737579599189126*^9}, {
   3.737579645863612*^9, 3.737579652797533*^9}, {3.737579813076392*^9, 
   3.737579844829397*^9}, {3.737579906135076*^9, 3.73757991040447*^9}, {
   3.7375799605425987`*^9, 3.7375799773271017`*^9}, {3.7375800124226313`*^9, 
   3.737580017429914*^9}, {3.737580137116846*^9, 3.737580157555428*^9}, {
   3.737581675185586*^9, 3.737581712187735*^9}, {3.737581746663404*^9, 
   3.737581750222834*^9}, 3.737646356096923*^9, {3.737671421178342*^9, 
   3.737671435654121*^9}, {3.737671470894717*^9, 3.7376716232911158`*^9}, 
   3.737671831916197*^9, {3.737671893864747*^9, 3.737671931695128*^9}, {
   3.737671966596856*^9, 3.737671967747532*^9}, {3.737672016174775*^9, 
   3.7376720597513857`*^9}, {3.737787945113186*^9, 3.737787950022223*^9}, {
   3.737803219721178*^9, 3.7378032269653387`*^9}, {3.737803500945188*^9, 
   3.737803643177516*^9}, {3.737803677205325*^9, 3.73780388025289*^9}, {
   3.737804271452938*^9, 3.737804273798962*^9}, {3.7378043390042973`*^9, 
   3.737804398187953*^9}, {3.737808394515728*^9, 3.737808398744735*^9}, {
   3.737814883844871*^9, 3.73781492223402*^9}, {3.7378153787265043`*^9, 
   3.737815387974098*^9}, {3.737885796734564*^9, 3.737885813220943*^9}, {
   3.737902963426457*^9, 3.7379029637381353`*^9}, {3.737903287267095*^9, 
   3.737903292089574*^9}, 3.73790355536304*^9, 3.73833825597605*^9, 
   3.738338299647861*^9, {3.738454879382358*^9, 3.738454879844726*^9}, {
   3.738454910293809*^9, 3.7384549106281567`*^9}, {3.7389265748884487`*^9, 
   3.738926582116252*^9}, {3.7390870679376*^9, 3.739087079009006*^9}, {
   3.739087773776256*^9, 3.739087792698391*^9}, 3.739257974599049*^9, {
   3.74026228404888*^9, 3.74026229895909*^9}, {3.74026243311159*^9, 
   3.740262445759438*^9}, {3.740263823406497*^9, 3.740263845157762*^9}, {
   3.740263923120159*^9, 3.740263923542428*^9}, {3.747931642977962*^9, 
   3.747931643526474*^9}, {3.747931693873671*^9, 3.747931697661931*^9}, {
   3.7479317832880983`*^9, 3.747931794232519*^9}, {3.7497456455489893`*^9, 
   3.749745661907137*^9}, {3.749745873279249*^9, 3.749745875641663*^9}, 
   3.749852458340616*^9, {3.751648778981842*^9, 3.751648786208725*^9}, 
   3.754143113807166*^9, {3.755684455599575*^9, 3.7556844650419827`*^9}, {
   3.7556845021137533`*^9, 3.755684534001993*^9}, {3.755684586263932*^9, 
   3.7556846038341827`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"6c9343cf-da94-4a8a-b757-78307e785f6b"],

Cell[TextData[StyleBox["Sum of m Bernoulli distributions with uniformly \
distributed p parameters", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737646257135179*^9, 3.73764632364014*^9}, {3.737646372598955*^9, 
   3.737646403643125*^9}, 3.7383382559761477`*^9, 3.738338299647945*^9, {
   3.7392711527610607`*^9, 3.739271173859455*^9}, 
   3.754143113807321*^9},ExpressionUUID->"ee747a6e-d5a0-45c8-ac85-\
c497c816176e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", "bSum", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bSum", "[", 
   RowBox[{
    RowBox[{"m_Integer", "?", "NonNegative"}], ",", "pt_List"}], "]"}], " ", ":=",
   " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "meanp", ",", "p", ",", "probs", ",", "n", ",", "ss", ",", "numSets", 
      ",", "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"RandomVariate", "[", 
         RowBox[{"UniformDistribution", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"pt", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", 
            RowBox[{"pt", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "]"}], "]"}], ",", 
        "m"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tmp", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{"k", ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"probs", " ", "=", 
      RowBox[{"{", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"p", "[", 
           RowBox[{"[", "k", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"AppendTo", "[", 
        RowBox[{"probs", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ss", "=", 
           RowBox[{"Subsets", "[", 
            RowBox[{"tmp", ",", 
             RowBox[{"{", "n", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"numSets", " ", "=", " ", 
           RowBox[{"Length", "[", "ss", "]"}]}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"p", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"ss", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "n"}], "}"}]}], "]"}], 
             RowBox[{"Product", "[", 
              RowBox[{
               RowBox[{"1", "-", 
                RowBox[{"p", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Complement", "[", 
                    RowBox[{"tmp", ",", 
                    RowBox[{"ss", "[", 
                    RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{"m", "-", "n"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "numSets"}], "}"}]}], "]"}]}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", 
         RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"probs", ",", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"p", "[", 
          RowBox[{"[", "k", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "m"}], "}"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "probs", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.737646336949757*^9, 3.737646350473671*^9}, {
   3.737646391774693*^9, 3.7376465630169888`*^9}, {3.737646601208292*^9, 
   3.737646602182227*^9}, {3.737646679341971*^9, 3.737646691828206*^9}, 
   3.737647315263301*^9, {3.737651573895666*^9, 3.737651703562004*^9}, {
   3.737655986119542*^9, 3.7376560002688627`*^9}, {3.737666164573682*^9, 
   3.737666172493001*^9}, {3.737666281945801*^9, 3.737666295730221*^9}, 
   3.737666350993842*^9, 3.73766646876191*^9, {3.73766649938465*^9, 
   3.737666506368555*^9}, {3.7376666335238132`*^9, 3.737666637234067*^9}, {
   3.737667052803689*^9, 3.737667097470405*^9}, {3.7376672312473307`*^9, 
   3.7376672318206463`*^9}, {3.7376673637685547`*^9, 
   3.7376673646864223`*^9}, {3.737667512399136*^9, 3.7376675208034277`*^9}, {
   3.73766764817099*^9, 3.737667653289712*^9}, {3.737667691147472*^9, 
   3.737667693528853*^9}, {3.737670259860404*^9, 3.737670283803771*^9}, {
   3.737670323379758*^9, 3.737670365223727*^9}, {3.737670396862391*^9, 
   3.737670498504664*^9}, {3.7376705679517612`*^9, 3.7376706269606047`*^9}, {
   3.737670680855104*^9, 3.737670863022977*^9}, {3.737670933560128*^9, 
   3.737670980364614*^9}, 3.7376710232312317`*^9, {3.7376710573185463`*^9, 
   3.7376711577661943`*^9}, {3.737671192874289*^9, 3.737671222230876*^9}, {
   3.737671258225136*^9, 3.737671258686247*^9}, {3.737671383847481*^9, 
   3.737671384452806*^9}, {3.737703315844173*^9, 3.737703316972281*^9}, {
   3.737790461351042*^9, 3.7377904666077414`*^9}, {3.73779808614454*^9, 
   3.737798118299214*^9}, {3.737800175012341*^9, 3.737800187041254*^9}, {
   3.737800620598452*^9, 3.737800621766637*^9}, {3.737800854567192*^9, 
   3.7378008714885473`*^9}, {3.7378032381812887`*^9, 3.737803242880054*^9}, {
   3.7378038920173798`*^9, 3.737803920234764*^9}, {3.737902994204815*^9, 
   3.7379030265172167`*^9}, 3.737903160219104*^9, {3.737903276292016*^9, 
   3.737903281194396*^9}, {3.737903560458089*^9, 3.737903561037418*^9}, 
   3.7379074701619873`*^9, 3.738338255976431*^9, 3.7383382996482277`*^9, 
   3.73927104413689*^9, 3.739271140683585*^9, 3.739779678180855*^9, 
   3.754143113807596*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"c7b1519e-bd54-4653-aa54-7d8674e5c994"],

Cell[TextData[StyleBox["A 2-parameter (a, \[Epsilon]) family of unimodal \
probability functions, a simple pole at (a, \[Epsilon]i).", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.735897865841621*^9}, 3.7358979415364943`*^9, {3.7358981298804483`*^9, 
   3.735898141919488*^9}, {3.7358983106517353`*^9, 3.7358984578777637`*^9}, 
   3.735899663143667*^9, 3.735912699451281*^9, 3.736161286565516*^9, {
   3.736871945547304*^9, 3.736872080476202*^9}, {3.737357651536113*^9, 
   3.7373576557917557`*^9}, {3.737531867624702*^9, 3.737531883160706*^9}, {
   3.737646257135179*^9, 3.73764632364014*^9}, 3.738338255976513*^9, 
   3.7383382996483107`*^9, 3.7541431138077517`*^9, {3.7548596354724617`*^9, 
   3.754859671265167*^9}},ExpressionUUID->"d832c35e-4b33-40cc-a956-\
b4961faa2cc6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"cumulP", ",", "densP", ",", "poleDensity", ",", "poleCumul"}], 
   "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"densP", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"x", "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", "-", "a"}], ")"}], "^", "2"}], "+", 
        SuperscriptBox["\[Epsilon]", "2"]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulP", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"a", "/", "\[Epsilon]"}], ")"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"ArcTan", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "a"}], ")"}], "/", "\[Epsilon]"}], "]"}], "+", 
         RowBox[{"ArcTan", "[", 
          RowBox[{"a", "/", "\[Epsilon]"}], "]"}]}], ")"}]}], "+", " ", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]", "^", "2"}], " ", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"x", "-", "a"}], ")"}], "^", "2"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Epsilon]", "^", "2"}], "+", 
           RowBox[{"a", "^", "2"}]}], ")"}]}], "]"}], "/", "2"}]}]}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poleDensity", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"densP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "x", "]"}], "/", 
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "1.0", "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"poleCumul", "[", 
    RowBox[{"a_", ",", "\[Epsilon]_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "x", "]"}], "/", 
      RowBox[{
       RowBox[{"cumulP", "[", 
        RowBox[{"a", ",", "\[Epsilon]"}], "]"}], "[", "1.0", "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898454326414*^9, {3.7358986904205847`*^9, 3.73589871113377*^9}, {
   3.735898872135193*^9, 3.7358988912423983`*^9}, {3.735899547372711*^9, 
   3.73589962721205*^9}, {3.735899768514532*^9, 3.7358997714712067`*^9}, {
   3.735899863515256*^9, 3.735899877668038*^9}, {3.735907509012054*^9, 
   3.735907513883072*^9}, {3.735907591370254*^9, 3.735907645016827*^9}, 
   3.7359078237326317`*^9, {3.735908327690773*^9, 3.735908356544723*^9}, {
   3.735908624220248*^9, 3.735908635358655*^9}, {3.7359096218295794`*^9, 
   3.735909843084895*^9}, {3.735911228872504*^9, 3.735911240941436*^9}, 
   3.7359112765546503`*^9, 3.7359126994516783`*^9, {3.7359396172897987`*^9, 
   3.735939757322338*^9}, {3.735940063138294*^9, 3.735940063497984*^9}, {
   3.735940265967228*^9, 3.735940276956369*^9}, {3.735990601743145*^9, 
   3.7359906271835403`*^9}, {3.735990668601775*^9, 3.7359907258802853`*^9}, {
   3.7359907649947*^9, 3.735990803198934*^9}, {3.7359908388830967`*^9, 
   3.7359908637543497`*^9}, {3.735990900322216*^9, 3.735991019173235*^9}, 
   3.7359913082810097`*^9, {3.735991513414805*^9, 3.735991791549687*^9}, {
   3.735991822574284*^9, 3.7359919300014763`*^9}, {3.735992827592359*^9, 
   3.7359928297008047`*^9}, {3.735992928019713*^9, 3.735993010766301*^9}, 
   3.735993167088216*^9, {3.7359935977803907`*^9, 3.73599367581383*^9}, {
   3.735996093862649*^9, 3.735996130129492*^9}, {3.7359970151666*^9, 
   3.735997020747998*^9}, {3.73600485357478*^9, 3.736004899513832*^9}, {
   3.736005002224728*^9, 3.7360050383083973`*^9}, 3.736013844055142*^9, {
   3.736025886494748*^9, 3.736025905661578*^9}, {3.736026473193685*^9, 
   3.736026473600013*^9}, {3.736026511188542*^9, 3.7360265381349783`*^9}, {
   3.7360292594429913`*^9, 3.736029265138176*^9}, {3.7360294421300793`*^9, 
   3.73602944564781*^9}, {3.736029897691383*^9, 3.736029949199732*^9}, {
   3.736060524746869*^9, 3.736060565737711*^9}, 3.73606062104947*^9, {
   3.736060709292077*^9, 3.736060762884686*^9}, {3.7360608319291077`*^9, 
   3.736060833310987*^9}, {3.7360610418778057`*^9, 3.736061044644044*^9}, {
   3.7361022733717127`*^9, 3.736102277767427*^9}, 3.7361612865659246`*^9, {
   3.736288620635769*^9, 3.736288754487686*^9}, {3.736288789399177*^9, 
   3.736288798125044*^9}, {3.736290593408996*^9, 3.736290597295961*^9}, 
   3.736290629539263*^9, {3.736754964645846*^9, 3.736755111115017*^9}, {
   3.736755171778453*^9, 3.7367552981673317`*^9}, {3.7367553387492743`*^9, 
   3.7367553828281193`*^9}, {3.736755413578918*^9, 3.7367555443360786`*^9}, {
   3.7367555839610023`*^9, 3.7367556446187067`*^9}, {3.7367556996570063`*^9, 
   3.736755732754785*^9}, {3.736755829540156*^9, 3.7367558672961206`*^9}, {
   3.7367559089870872`*^9, 3.736756001172892*^9}, {3.7367561651446238`*^9, 
   3.736756168903118*^9}, {3.7367694675843067`*^9, 3.736769493460244*^9}, {
   3.7367697828407087`*^9, 3.736769814224971*^9}, {3.736769896673592*^9, 
   3.7367700997519827`*^9}, {3.736770156505452*^9, 3.736770156559758*^9}, {
   3.736770489877425*^9, 3.736770490236188*^9}, {3.736864690040619*^9, 
   3.7368647356110287`*^9}, {3.736864767543346*^9, 3.736864802101315*^9}, {
   3.7368648331124983`*^9, 3.736865051267127*^9}, {3.736865086112262*^9, 
   3.736865155239406*^9}, {3.736865367055551*^9, 3.736865384206764*^9}, {
   3.736865477825595*^9, 3.7368654793252697`*^9}, {3.736865601216936*^9, 
   3.736865602455225*^9}, {3.736865669444368*^9, 3.7368657823929*^9}, {
   3.7368659211886168`*^9, 3.73686592151534*^9}, {3.7368660257281313`*^9, 
   3.7368660268094063`*^9}, {3.736866281004071*^9, 3.736866299784539*^9}, {
   3.736866335558733*^9, 3.736866391895143*^9}, {3.736866438460935*^9, 
   3.736866459592395*^9}, {3.736866512663084*^9, 3.736866526001642*^9}, {
   3.736866579201152*^9, 3.7368666003098783`*^9}, 3.7368668065761642`*^9, {
   3.7368669254361887`*^9, 3.7368669326615477`*^9}, {3.736867006712708*^9, 
   3.736867075248969*^9}, {3.736867287634159*^9, 3.7368672946697483`*^9}, {
   3.736867330818149*^9, 3.7368673710021267`*^9}, {3.736868761680132*^9, 
   3.736868783148178*^9}, {3.736869936082715*^9, 3.7368699930956173`*^9}, {
   3.736870076516234*^9, 3.736870151453331*^9}, 3.73687018503034*^9, {
   3.736870243842136*^9, 3.736870249151005*^9}, {3.7368702909053392`*^9, 
   3.736870304970777*^9}, 3.736870353031806*^9, {3.73687041400137*^9, 
   3.73687046720225*^9}, {3.7368725566617317`*^9, 3.736872557669557*^9}, {
   3.736872614085992*^9, 3.7368726683672237`*^9}, {3.736872735317577*^9, 
   3.7368727383739433`*^9}, {3.7368727699473753`*^9, 
   3.7368727982343187`*^9}, {3.7368728336091146`*^9, 
   3.7368728344491997`*^9}, {3.7368893168272877`*^9, 
   3.7368893719594088`*^9}, {3.73693223813505*^9, 3.7369322498183804`*^9}, 
   3.7369323051297913`*^9, {3.736975137201873*^9, 3.736975141183916*^9}, {
   3.7369752022695017`*^9, 3.736975214190365*^9}, {3.7372378079893503`*^9, 
   3.737237828882903*^9}, {3.737237936432222*^9, 3.7372379404695787`*^9}, 
   3.737237995983798*^9, 3.737238047631641*^9, {3.737238082513006*^9, 
   3.7372380830401773`*^9}, {3.737238667515856*^9, 3.73723867595782*^9}, {
   3.737271333022602*^9, 3.737271334211413*^9}, {3.7372713734638777`*^9, 
   3.737271394999257*^9}, {3.7372715843378563`*^9, 3.737271601052511*^9}, {
   3.737271734635717*^9, 3.737271788698053*^9}, {3.7372718197068663`*^9, 
   3.7372718234890203`*^9}, {3.737273633602469*^9, 3.737273805479383*^9}, {
   3.737273883609269*^9, 3.737273884054497*^9}, {3.7372821268731194`*^9, 
   3.737282141908787*^9}, 3.737282246425291*^9, {3.7372861641833773`*^9, 
   3.7372861701227007`*^9}, 3.73728635118745*^9, {3.737287907053813*^9, 
   3.737287917179388*^9}, 3.7372880920205297`*^9, {3.737291416319409*^9, 
   3.737291432976218*^9}, {3.737300527348225*^9, 3.73730052910469*^9}, {
   3.737300613048005*^9, 3.737300757058311*^9}, {3.737300800906597*^9, 
   3.7373008087928877`*^9}, {3.73730084433739*^9, 3.737300851532393*^9}, {
   3.737301005435967*^9, 3.73730111326385*^9}, {3.7373011633010693`*^9, 
   3.737301169603229*^9}, {3.737370353949821*^9, 3.737370356741892*^9}, {
   3.73737041988614*^9, 3.737370426462532*^9}, {3.737455505892397*^9, 
   3.7374555512427*^9}, {3.737455659044181*^9, 3.7374556608519583`*^9}, 
   3.737480717628152*^9, {3.7375319607224903`*^9, 3.737532032544648*^9}, {
   3.737532072999752*^9, 3.737532104718546*^9}, {3.737539457602384*^9, 
   3.7375394580967207`*^9}, {3.737539521084559*^9, 3.73753952430648*^9}, 
   3.73763012568908*^9, 3.738338255976781*^9, 3.7383382996485653`*^9, {
   3.7390501176984653`*^9, 3.7390502100378942`*^9}, {3.7392710320157413`*^9, 
   3.739271040507855*^9}, 3.754143113807993*^9},
 CellLabel->"In[25]:=",ExpressionUUID->"41f8ec12-f622-403f-9509-6c1044b40bb6"],

Cell[TextData[StyleBox["Partition function for 2-D Ising model onm a lattice \
in an external field", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729303*^9}, 3.735899684760001*^9, 3.736161286566001*^9, {
   3.737357395799263*^9, 3.737357398126008*^9}, {3.737369994169845*^9, 
   3.7373699968531303`*^9}, 3.7383382559768763`*^9, 3.738338299648665*^9, {
   3.7400361280533867`*^9, 3.7400361597614*^9}, 3.754143113808154*^9, {
   3.755708451810215*^9, 
   3.755708460010436*^9}},ExpressionUUID->"af612f0b-ae36-4f80-9907-\
55ffccbbd50f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ClearAll", "[", 
    RowBox[{
    "numConfigs1DIsing", ",", "isingDoS1D", ",", "densI", ",", "cumulI", ",", 
     "ising1D"}], "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "the", " ", "number", " ", "of", " ", "configurations", " ", "of", " ", 
      "a", " ", "1"}], "-", 
     RowBox[{
     "D", " ", "chain", " ", "with", " ", "periodic", " ", "boundary", " ", 
      "conditions", " ", "and", " ", "n", " ", "sites", " ", "that", " ", 
      "have", " ", "\[IndentingNewLine]", "s", " ", "spins", " ", "flipped", 
      " ", "and", " ", "f", " ", "pairs", " ", "of", " ", "spins", " ", 
      "frustrated", " ", "will", " ", "be", " ", "in", " ", 
      RowBox[{
       RowBox[{"counts", "[", 
        RowBox[{"[", 
         RowBox[{"n", ",", 
          RowBox[{"s", "+", "1"}], ",", 
          RowBox[{"f", "+", "1"}]}], "]"}], "]"}], ".", " ", "Uses"}], " ", 
      "a", " ", "recurrence", " ", "relation", " ", "that", " ", "requires", 
      " ", "counts", " ", "to", " ", "have", " ", "been", " ", "initialized", 
      " ", "for", " ", "all", " ", 
      RowBox[{"n", "'"}]}]}], "<", 
    RowBox[{"n", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numConfigs1DIsing", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"s_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"f_Integer", "?", "NonNegative"}], ",", "counts_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "rtn", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rtn", " ", "=", " ", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"EvenQ", "[", "f", "]"}], " ", "||", 
         RowBox[{"(", 
          RowBox[{"f", ">", 
           RowBox[{
            RowBox[{"2", "s"}], "-", "1"}]}], " ", ")"}], "||", " ", 
         RowBox[{"(", 
          RowBox[{"f", ">", 
           RowBox[{"n", "+", "1"}]}], ")"}], "||", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"f", "<", "3"}], ")"}], "&&", 
           RowBox[{"(", 
            RowBox[{"s", ">", "1"}], ")"}], " ", "&&", " ", 
           RowBox[{"(", 
            RowBox[{"s", "\[LessEqual]", "n"}], ")"}]}], ")"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"rtn", "=", "0"}], "\[IndentingNewLine]", ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", " ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"n", "\[Equal]", "1"}], ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"s", "\[Equal]", "1"}], ")"}], " ", "||", " ", 
            RowBox[{"(", 
             RowBox[{"s", "\[Equal]", "n"}], ")"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"rtn", " ", "=", " ", "1"}], "\[IndentingNewLine]", ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"n", "\[GreaterEqual]", "f"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"rtn", "=", 
                RowBox[{"counts", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"n", "-", "1"}], ",", 
                   RowBox[{"s", "-", "1"}], ",", "f"}], "]"}], "]"}]}], 
               ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"If", "[", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"n", ">", "1"}], ")"}], " ", "&&", " ", 
               RowBox[{"(", 
                RowBox[{"s", " ", ">", " ", "1"}], ")"}], " ", "&&", " ", 
               RowBox[{"(", 
                RowBox[{"f", " ", ">", " ", "2"}], ")"}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"rtn", " ", "=", " ", 
               RowBox[{"rtn", " ", "+", " ", 
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{"counts", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", ",", 
                    RowBox[{"s", "-", "1"}], ",", 
                    RowBox[{"f", "-", "2"}]}], "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", 
                    RowBox[{"Max", "[", 
                    RowBox[{"1", ",", 
                    RowBox[{"f", "-", "3"}], ",", 
                    RowBox[{"s", "-", "2"}]}], "]"}], ",", 
                    RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}]}]}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "rtn"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "The", " ", "density", " ", "of", " ", "states", " ", "function", " ", 
     "for", " ", "a", " ", "1"}], "-", 
    RowBox[{
    "dimensional", " ", "Ising", " ", "model", " ", "with", " ", "n", " ", 
     "sites", " ", "in", " ", "an", " ", "external", " ", 
     RowBox[{"field", ".", " ", "counts"}], " ", "can", " ", "be", " ", "an", 
     " ", "empty", " ", "list", " ", "on", " ", 
     RowBox[{"input", ".", " ", "Returns"}], " ", "a", " ", "list", " ", "of",
      " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"m", "+", "1"}], ",", 
       RowBox[{"m", "+", "2"}]}], ")"}]}], "-", 
    RowBox[{
    "dimensional", " ", "arrays", " ", "for", " ", "each", " ", "m", " ", 
     RowBox[{"in", " ", "[", 
      RowBox[{"1", ",", "n"}], "]"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"isingDoS1D", "[", 
    RowBox[{
     RowBox[{"n_Integer", "?", "NonNegative"}], ",", "counts_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mycounts", ",", "mat", ",", "rules"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"n", " ", ">", " ", "1"}], ")"}], " ", "&&", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"Length", "[", "counts", "]"}], "<", 
           RowBox[{"n", "-", "1"}]}], ")"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"mycounts", " ", "=", " ", 
         RowBox[{"isingDoS1D", "[", 
          RowBox[{
           RowBox[{"n", "-", "1"}], ",", "counts"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"mycounts", " ", "=", " ", "counts"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"rules", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "1"}], "}"}], "\[Rule]", "1"}], ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", "1"}], "}"}], "\[Rule]", "1"}]}], 
        "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"rules", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"rules", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"2", ",", "3"}], "}"}], "\[Rule]", "n"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"rules", "=", 
          RowBox[{"Join", "[", 
           RowBox[{"rules", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"n", ",", "3"}], "}"}], "\[Rule]", "n"}], "}"}]}], 
           "]"}]}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"n", ">", "2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"rules", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"rules", ",", "\[IndentingNewLine]", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"s", "+", "1"}], ",", 
                    RowBox[{"f", "+", "1"}]}], "}"}], "\[Rule]", 
                  RowBox[{"numConfigs1DIsing", "[", 
                   RowBox[{"n", ",", 
                    RowBox[{"s", "+", "1"}], ",", 
                    RowBox[{"f", "+", "1"}], ",", "mycounts"}], "]"}]}], 
                 "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"s", ",", "2", ",", 
                  RowBox[{"n", "-", "2"}]}], "}"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}], "]"}]}], 
          "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{
         "\"\<rules for n:\>\"", ",", "n", ",", " ", "\"\< \>\"", ",", 
          "rules"}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"mat", "=", 
       RowBox[{"Normal", "[", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"rules", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"n", "+", "1"}], ",", 
            RowBox[{"n", "+", "1"}]}], "}"}], ",", "0"}], "]"}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"MatrixForm", "[", "mat", "]"}], "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"mycounts", ",", "mat"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "mycounts", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "mycounts"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, {3.736075932504421*^9, 3.736075946015728*^9}, 
   3.736075981593196*^9, 3.73616128656625*^9, 3.7369322601711397`*^9, 
   3.7369322935233994`*^9, {3.7373574097023563`*^9, 3.7373575140437202`*^9}, {
   3.737385574026482*^9, 3.737385612202183*^9}, {3.737386812679132*^9, 
   3.737386813970861*^9}, {3.737389378303644*^9, 3.737389388928886*^9}, 
   3.738338255977098*^9, 3.738338299648872*^9, {3.738950226819643*^9, 
   3.738950231976351*^9}, {3.740036168000227*^9, 3.740036219319195*^9}, {
   3.7400362617765017`*^9, 3.740036278383411*^9}, {3.740036338489291*^9, 
   3.740036381238064*^9}, {3.740037971953627*^9, 3.7400379802805443`*^9}, {
   3.740045607894362*^9, 3.7400456151155357`*^9}, {3.740045659319628*^9, 
   3.740045744466529*^9}, {3.740046472920994*^9, 3.740046508874208*^9}, {
   3.740046556309042*^9, 3.7400467527800903`*^9}, {3.740046861693116*^9, 
   3.74004686820085*^9}, {3.740046956300091*^9, 3.740046956665234*^9}, {
   3.740047261765596*^9, 3.7400473172777576`*^9}, {3.740060808326494*^9, 
   3.740060811876367*^9}, {3.740061282289858*^9, 3.7400612959897623`*^9}, {
   3.740178357604425*^9, 3.7401783810583143`*^9}, {3.7401784485316668`*^9, 
   3.740178449593624*^9}, {3.74018001478762*^9, 3.740180019649459*^9}, 
   3.7402480453097878`*^9, {3.740248104306658*^9, 3.740248135671788*^9}, {
   3.7402494071147118`*^9, 3.740249441904221*^9}, {3.740249476737877*^9, 
   3.7402495707774076`*^9}, {3.740249670081923*^9, 3.740249670532776*^9}, {
   3.740249707622436*^9, 3.740249707838723*^9}, {3.740305770793913*^9, 
   3.740305775102912*^9}, 3.740306862692932*^9, {3.740306908260989*^9, 
   3.740306971585284*^9}, {3.740307139507625*^9, 3.740307175790572*^9}, {
   3.740307262340871*^9, 3.740307352578806*^9}, {3.7403073880038567`*^9, 
   3.740307402970755*^9}, {3.740307605213231*^9, 3.740307620053833*^9}, {
   3.74030840426982*^9, 3.740308411013072*^9}, {3.7403084563746157`*^9, 
   3.74030845666702*^9}, {3.740320941318943*^9, 3.740320965908925*^9}, {
   3.740321004759136*^9, 3.740321005639454*^9}, {3.74032110023108*^9, 
   3.740321102267017*^9}, {3.740321238460163*^9, 3.740321381181258*^9}, {
   3.7403214444346533`*^9, 3.7403215857680597`*^9}, {3.74032161631679*^9, 
   3.740321616736602*^9}, {3.7497543416492968`*^9, 3.749754356316204*^9}, {
   3.7497544020640087`*^9, 3.7497544264831448`*^9}, {3.7497544808308353`*^9, 
   3.7497545150728283`*^9}, {3.749754551296647*^9, 3.749754555163857*^9}, {
   3.749754590657971*^9, 3.74975463823813*^9}, {3.74975467872375*^9, 
   3.749754696592944*^9}, {3.749754741529245*^9, 3.7497548060394583`*^9}, {
   3.7497548367522497`*^9, 3.749754904770163*^9}, {3.749754960632443*^9, 
   3.749754960959813*^9}, {3.749755006976028*^9, 3.749755018524159*^9}, {
   3.74975508876819*^9, 3.74975510531415*^9}, {3.749755336687519*^9, 
   3.7497553374645357`*^9}, {3.749755458095154*^9, 3.749755458450584*^9}, {
   3.749755495855858*^9, 3.749755496715114*^9}, {3.7497556537734003`*^9, 
   3.749755720505209*^9}, {3.749755961194981*^9, 3.749755966890429*^9}, {
   3.749756068530993*^9, 3.749756117566379*^9}, {3.7497562464836407`*^9, 
   3.749756246872057*^9}, 3.7497563921763687`*^9, {3.749756436508492*^9, 
   3.749756486265397*^9}, {3.749756542259749*^9, 3.749756542577465*^9}, {
   3.749756725793293*^9, 3.749756729936118*^9}, {3.749756952544895*^9, 
   3.7497570283090467`*^9}, {3.749757120047575*^9, 3.749757120151751*^9}, {
   3.749757228800415*^9, 3.7497572549095*^9}, {3.749757355688545*^9, 
   3.749757356366269*^9}, {3.7497573926811447`*^9, 3.749757417716941*^9}, {
   3.7497575173678713`*^9, 3.749757524630719*^9}, 3.749757556385682*^9, {
   3.7497578117141933`*^9, 3.74975781189992*^9}, {3.749757892809986*^9, 
   3.749757900161586*^9}, {3.7497579976877823`*^9, 3.749758026073656*^9}, {
   3.7497581092825403`*^9, 3.749758110247122*^9}, {3.749758184015523*^9, 
   3.7497581957926617`*^9}, {3.749758420443143*^9, 3.749758425673297*^9}, {
   3.749758517217265*^9, 3.7497585385670443`*^9}, {3.7497586661170473`*^9, 
   3.7497586662770767`*^9}, {3.749758718980178*^9, 3.749758774303853*^9}, {
   3.7497588337220163`*^9, 3.749758869413723*^9}, {3.7497590168192883`*^9, 
   3.749759030984611*^9}, {3.74975907547795*^9, 3.7497591103038473`*^9}, {
   3.749759152713088*^9, 3.749759179460466*^9}, {3.749759287452856*^9, 
   3.749759305523571*^9}, {3.749759401143754*^9, 3.749759433773615*^9}, {
   3.7497594941351967`*^9, 3.7497595820043497`*^9}, {3.749759621531036*^9, 
   3.749759632454981*^9}, {3.7497597013328867`*^9, 3.74975970202754*^9}, {
   3.749840216308161*^9, 3.74984029046154*^9}, {3.749853359120463*^9, 
   3.7498533828749113`*^9}, {3.751842003297143*^9, 3.75184201220474*^9}, {
   3.751842052272525*^9, 3.75184205502168*^9}, {3.751842200234396*^9, 
   3.751842207852544*^9}, {3.7520235143360443`*^9, 3.7520235324183702`*^9}, {
   3.7520239013044567`*^9, 3.752023910435636*^9}, 3.752063408654961*^9, {
   3.752063477195746*^9, 3.7520634773337812`*^9}, {3.752064207992816*^9, 
   3.752064214223528*^9}, {3.7520643732330227`*^9, 3.752064373680773*^9}, {
   3.7520644991384478`*^9, 3.752064507313011*^9}, 3.752065981516295*^9, {
   3.7520661576708403`*^9, 3.752066163415257*^9}, {3.752075660586691*^9, 
   3.752075660775589*^9}, {3.752171989402215*^9, 3.752172013770129*^9}, {
   3.7521725823639793`*^9, 3.7521725840056667`*^9}, 3.754143113808805*^9, {
   3.7557084719814997`*^9, 3.755708536623094*^9}, {3.7563832784101877`*^9, 
   3.756383291019985*^9}},
 CellLabel->"In[30]:=",ExpressionUUID->"270cde5e-42f0-42be-a3ba-9affa07662ca"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"cumulI", "[", 
     RowBox[{"x_", ",", "dos_", ",", "hFrac_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"n", ",", "norm", ",", "p", ",", "q", ",", "rat", ",", "rtn"}],
        "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"n", "=", 
        RowBox[{
         RowBox[{"Length", "[", "dos", "]"}], "-", "1"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rat", "=", 
        RowBox[{"Rationalize", "[", "hFrac", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"p", "=", 
        RowBox[{"Numerator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"q", "=", 
        RowBox[{"Denominator", "[", "rat", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"norm", " ", "=", " ", 
          RowBox[{
           RowBox[{"x", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"p", "+", 
                RowBox[{"q", " ", "n"}]}], ")"}], "/", "2"}], ")"}]}], "/", 
           RowBox[{"2", "^", "n"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"norm", " ", "=", " ", 
        RowBox[{"1", "/", 
         RowBox[{"2", "^", "n"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"x", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{"rtn", " ", "=", "norm"}], ","}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"rtn", " ", "=", 
        RowBox[{"-", 
         RowBox[{"Log", "[", 
          RowBox[{"norm", " ", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"dos", "[", 
                RowBox[{"[", 
                 RowBox[{"s", "+", "1"}], "]"}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"f", "+", "1"}], "]"}], "]"}], 
              RowBox[{"x", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"p", 
                  RowBox[{"(", 
                   RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
                 RowBox[{"q", " ", "s"}]}], ")"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"s", ",", "0", ",", "n"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"]", ";"}], "*)"}], "\[IndentingNewLine]", "rtn"}]}], " ", 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"densI", "[", 
    RowBox[{"x_", ",", "dos_", ",", "hFrac_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "norm", ",", "p", ",", "q", ",", "rat", ",", "rtn"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", "=", 
       RowBox[{
        RowBox[{"Length", "[", "dos", "]"}], "-", "1"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rat", "=", 
       RowBox[{"Rationalize", "[", "hFrac", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"p", "=", 
       RowBox[{"Numerator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"q", "=", 
       RowBox[{"Denominator", "[", "rat", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"norm", " ", "=", " ", 
         RowBox[{
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"p", "+", 
               RowBox[{"q", " ", "n"}]}], ")"}], "/", "2"}], ")"}]}], "/", 
          RowBox[{"2", "^", "n"}]}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"norm", " ", "=", " ", 
       RowBox[{"Exp", "[", 
        RowBox[{"-", 
         RowBox[{"cumulI", "[", 
          RowBox[{"x", ",", "dos", ",", "hFrac"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"x", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{"rtn", " ", "=", "1.0"}], ","}]}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"rtn", " ", "=", 
       RowBox[{"norm", " ", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"p", 
               RowBox[{"(", 
                RowBox[{"f", "-", "s"}], ")"}]}], "+", 
              RowBox[{"q", " ", "s"}]}], "\[NotEqual]", "0"}], ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"p", 
                RowBox[{"(", 
                 RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
               RowBox[{"q", " ", "s"}]}], ")"}], 
             RowBox[{
              RowBox[{"dos", "[", 
               RowBox[{"[", 
                RowBox[{"s", "+", "1"}], "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"f", "+", "1"}], "]"}], "]"}], 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"p", 
                 RowBox[{"(", 
                  RowBox[{"f", "-", " ", "s"}], ")"}]}], "+", 
                RowBox[{"q", " ", "s"}], "-", "1"}], ")"}]}]}], ",", "0"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "0", ",", "n"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"f", ",", "0", ",", "n"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"]", ";"}], "*)"}], "\[IndentingNewLine]", "rtn"}]}], " ", 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ising1D", "[", 
    RowBox[{"dos_", ",", "hFrac_", ",", "isMonotonic_"}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"If", "[", 
      RowBox[{"isMonotonic", ",", 
       RowBox[{"cumulI", "[", 
        RowBox[{
         RowBox[{"1", "-", "x"}], ",", "dos", ",", "hFrac"}], "]"}], ",", 
       RowBox[{"densI", "[", 
        RowBox[{
         RowBox[{"1", "-", "x"}], ",", "dos", ",", "hFrac"}], "]"}]}], 
      "]"}]}], "]"}]}], ";"}], "\n"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, {3.736075932504421*^9, 3.736075946015728*^9}, 
   3.736075981593196*^9, 3.73616128656625*^9, 3.7369322601711397`*^9, 
   3.7369322935233994`*^9, {3.7373574097023563`*^9, 3.7373575140437202`*^9}, {
   3.737385574026482*^9, 3.737385612202183*^9}, {3.737386812679132*^9, 
   3.737386813970861*^9}, {3.737389378303644*^9, 3.737389388928886*^9}, 
   3.738338255977098*^9, 3.738338299648872*^9, {3.738950226819643*^9, 
   3.738950231976351*^9}, {3.740036168000227*^9, 3.740036219319195*^9}, {
   3.7400362617765017`*^9, 3.740036278383411*^9}, {3.740036338489291*^9, 
   3.740036381238064*^9}, {3.740037971953627*^9, 3.7400379802805443`*^9}, {
   3.740045607894362*^9, 3.7400456151155357`*^9}, {3.740045659319628*^9, 
   3.740045744466529*^9}, {3.740046472920994*^9, 3.740046508874208*^9}, {
   3.740046556309042*^9, 3.7400467527800903`*^9}, {3.740046861693116*^9, 
   3.74004686820085*^9}, {3.740046956300091*^9, 3.740046956665234*^9}, {
   3.740047261765596*^9, 3.7400473172777576`*^9}, {3.740060808326494*^9, 
   3.740060811876367*^9}, {3.740061282289858*^9, 3.7400612959897623`*^9}, {
   3.740178357604425*^9, 3.7401783810583143`*^9}, {3.7401784485316668`*^9, 
   3.740178449593624*^9}, {3.74018001478762*^9, 3.740180019649459*^9}, 
   3.7402480453097878`*^9, {3.740248104306658*^9, 3.740248135671788*^9}, {
   3.7402494071147118`*^9, 3.740249441904221*^9}, {3.740249476737877*^9, 
   3.7402495707774076`*^9}, {3.740249670081923*^9, 3.740249670532776*^9}, {
   3.740249707622436*^9, 3.740249707838723*^9}, {3.740305770793913*^9, 
   3.740305775102912*^9}, 3.740306862692932*^9, {3.740306908260989*^9, 
   3.740306971585284*^9}, {3.740307139507625*^9, 3.740307175790572*^9}, {
   3.740307262340871*^9, 3.740307352578806*^9}, {3.7403073880038567`*^9, 
   3.740307402970755*^9}, {3.740307605213231*^9, 3.740307620053833*^9}, {
   3.74030840426982*^9, 3.740308411013072*^9}, {3.7403084563746157`*^9, 
   3.74030845666702*^9}, {3.740320941318943*^9, 3.740320965908925*^9}, {
   3.740321004759136*^9, 3.740321005639454*^9}, {3.74032110023108*^9, 
   3.740321102267017*^9}, {3.740321238460163*^9, 3.740321381181258*^9}, {
   3.7403214444346533`*^9, 3.7403215857680597`*^9}, {3.74032161631679*^9, 
   3.740321616736602*^9}, {3.7497543416492968`*^9, 3.749754356316204*^9}, {
   3.7497544020640087`*^9, 3.7497544264831448`*^9}, {3.7497544808308353`*^9, 
   3.7497545150728283`*^9}, {3.749754551296647*^9, 3.749754555163857*^9}, {
   3.749754590657971*^9, 3.74975463823813*^9}, {3.74975467872375*^9, 
   3.749754696592944*^9}, {3.749754741529245*^9, 3.7497548060394583`*^9}, {
   3.7497548367522497`*^9, 3.749754904770163*^9}, {3.749754960632443*^9, 
   3.749754960959813*^9}, {3.749755006976028*^9, 3.749755018524159*^9}, {
   3.74975508876819*^9, 3.74975510531415*^9}, {3.749755336687519*^9, 
   3.7497553374645357`*^9}, {3.749755458095154*^9, 3.749755458450584*^9}, {
   3.749755495855858*^9, 3.749755496715114*^9}, {3.7497556537734003`*^9, 
   3.749755720505209*^9}, {3.749755961194981*^9, 3.749755966890429*^9}, {
   3.749756068530993*^9, 3.749756117566379*^9}, {3.7497562464836407`*^9, 
   3.749756246872057*^9}, 3.7497563921763687`*^9, {3.749756436508492*^9, 
   3.749756486265397*^9}, {3.749756542259749*^9, 3.749756542577465*^9}, {
   3.749756725793293*^9, 3.749756729936118*^9}, {3.749756952544895*^9, 
   3.749757011879548*^9}, {3.752061820112084*^9, 3.7520618637648897`*^9}, {
   3.752061906561948*^9, 3.7520619100952*^9}, {3.752061980228513*^9, 
   3.752061980714641*^9}, {3.752062085051798*^9, 3.752062091112266*^9}, {
   3.752062149258667*^9, 3.752062196226427*^9}, {3.7520622939727163`*^9, 
   3.7520623959791803`*^9}, {3.752062529416876*^9, 3.752062529830785*^9}, {
   3.752062987045789*^9, 3.752062987261327*^9}, {3.752063112315823*^9, 
   3.75206311743244*^9}, 3.752063429477763*^9, {3.752063558238772*^9, 
   3.752063593403368*^9}, {3.752063632019219*^9, 3.752063633370273*^9}, {
   3.75206452082215*^9, 3.752064521298764*^9}, {3.75206464762593*^9, 
   3.752064687531008*^9}, {3.752065119524378*^9, 3.752065121757626*^9}, {
   3.7520654575767307`*^9, 3.7520654915834723`*^9}, 3.752065607541902*^9, {
   3.752065689129075*^9, 3.752065690562786*^9}, {3.7520657846329613`*^9, 
   3.752065811404766*^9}, 3.7520659225657*^9, 3.7520659614232283`*^9, {
   3.7520661755288982`*^9, 3.752066183510303*^9}, {3.7520672289256983`*^9, 
   3.7520672469468946`*^9}, {3.7520677923458548`*^9, 3.752067793606346*^9}, {
   3.7521519114412203`*^9, 3.7521519119493647`*^9}, {3.7521579504689903`*^9, 
   3.7521580218600893`*^9}, {3.752158098596374*^9, 3.752158132697138*^9}, 
   3.752158181744391*^9, {3.7521582525949783`*^9, 3.752158269239259*^9}, {
   3.7521583241401663`*^9, 3.7521583690163107`*^9}, 3.75215844383097*^9, {
   3.752158516598613*^9, 3.752158535476699*^9}, {3.7521588678551598`*^9, 
   3.7521588843148327`*^9}, {3.7521716250087633`*^9, 3.752171626433301*^9}, {
   3.752172297104886*^9, 3.75217229791397*^9}, {3.752172401858302*^9, 
   3.752172408601709*^9}, {3.752180029122714*^9, 3.752180032803252*^9}, 
   3.754143113809085*^9, {3.755708539104336*^9, 3.7557085395685673`*^9}, {
   3.755708654725253*^9, 3.755708724259432*^9}, {3.755708776472433*^9, 
   3.755708817412314*^9}, {3.7557089256269503`*^9, 3.7557089910881233`*^9}, {
   3.7557090590305557`*^9, 3.755709062971937*^9}, {3.755711201112894*^9, 
   3.7557112531609173`*^9}, {3.755711381315722*^9, 3.755711409146913*^9}, {
   3.755711646308214*^9, 3.755711649421398*^9}, 3.755712201012615*^9, {
   3.755712364008243*^9, 3.75571239430536*^9}, 3.755712510776856*^9, {
   3.755712563937002*^9, 3.755712564381164*^9}, 3.756383292301705*^9},
 CellLabel->"In[33]:=",ExpressionUUID->"6d6e2063-6715-4e8c-aa32-89fa7b4ba93b"],

Cell[TextData[StyleBox["S - T reliability for a toy network", "Subsection",
 FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{
  3.731963808142768*^9, {3.731967829227839*^9, 3.731967842401969*^9}, {
   3.732016959424759*^9, 3.7320169987554407`*^9}, 3.732124367049408*^9, {
   3.732124934907031*^9, 3.732124948642931*^9}, {3.732125735038334*^9, 
   3.73212576114777*^9}, {3.732125803813095*^9, 3.73212581226611*^9}, {
   3.732125901032969*^9, 3.732125907676149*^9}, {3.732126139111867*^9, 
   3.732126148436043*^9}, {3.7321262006860123`*^9, 3.732126222362482*^9}, {
   3.732126338072503*^9, 3.732126340918779*^9}, {3.732126528982162*^9, 
   3.732126661251419*^9}, {3.73212677070327*^9, 3.732126830600086*^9}, {
   3.732126897050943*^9, 3.73212690744631*^9}, {3.732127084998866*^9, 
   3.7321271166588173`*^9}, 3.732127239910939*^9, 3.732127343466651*^9, 
   3.732127388838253*^9, {3.732178936367415*^9, 3.732179029472261*^9}, 
   3.7321790674856462`*^9, {3.732179110174139*^9, 3.732179136447486*^9}, {
   3.7321791767148952`*^9, 3.7321792253546953`*^9}, {3.73217928440924*^9, 
   3.732179289008485*^9}, {3.732179321533965*^9, 3.73217937573946*^9}, {
   3.73217960301363*^9, 3.732179620835825*^9}, {3.7321796624195137`*^9, 
   3.732179680534636*^9}, {3.732179727649418*^9, 3.73217978711732*^9}, {
   3.732179896708227*^9, 3.7321798968337812`*^9}, {3.732180295891027*^9, 
   3.732180332283242*^9}, 3.732180516065014*^9, {3.7321805587598*^9, 
   3.7321806426832867`*^9}, {3.732180691494671*^9, 3.732180702015469*^9}, {
   3.7321807394887037`*^9, 3.732180774550562*^9}, {3.7321809707013206`*^9, 
   3.732180987779015*^9}, {3.732181029360201*^9, 3.732181044703643*^9}, {
   3.732181083579547*^9, 3.732181087105238*^9}, {3.732181133796917*^9, 
   3.732181159837064*^9}, {3.732185010577433*^9, 3.732185033728937*^9}, {
   3.73218509237614*^9, 3.732185093909857*^9}, {3.732185125296256*^9, 
   3.7321851332619*^9}, {3.732185248348662*^9, 3.7321853346108027`*^9}, {
   3.73218539098168*^9, 3.732185447712788*^9}, {3.732185519083625*^9, 
   3.732185566350399*^9}, {3.732185629730214*^9, 3.7321856332480307`*^9}, {
   3.732185717980282*^9, 3.732185763814589*^9}, {3.732186190796315*^9, 
   3.7321862294898243`*^9}, {3.732186299199532*^9, 3.732186306878562*^9}, {
   3.732186358064766*^9, 3.7321864158277273`*^9}, {3.732186454486991*^9, 
   3.732186519497347*^9}, {3.732186652017202*^9, 3.732186665641788*^9}, {
   3.732186698347786*^9, 3.7321867100167828`*^9}, {3.732186751348432*^9, 
   3.732186790198104*^9}, {3.732187030483452*^9, 3.732187099155139*^9}, {
   3.7321873183410053`*^9, 3.732187344331003*^9}, {3.732187460651863*^9, 
   3.732187462353815*^9}, {3.732294465784401*^9, 3.7322944781469*^9}, {
   3.732402536918147*^9, 3.732402538073064*^9}, {3.733068284026906*^9, 
   3.73306846707837*^9}, {3.733068500385048*^9, 3.733068536317445*^9}, {
   3.735119277711596*^9, 3.735119297169156*^9}, {3.735119636107332*^9, 
   3.735119673208976*^9}, {3.735155507321095*^9, 3.735155519198165*^9}, {
   3.7353345704309597`*^9, 3.735334575243888*^9}, {3.735334797813335*^9, 
   3.735334803530443*^9}, 3.7353781712217283`*^9, {3.735379530407448*^9, 
   3.735379627804748*^9}, {3.7353825941361647`*^9, 3.735382703401187*^9}, {
   3.735382851640493*^9, 3.735382851882188*^9}, {3.735471236393633*^9, 
   3.735471292517955*^9}, {3.7354713236265697`*^9, 3.735471522582922*^9}, {
   3.735471556021201*^9, 3.735471638080361*^9}, {3.735471668602276*^9, 
   3.735471670088581*^9}, {3.735471734821258*^9, 3.735471739291379*^9}, {
   3.735471891912026*^9, 3.7354718967489843`*^9}, {3.735472970456191*^9, 
   3.7354729883053503`*^9}, 3.7354731029716167`*^9, {3.735473274954365*^9, 
   3.735473284438244*^9}, 3.735473332563154*^9, {3.73547351961605*^9, 
   3.7354735990608*^9}, {3.735473641649866*^9, 3.7354736649268303`*^9}, {
   3.735473710107876*^9, 3.73547371218781*^9}, {3.735473843210165*^9, 
   3.7354738538257093`*^9}, 3.735473892747911*^9, 3.735473963690484*^9, {
   3.7354739957599077`*^9, 3.735473999875576*^9}, {3.7358978201238194`*^9, 
   3.73589786068086*^9}, {3.735897909613755*^9, 3.735897929813949*^9}, 
   3.735898062565146*^9, {3.735898476534614*^9, 3.735898490232808*^9}, {
   3.7358989111705637`*^9, 3.7358989702633467`*^9}, {3.7358990526221123`*^9, 
   3.735899114729459*^9}, {3.73590891830939*^9, 3.735908954032366*^9}, {
   3.7359091081191597`*^9, 3.735909108778269*^9}, {3.735909151973247*^9, 
   3.735909155201296*^9}, {3.73590986063904*^9, 3.7359098839558983`*^9}, {
   3.735909982827084*^9, 3.735909983994576*^9}, {3.735991242651721*^9, 
   3.735991295732616*^9}, {3.73599200316444*^9, 3.7359920700590487`*^9}, {
   3.7359940425890083`*^9, 3.735994089784034*^9}, {3.735994413805687*^9, 
   3.735994418488796*^9}, {3.735994471560493*^9, 3.735994538832307*^9}, {
   3.735994600556788*^9, 3.7359946072168837`*^9}, {3.735994773488179*^9, 
   3.735994777017806*^9}, {3.7359948073401613`*^9, 3.73599481280385*^9}, 
   3.735994858637479*^9, 3.735994903430193*^9, {3.735995152168797*^9, 
   3.735995160454262*^9}, {3.735995197493257*^9, 3.735995361731221*^9}, {
   3.7359953997737427`*^9, 3.7359955460872097`*^9}, {3.735995579872047*^9, 
   3.7359955978878603`*^9}, {3.7359960839906282`*^9, 3.735996088625847*^9}, {
   3.735996249753039*^9, 3.735996255334338*^9}, {3.7360050690309134`*^9, 
   3.736005083729233*^9}, 3.736013838528305*^9, {3.7360293652013617`*^9, 
   3.7360293704712543`*^9}, {3.736060629088848*^9, 3.7360606710137253`*^9}, {
   3.7360607827086554`*^9, 3.736060813475603*^9}, {3.73606104743651*^9, 
   3.736061050555451*^9}, {3.736061204126586*^9, 3.736061312993247*^9}, {
   3.736061417190789*^9, 3.73606142141236*^9}, {3.736062785992443*^9, 
   3.736062792102498*^9}, 3.736075603054926*^9, {3.736075869712233*^9, 
   3.73607589989078*^9}, 3.736075932504421*^9, {3.73610231765766*^9, 
   3.736102356888423*^9}, {3.736161278140469*^9, 3.736161286566317*^9}, 
   3.7383382559771843`*^9, 3.7383382996489573`*^9, 
   3.754143113809247*^9},ExpressionUUID->"e677af55-14b1-4e6e-94ba-\
dba297de1e94"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{
   "densT", ",", "cumulT", ",", "toyCumul", ",", "toyDensity", ",", 
    "toyNorm"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numStruts", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"m", "+", "1"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numCuts", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", 
     RowBox[{"b", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], "^", "m"}]}], ")"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyNorm", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", 
   RowBox[{
    RowBox[{"1", "/", "2"}], "+", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b", "+", "1"}], ")"}], 
       RowBox[{"(", 
        RowBox[{"b", "+", "2"}], ")"}]}], ")"}]}], "-", 
    RowBox[{"b", " ", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Binomial", "[", 
         RowBox[{"m", ",", "k"}], "]"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"k", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"2", "+", "b", "+", 
             RowBox[{"k", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}]}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "m"}], "}"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cumulT", "[", 
    RowBox[{"x_", ",", "m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"x", "^", "b"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], "x", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], 
      ")"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"densT", "[", 
    RowBox[{"x_", ",", "m_", ",", "a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], ")"}]}], 
    " ", "+", 
    RowBox[{"b", " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"b", "-", "1"}], ")"}]}], 
     RowBox[{"(", 
      RowBox[{"1", "-", " ", 
       RowBox[{"x", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", 
             RowBox[{"x", "^", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", "m"}]}], 
         ")"}]}]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"x", "^", "b"}]}], ")"}], " ", "x", " ", 
     RowBox[{"(", 
      RowBox[{"1", "m", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"x", "^", 
           RowBox[{"(", 
            RowBox[{"a", "-", "1"}], ")"}]}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"m", "-", "1"}], ")"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"a", "-", "1"}], ")"}], 
         RowBox[{"x", "^", 
          RowBox[{"(", 
           RowBox[{"a", "-", "2"}], ")"}]}]}], ")"}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyCumul", "[", 
    RowBox[{
     RowBox[{"m_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"a_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"b_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"cumulT", "[", 
      RowBox[{"x", ",", "m", ",", "a", ",", "b"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"toyDensity", "[", 
    RowBox[{
     RowBox[{"m_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"a_Integer", "?", "NonNegative"}], ",", 
     RowBox[{"b_Integer", "?", "NonNegative"}]}], "]"}], ":=", 
   RowBox[{"Function", "[", 
    RowBox[{"x", ",", 
     RowBox[{"densT", "[", 
      RowBox[{"x", ",", "m", ",", "a", ",", "b"}], "]"}]}], "]"}]}], 
  ";"}], "\n"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.736076001808326*^9, 3.736076167960123*^9}, {
   3.736076205929563*^9, 3.736076248072939*^9}, {3.736076284623266*^9, 
   3.7360763484590273`*^9}, {3.7360764450659513`*^9, 3.736076562994182*^9}, {
   3.736076601234433*^9, 3.7360766413953238`*^9}, {3.7360766855636053`*^9, 
   3.7360768455065804`*^9}, {3.7360772093569393`*^9, 3.736077231005711*^9}, {
   3.736077313149336*^9, 3.736077322032032*^9}, {3.736077450603072*^9, 
   3.736077451727007*^9}, {3.736081806035843*^9, 3.736081860914267*^9}, {
   3.736082107819503*^9, 3.736082123436122*^9}, {3.7360821631405973`*^9, 
   3.7360821809286337`*^9}, {3.7360823589944153`*^9, 3.736082359978203*^9}, {
   3.7360825721297073`*^9, 3.7360825818628807`*^9}, {3.736082659857297*^9, 
   3.7360826656895742`*^9}, {3.7360827179735317`*^9, 3.736082721983499*^9}, 
   3.736102356888619*^9, {3.736161278141015*^9, 3.736161286566595*^9}, {
   3.736161430371258*^9, 3.736161453717517*^9}, {3.736161490894451*^9, 
   3.736161491460311*^9}, {3.736161535906417*^9, 3.736161544064344*^9}, {
   3.736162760701065*^9, 3.736162785037026*^9}, {3.7361676342874002`*^9, 
   3.736167640484209*^9}, {3.736932269625902*^9, 3.736932298369713*^9}, {
   3.737312663830988*^9, 3.7373127342456503`*^9}, {3.737312869959814*^9, 
   3.737312891149584*^9}, {3.737312924750495*^9, 3.7373129302777042`*^9}, {
   3.73731299834015*^9, 3.737313032548991*^9}, {3.7373229268277397`*^9, 
   3.737323018857375*^9}, {3.737370008316661*^9, 3.737370015703443*^9}, {
   3.73737572575825*^9, 3.7373757908089323`*^9}, {3.737375831863811*^9, 
   3.737376204642528*^9}, {3.737376333390551*^9, 3.7373763338094893`*^9}, {
   3.737376368489933*^9, 3.737376388869651*^9}, {3.737376500972351*^9, 
   3.7373766421796217`*^9}, {3.737376689220996*^9, 3.737376713984009*^9}, {
   3.737376757003845*^9, 3.737376787857627*^9}, 3.737376878194013*^9, {
   3.737376917755658*^9, 3.7373769233765907`*^9}, {3.737376978747848*^9, 
   3.737376979051117*^9}, {3.737377034671735*^9, 3.737377058090547*^9}, 
   3.737377251330285*^9, {3.737377310381014*^9, 3.737377525776593*^9}, {
   3.7373776613580313`*^9, 3.73737767017415*^9}, {3.737377734536677*^9, 
   3.737377745243202*^9}, 3.737377844555265*^9, {3.7373791496849957`*^9, 
   3.737379156041759*^9}, {3.737379189984817*^9, 3.737379199720562*^9}, {
   3.7373842215840054`*^9, 3.737384224985898*^9}, {3.737493880381371*^9, 
   3.737494021320215*^9}, {3.737539842895915*^9, 3.737539862614959*^9}, {
   3.7375400189439783`*^9, 3.7375400692452087`*^9}, {3.737540149080035*^9, 
   3.7375401658905487`*^9}, {3.737540196178122*^9, 3.7375402762744713`*^9}, {
   3.7375403123975687`*^9, 3.737540350488851*^9}, 3.737577781621702*^9, 
   3.738060720492256*^9, 3.7383382559774523`*^9, 3.738338299649229*^9, {
   3.7390503005806503`*^9, 3.739050308506813*^9}, {3.75173316000113*^9, 
   3.751733382049892*^9}, {3.7517347089117804`*^9, 3.75173474394454*^9}, {
   3.752275070675064*^9, 3.752275121284769*^9}, {3.752275342733267*^9, 
   3.75227535507451*^9}, {3.75227668836712*^9, 3.75227670707871*^9}, 
   3.75414311380956*^9, {3.756144570234387*^9, 3.756144775273213*^9}, {
   3.756145504976727*^9, 3.756145507776881*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"07ea8395-fd8c-4819-9e00-4f77786192a5"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Draw", " ", "a", " ", 
   StyleBox[
    RowBox[{"sim", 
     StyleBox["p", "Subsection",
      FontWeight->"Plain"], "le"}]], " ", "toy", " ", "network"}], 
  "Subsection",
  FontWeight->"Plain"]], "Input",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.7318806328969107`*^9, 3.7318807272254133`*^9}, {
   3.731880767790504*^9, 3.731880956179974*^9}, {3.731880995072299*^9, 
   3.731880995240395*^9}, {3.731881064818372*^9, 3.731881205780549*^9}, {
   3.731881573049594*^9, 3.731881592914332*^9}, {3.731881628162381*^9, 
   3.731881628474963*^9}, {3.731882637151958*^9, 3.731882643318391*^9}, {
   3.731882676038987*^9, 3.731882684571333*^9}, {3.731882735963982*^9, 
   3.731882738569145*^9}, {3.731882872531081*^9, 3.731882880937747*^9}, {
   3.731882952071525*^9, 3.731882953957863*^9}, {3.7318832867956038`*^9, 
   3.7318833056574697`*^9}, {3.731883382602648*^9, 3.731883383217956*^9}, {
   3.7319518346861467`*^9, 3.731951937765183*^9}, {3.7319519831338587`*^9, 
   3.731952032236443*^9}, {3.731952080128631*^9, 3.731952104698859*^9}, 
   3.73195217787407*^9, {3.7319522463877983`*^9, 3.731952285233266*^9}, {
   3.731952858125266*^9, 3.731953056440221*^9}, {3.7319531755624228`*^9, 
   3.731953221361116*^9}, {3.731962338650422*^9, 3.7319623676115313`*^9}, {
   3.7319624302867928`*^9, 3.731962579385372*^9}, {3.731962617552309*^9, 
   3.731962745086937*^9}, {3.731962825260992*^9, 3.731962826780466*^9}, {
   3.731962951866626*^9, 3.7319629627678547`*^9}, {3.731963151262588*^9, 
   3.731963157742003*^9}, {3.731963191713439*^9, 3.731963201175355*^9}, {
   3.731963378133741*^9, 3.731963414178279*^9}, {3.731963456352751*^9, 
   3.7319634588150873`*^9}, {3.73196349557165*^9, 3.731963498171373*^9}, {
   3.731963607932173*^9, 3.7319636245236397`*^9}, 3.731963756517591*^9, {
   3.73196381917629*^9, 3.731963885141327*^9}, {3.731963922832724*^9, 
   3.7319639348562517`*^9}, {3.7319640037578487`*^9, 
   3.7319640042673893`*^9}, {3.731964066851684*^9, 3.73196407392922*^9}, {
   3.731964180178504*^9, 3.731964244128545*^9}, {3.731964348479067*^9, 
   3.7319643881965933`*^9}, {3.73196442306057*^9, 3.7319644875540533`*^9}, {
   3.731964531701462*^9, 3.731964552766262*^9}, 3.731964831780744*^9, {
   3.731964905166669*^9, 3.73196490795695*^9}, 3.7319649529066887`*^9, {
   3.7319650051003027`*^9, 3.731965022377656*^9}, {3.731965114656776*^9, 
   3.731965117319151*^9}, {3.731966528452489*^9, 3.7319665344508877`*^9}, {
   3.731966583837459*^9, 3.731966634843083*^9}, {3.731966692136701*^9, 
   3.731966748666151*^9}, {3.7319667833995657`*^9, 3.731966808912509*^9}, {
   3.731966866480592*^9, 3.731966933143693*^9}, {3.731966997910872*^9, 
   3.7319670049746428`*^9}, {3.731967113521659*^9, 3.7319671644561033`*^9}, {
   3.7319672112024517`*^9, 3.731967237382059*^9}, {3.7319672703926973`*^9, 
   3.731967315612167*^9}, {3.731967346521644*^9, 3.7319674050062323`*^9}, {
   3.731967437847918*^9, 3.731967714743937*^9}, {3.731967928811968*^9, 
   3.731967941370634*^9}, 3.731967972219634*^9, {3.7319680060197773`*^9, 
   3.731968013217461*^9}, {3.731968081831965*^9, 3.731968109926355*^9}, {
   3.732015050985611*^9, 3.732015090652083*^9}, {3.732015141281753*^9, 
   3.73201516387407*^9}, {3.73201527987934*^9, 3.732015292593286*^9}, {
   3.732015336777575*^9, 3.7320153371672163`*^9}, {3.73201537971169*^9, 
   3.732015385037603*^9}, {3.732016540777287*^9, 3.7320166808192177`*^9}, {
   3.732016744680934*^9, 3.732016745010745*^9}, {3.732016809834805*^9, 
   3.732016880841538*^9}, 3.732016919118569*^9, {3.7320170445064774`*^9, 
   3.732017068584816*^9}, 3.732017114658999*^9, {3.732017152693425*^9, 
   3.732017238863933*^9}, {3.732017305520022*^9, 3.732017313531651*^9}, {
   3.732017347106992*^9, 3.73201734846172*^9}, {3.732017437946837*^9, 
   3.7320175310908813`*^9}, {3.732017570909155*^9, 3.732017578570999*^9}, {
   3.732017629404128*^9, 3.7320176491758223`*^9}, {3.732017698594245*^9, 
   3.732017712112096*^9}, {3.7320177515006113`*^9, 3.732017753438781*^9}, {
   3.732017783934601*^9, 3.73201779834718*^9}, {3.7320178547386017`*^9, 
   3.7320178575964746`*^9}, {3.7320180048369837`*^9, 3.73201802489398*^9}, {
   3.73201812870833*^9, 3.732018134039022*^9}, {3.7320181681236963`*^9, 
   3.7320182391105013`*^9}, {3.732018318188488*^9, 3.732018324011141*^9}, {
   3.7320184261469793`*^9, 3.7320184344672527`*^9}, {3.73201847416187*^9, 
   3.732018476045013*^9}, {3.732018562793003*^9, 3.732018567528575*^9}, {
   3.732018608763535*^9, 3.73201863659193*^9}, {3.732018668987688*^9, 
   3.7320186699688063`*^9}, {3.732018703102358*^9, 3.732018812133499*^9}, {
   3.7320188793516207`*^9, 3.732018897033128*^9}, {3.732018953793017*^9, 
   3.732019006468753*^9}, {3.732019048189001*^9, 3.7320190576884193`*^9}, {
   3.7320191086953583`*^9, 3.732019121173099*^9}, {3.732019222688501*^9, 
   3.732019240074844*^9}, {3.7320193069097033`*^9, 3.732019355767461*^9}, {
   3.7320197672171*^9, 3.732019839562286*^9}, {3.732019874957264*^9, 
   3.732019909727232*^9}, {3.7320199790084887`*^9, 3.73202000119803*^9}, 
   3.732020036681872*^9, {3.73203449214537*^9, 3.732034591037158*^9}, {
   3.7320346257328663`*^9, 3.7320346342278547`*^9}, {3.7320346876768007`*^9, 
   3.732034744619301*^9}, {3.732034786622962*^9, 3.7320347919873343`*^9}, {
   3.732034843333008*^9, 3.732034847614414*^9}, {3.732035444030692*^9, 
   3.7320356357923317`*^9}, {3.73203573941322*^9, 3.732035742335343*^9}, {
   3.732035789887232*^9, 3.732035859636406*^9}, {3.732035924618279*^9, 
   3.732035928316916*^9}, {3.732035969222745*^9, 3.7320359932146063`*^9}, {
   3.732036088295072*^9, 3.732036091734847*^9}, {3.732036138356141*^9, 
   3.7320361387899237`*^9}, {3.732036200148234*^9, 3.7320362005236197`*^9}, {
   3.732036250410893*^9, 3.7320362779079247`*^9}, {3.7320363096730833`*^9, 
   3.732036347671194*^9}, {3.732036446230427*^9, 3.732036451075796*^9}, {
   3.732036524418353*^9, 3.732036537265004*^9}, {3.732036587178994*^9, 
   3.732036703588461*^9}, {3.7320367336451893`*^9, 3.732036739384376*^9}, {
   3.7320367725741243`*^9, 3.7320368781178102`*^9}, {3.7320369109171877`*^9, 
   3.7320369631893463`*^9}, {3.732036994280363*^9, 3.732037006088423*^9}, {
   3.732037053707872*^9, 3.732037095545133*^9}, {3.7320372850390863`*^9, 
   3.732037308062518*^9}, {3.7320373593532887`*^9, 3.732037359668895*^9}, {
   3.7320374024097843`*^9, 3.73203740975145*^9}, {3.73203744340372*^9, 
   3.7320375020481358`*^9}, {3.73203764356316*^9, 3.7320376541772823`*^9}, {
   3.732037706952169*^9, 3.732037707202962*^9}, {3.73203779477706*^9, 
   3.732037795193715*^9}, {3.7320406955217237`*^9, 3.732040766461721*^9}, {
   3.73204086122619*^9, 3.732040892321754*^9}, {3.7320410612288647`*^9, 
   3.732041073773896*^9}, {3.73204115168152*^9, 3.732041166972312*^9}, {
   3.732041245211214*^9, 3.732041245867303*^9}, {3.7320412824449253`*^9, 
   3.732041415301139*^9}, {3.732042006702133*^9, 3.732042011808378*^9}, {
   3.732060186029913*^9, 3.732060203570712*^9}, {3.73209319110117*^9, 
   3.7320932428892097`*^9}, {3.732093991939704*^9, 3.732093993922947*^9}, {
   3.732094065514061*^9, 3.732094109065442*^9}, 3.7320941504780197`*^9, {
   3.732094669392294*^9, 3.7320946747037077`*^9}, {3.732094748874557*^9, 
   3.732094798057049*^9}, {3.7320950173298607`*^9, 3.732095044142215*^9}, {
   3.73209513829534*^9, 3.732095160348584*^9}, {3.7320952028368397`*^9, 
   3.732095281905785*^9}, {3.732095314113628*^9, 3.732095424522565*^9}, 
   3.73209547138684*^9, {3.7320955749987164`*^9, 3.732095614757381*^9}, {
   3.732095940209179*^9, 3.732095994065175*^9}, {3.732096110159668*^9, 
   3.732096209687265*^9}, {3.7320962415026693`*^9, 3.732096314037977*^9}, {
   3.73209636823195*^9, 3.7320963825244207`*^9}, {3.7320964158000803`*^9, 
   3.732096442989237*^9}, {3.7320964811170588`*^9, 3.7320964866040382`*^9}, {
   3.732096521939522*^9, 3.732096593289495*^9}, {3.732096896619953*^9, 
   3.732097047345828*^9}, {3.7320971529914837`*^9, 3.732097179280325*^9}, {
   3.732097266709311*^9, 3.732097267554947*^9}, {3.7320973128823767`*^9, 
   3.732097326195074*^9}, {3.732097378959565*^9, 3.7320974126850367`*^9}, {
   3.732097476962433*^9, 3.7320975579323463`*^9}, {3.7320976365056562`*^9, 
   3.732097638774764*^9}, {3.732097731972705*^9, 3.7320977558622713`*^9}, {
   3.732098113810482*^9, 3.732098264941729*^9}, {3.7320983050764503`*^9, 
   3.732098312489339*^9}, {3.7320983586709337`*^9, 3.732098383489937*^9}, {
   3.73209880618968*^9, 3.732098886618194*^9}, {3.732098925042959*^9, 
   3.732099010232319*^9}, {3.732099078098895*^9, 3.732099291115057*^9}, {
   3.7320995378122053`*^9, 3.732099540811161*^9}, 3.732099727008102*^9, {
   3.732099800530018*^9, 3.732099811303247*^9}, {3.732100777335082*^9, 
   3.732100783173876*^9}, {3.732100996776939*^9, 3.7321009998956747`*^9}, 
   3.732101376830003*^9, {3.732101522301873*^9, 3.732101568403507*^9}, {
   3.7321019840498343`*^9, 3.73210203001466*^9}, 3.732102073721912*^9, 
   3.732102215614256*^9, {3.732102341867532*^9, 3.732102344826129*^9}, {
   3.7321024329581842`*^9, 3.732102449376041*^9}, 3.732102487530984*^9, {
   3.732114163783525*^9, 3.732114228721541*^9}, {3.732114275170065*^9, 
   3.732114289680703*^9}, 3.732114339682633*^9, {3.732114431622731*^9, 
   3.732114498730641*^9}, {3.732114531316506*^9, 3.732114588660266*^9}, {
   3.732114633357102*^9, 3.732114688689788*^9}, {3.732115137671144*^9, 
   3.732115195982992*^9}, {3.732115361142811*^9, 3.73211540473217*^9}, {
   3.732116252184219*^9, 3.7321163321368923`*^9}, {3.732116614582768*^9, 
   3.7321169168602457`*^9}, {3.732117027483149*^9, 3.732117071453843*^9}, {
   3.732117172114958*^9, 3.732117255415*^9}, {3.732117302817409*^9, 
   3.732117338829441*^9}, {3.732117388942157*^9, 3.7321174350933933`*^9}, {
   3.732117474087274*^9, 3.732117526010499*^9}, {3.732117562903288*^9, 
   3.732117581247011*^9}, {3.732117705692486*^9, 3.732117837742976*^9}, {
   3.732118026401354*^9, 3.7321180663248463`*^9}, {3.732118099324553*^9, 
   3.732118104539165*^9}, {3.7321183241174726`*^9, 3.732118351932502*^9}, {
   3.7321184109983377`*^9, 3.7321184560195513`*^9}, {3.732118519176272*^9, 
   3.732118533946547*^9}, {3.732118572418301*^9, 3.732118586342189*^9}, {
   3.732118713560184*^9, 3.73211872459376*^9}, {3.732118757900477*^9, 
   3.732118758921569*^9}, 3.732118800292746*^9, {3.73211886590317*^9, 
   3.732118883186109*^9}, {3.7321189429614363`*^9, 3.732118970754583*^9}, {
   3.7321190502428637`*^9, 3.732119076641067*^9}, 3.7321191088094*^9, {
   3.732119145264935*^9, 3.732119167012175*^9}, {3.7321192132031727`*^9, 
   3.732119226844471*^9}, 3.7321192591302757`*^9, {3.732119295692582*^9, 
   3.732119296022867*^9}, {3.7321195622068443`*^9, 3.73211964988933*^9}, {
   3.732119703748108*^9, 3.732119712425599*^9}, {3.73211975350036*^9, 
   3.732119768528224*^9}, {3.732119830043655*^9, 3.732119875061966*^9}, {
   3.732119912276248*^9, 3.732119927934145*^9}, {3.732120145014042*^9, 
   3.732120164739337*^9}, {3.732120226386971*^9, 3.732120228528522*^9}, {
   3.732120267628337*^9, 3.732120267929908*^9}, {3.7321203019620047`*^9, 
   3.7321203337125874`*^9}, {3.732120437168233*^9, 3.732120443069499*^9}, {
   3.732120595042354*^9, 3.732120595287128*^9}, {3.732120664110276*^9, 
   3.7321207137594433`*^9}, {3.7321207655215387`*^9, 3.732120771359586*^9}, {
   3.732120884166655*^9, 3.732121031062858*^9}, {3.732121091015358*^9, 
   3.7321210954987087`*^9}, {3.732121166486668*^9, 3.732121167986925*^9}, {
   3.7321212723370657`*^9, 3.732121346193357*^9}, {3.732121376586645*^9, 
   3.732121394795536*^9}, 3.73212179385291*^9, {3.732122588002667*^9, 
   3.732122625865732*^9}, {3.73212270609303*^9, 3.732122777682488*^9}, {
   3.732122846708263*^9, 3.732122853874672*^9}, {3.732122957792938*^9, 
   3.732123008265082*^9}, {3.7321230704988613`*^9, 3.732123143529513*^9}, {
   3.7321231840583677`*^9, 3.732123187272167*^9}, {3.73212325398239*^9, 
   3.7321232640269403`*^9}, {3.732123420092288*^9, 3.732123441297947*^9}, {
   3.732123481615498*^9, 3.7321234927286997`*^9}, {3.732123561469347*^9, 
   3.732123564218587*^9}, {3.732123642814185*^9, 3.73212376317239*^9}, {
   3.7321238063354053`*^9, 3.732123840380582*^9}, {3.732123957649968*^9, 
   3.732124007427272*^9}, {3.7321244248785057`*^9, 3.732124435457488*^9}, {
   3.732124605842689*^9, 3.7321246075275183`*^9}, {3.7321246423065557`*^9, 
   3.732124790040059*^9}, {3.732125001684536*^9, 3.732125012556492*^9}, {
   3.7321253656482763`*^9, 3.7321253952012568`*^9}, {3.732125491737005*^9, 
   3.732125527445704*^9}, {3.73212557936801*^9, 3.732125616846225*^9}, {
   3.732126177247345*^9, 3.732126181658292*^9}, {3.732126261440917*^9, 
   3.7321262899939423`*^9}, {3.732126673857821*^9, 3.732126683922616*^9}, 
   3.7321280642439003`*^9, {3.732128098468481*^9, 3.732128155748681*^9}, 
   3.732128928831441*^9, {3.7321289708307743`*^9, 3.732129013373907*^9}, {
   3.7321291553381643`*^9, 3.7321291593669643`*^9}, {3.732129216576181*^9, 
   3.732129218141452*^9}, {3.732129335955057*^9, 3.732129340313067*^9}, {
   3.732129691046843*^9, 3.732129754021215*^9}, {3.732130043486978*^9, 
   3.732130075640213*^9}, {3.7321305133318*^9, 3.732130517118058*^9}, {
   3.7321307792022057`*^9, 3.7321308180386868`*^9}, {3.732130855733745*^9, 
   3.732130869313942*^9}, {3.732131593846785*^9, 3.732131594123602*^9}, {
   3.732132720413369*^9, 3.732132788630994*^9}, {3.732148070558756*^9, 
   3.73214813022855*^9}, {3.732148227037177*^9, 3.732148232196052*^9}, {
   3.732148352666771*^9, 3.732148357618425*^9}, {3.732148397990882*^9, 
   3.732148452680162*^9}, {3.7321485278341722`*^9, 3.7321485536932364`*^9}, {
   3.7321486353570023`*^9, 3.732148685127976*^9}, {3.732148715801382*^9, 
   3.732148723318343*^9}, {3.732148756479673*^9, 3.732148770301849*^9}, {
   3.7321488083365088`*^9, 3.732148814220881*^9}, {3.732148881623218*^9, 
   3.732148918285351*^9}, {3.732148993492818*^9, 3.732149041226247*^9}, {
   3.732149124155065*^9, 3.732149135033278*^9}, {3.73214919650497*^9, 
   3.732149254620613*^9}, 3.73214934499361*^9, {3.732149518250189*^9, 
   3.73214952149679*^9}, {3.7321794727796926`*^9, 3.7321795104376307`*^9}, {
   3.732179806229435*^9, 3.7321798608778677`*^9}, {3.732186890074548*^9, 
   3.732186892099483*^9}, {3.732273668440584*^9, 3.73227367858226*^9}, {
   3.732274068908832*^9, 3.732274115150938*^9}, {3.732274152704187*^9, 
   3.7322742780883293`*^9}, {3.73227432619989*^9, 3.732274528666891*^9}, {
   3.732274606204081*^9, 3.732274706162095*^9}, {3.732279063352776*^9, 
   3.7322793431682653`*^9}, {3.732279406041354*^9, 3.7322795441205378`*^9}, {
   3.732279597040884*^9, 3.732279598448518*^9}, {3.7322797796417522`*^9, 
   3.732279803254964*^9}, {3.7322798737133408`*^9, 3.732279884527659*^9}, {
   3.7322799312475224`*^9, 3.7322799426305857`*^9}, {3.732280022728263*^9, 
   3.7322800774388647`*^9}, {3.73228021335325*^9, 3.732280224279903*^9}, {
   3.7322803191037617`*^9, 3.732280322072605*^9}, {3.7322803887296658`*^9, 
   3.732280547606296*^9}, {3.732280581272107*^9, 3.732280583569257*^9}, {
   3.732280657433313*^9, 3.7322806721194677`*^9}, 3.732280719340022*^9, {
   3.732280753379817*^9, 3.7322809753159533`*^9}, {3.732281110197443*^9, 
   3.7322811779625797`*^9}, {3.732281212365209*^9, 3.732281223830912*^9}, {
   3.732281281091206*^9, 3.732281319579575*^9}, {3.732281359736813*^9, 
   3.732281445086295*^9}, {3.732281482299931*^9, 3.7322815490680313`*^9}, {
   3.732281682568099*^9, 3.732281691558013*^9}, {3.73228173372097*^9, 
   3.73228177752662*^9}, {3.7322818178139877`*^9, 3.7322820314892473`*^9}, {
   3.73228213606045*^9, 3.732282173294774*^9}, {3.73228222079532*^9, 
   3.732282334536606*^9}, {3.732282376530509*^9, 3.732282383313693*^9}, {
   3.732282436048172*^9, 3.732282452846439*^9}, {3.732282528830146*^9, 
   3.732282545322377*^9}, {3.732282576925108*^9, 3.7322831332698174`*^9}, {
   3.732283166532042*^9, 3.732283235437557*^9}, {3.732283389113247*^9, 
   3.732283392023337*^9}, {3.732283428168215*^9, 3.7322834293419027`*^9}, {
   3.732283505107938*^9, 3.732283507824996*^9}, {3.732283559301176*^9, 
   3.7322836060890923`*^9}, {3.732283642424747*^9, 3.7322836511840763`*^9}, {
   3.732283694319878*^9, 3.732283804196093*^9}, {3.732283835941242*^9, 
   3.732283850315888*^9}, {3.732283920931375*^9, 3.732283949428362*^9}, {
   3.732283981850519*^9, 3.732284020321094*^9}, {3.732284187582177*^9, 
   3.732284207842355*^9}, {3.732289198545928*^9, 3.7322892777295713`*^9}, {
   3.732293264154922*^9, 3.73229326569785*^9}, {3.732293305723425*^9, 
   3.732293372099641*^9}, {3.732293405129694*^9, 3.732293428105321*^9}, {
   3.7322934669170303`*^9, 3.73229350009263*^9}, {3.7322942758856487`*^9, 
   3.732294315108076*^9}, {3.7322945388006277`*^9, 3.732294716857369*^9}, {
   3.732294761921857*^9, 3.732294790111483*^9}, {3.732361892744691*^9, 
   3.7323619587382*^9}, {3.7323619889461727`*^9, 3.732362193300148*^9}, {
   3.7323622393742657`*^9, 3.7323625766863413`*^9}, {3.732362652473363*^9, 
   3.732362936777048*^9}, {3.732362971911919*^9, 3.732362975733976*^9}, {
   3.732363009604783*^9, 3.732363099444395*^9}, {3.7323631303033037`*^9, 
   3.7323631631721907`*^9}, {3.732363216745565*^9, 3.732363285514771*^9}, 
   3.7323633459235697`*^9, {3.7323633770120373`*^9, 3.732363555994933*^9}, {
   3.732363646067868*^9, 3.732363686122983*^9}, {3.732363764586631*^9, 
   3.732363824242152*^9}, {3.732363888129147*^9, 3.732363924189187*^9}, 
   3.732364020145775*^9, {3.7323640503937893`*^9, 3.732364053107752*^9}, {
   3.732364114408519*^9, 3.732364120561975*^9}, 3.732364268471068*^9, {
   3.732375199214329*^9, 3.732375365859263*^9}, 3.7323754401330013`*^9, {
   3.732376947245214*^9, 3.732376968872691*^9}, {3.732377436648839*^9, 
   3.7323775838594646`*^9}, {3.73237816178828*^9, 3.732378329159795*^9}, {
   3.7323785368415813`*^9, 3.7323785662977467`*^9}, {3.7323786110967607`*^9, 
   3.732378612393483*^9}, {3.7323786623843107`*^9, 3.7323787119257383`*^9}, {
   3.732378892146102*^9, 3.7323789064991007`*^9}, 3.732378947262628*^9, {
   3.732379004230036*^9, 3.7323790082390757`*^9}, {3.732379071010144*^9, 
   3.732379102171975*^9}, {3.732379275544279*^9, 3.732379283415038*^9}, {
   3.732379490800548*^9, 3.7323795384640837`*^9}, {3.7323796028481607`*^9, 
   3.732379607711328*^9}, {3.7323804743172693`*^9, 3.732380475097829*^9}, {
   3.732382320852851*^9, 3.73238251058881*^9}, {3.732382647250401*^9, 
   3.732382660979651*^9}, {3.732382706184355*^9, 3.7323827263900423`*^9}, 
   3.732382804329302*^9, {3.732383083972378*^9, 3.732383089939131*^9}, {
   3.732383131792316*^9, 3.73238313480304*^9}, 3.732383285130555*^9, 
   3.732383382076099*^9, {3.732383442455065*^9, 3.7323834765031853`*^9}, {
   3.732383706010377*^9, 3.7323837457539043`*^9}, {3.732383890403141*^9, 
   3.732383896795795*^9}, {3.7323839492852592`*^9, 3.732383988324451*^9}, 
   3.7323840732364388`*^9, {3.732384335502445*^9, 3.7323843358795033`*^9}, {
   3.7323844556361647`*^9, 3.732384476731126*^9}, {3.732384519574108*^9, 
   3.732384528776597*^9}, {3.7323845892812233`*^9, 3.7323846965087557`*^9}, 
   3.732384735368063*^9, {3.732384789334811*^9, 3.732384794573783*^9}, {
   3.732384938843073*^9, 3.7323850357427597`*^9}, {3.7323850761720333`*^9, 
   3.7323851023584833`*^9}, 3.7323851438425493`*^9, {3.732385197798852*^9, 
   3.73238519846247*^9}, {3.732385247292966*^9, 3.732385258152028*^9}, {
   3.732385297400917*^9, 3.7323853042019*^9}, {3.7323853759225473`*^9, 
   3.732385377236526*^9}, {3.732385412587988*^9, 3.732385486461357*^9}, {
   3.732385520549205*^9, 3.732385552571205*^9}, {3.732385626963504*^9, 
   3.732385627771641*^9}, {3.7323857372417803`*^9, 3.7323857482029*^9}, {
   3.732385780897373*^9, 3.73238581480584*^9}, {3.7323858934969463`*^9, 
   3.732385897307267*^9}, {3.732385933263183*^9, 3.732385947626875*^9}, 
   3.732385979811343*^9, {3.7323860701485653`*^9, 3.73238608016076*^9}, {
   3.7323861122998247`*^9, 3.732386151703895*^9}, {3.7323862000301867`*^9, 
   3.732386236420909*^9}, {3.732386267239481*^9, 3.732386269029723*^9}, {
   3.73238630420308*^9, 3.732386329032552*^9}, {3.732386397105*^9, 
   3.732386411262719*^9}, 3.7323864413722973`*^9, {3.732386676841408*^9, 
   3.732386811083894*^9}, {3.732386857348381*^9, 3.732386903058589*^9}, {
   3.732386934690527*^9, 3.732386965514001*^9}, 3.732394160891323*^9, 
   3.732394202442793*^9, {3.73239442823394*^9, 3.732394430501254*^9}, 
   3.732394545587414*^9, {3.732394590490328*^9, 3.732394614925569*^9}, 
   3.73239466325071*^9, {3.732394754473633*^9, 3.732394755136915*^9}, {
   3.732394941810315*^9, 3.732394944440241*^9}, {3.732395011433588*^9, 
   3.732395031713478*^9}, {3.732395284781308*^9, 3.732395293284244*^9}, {
   3.7323954011725197`*^9, 3.7323954354521008`*^9}, {3.73239548431282*^9, 
   3.732395487681872*^9}, {3.732395539391083*^9, 3.7323955443346*^9}, {
   3.732395650683731*^9, 3.7323956633947697`*^9}, {3.7323957351571608`*^9, 
   3.7323957544181147`*^9}, {3.732395805117869*^9, 3.7323958080464067`*^9}, {
   3.7323959032131453`*^9, 3.7323959378824253`*^9}, {3.732396040519202*^9, 
   3.732396043086269*^9}, {3.732396122391658*^9, 3.732396197328886*^9}, {
   3.7323963011508837`*^9, 3.7323963499253683`*^9}, {3.7323965130442944`*^9, 
   3.732396539782796*^9}, {3.732396595842229*^9, 3.732396616049129*^9}, {
   3.7323970488382607`*^9, 3.7323970612056627`*^9}, {3.732397161800601*^9, 
   3.732397175383821*^9}, {3.732397254573127*^9, 3.732397263519684*^9}, {
   3.7323974169855957`*^9, 3.732397423328457*^9}, {3.7323975128182487`*^9, 
   3.732397525581169*^9}, {3.732397564861061*^9, 3.732397575475802*^9}, {
   3.732397755518031*^9, 3.732397755680997*^9}, {3.732397802199634*^9, 
   3.732397811478698*^9}, {3.732397888118148*^9, 3.732397904142561*^9}, {
   3.7323981329318533`*^9, 3.7323982025496483`*^9}, {3.732398252460122*^9, 
   3.7323983088030453`*^9}, {3.732399210999797*^9, 3.732399211285838*^9}, {
   3.73239936438485*^9, 3.732399367568097*^9}, {3.732399430888941*^9, 
   3.732399431177013*^9}, {3.73239953228161*^9, 3.7323995417895327`*^9}, {
   3.7323996355829687`*^9, 3.7323996360789413`*^9}, {3.732399702292564*^9, 
   3.732399786608097*^9}, {3.732399914578052*^9, 3.732399982424481*^9}, {
   3.732400098215192*^9, 3.7324001405901546`*^9}, {3.732400180854784*^9, 
   3.7324002292620173`*^9}, {3.7324002754783087`*^9, 3.732400372890719*^9}, 
   3.732400533754648*^9, {3.7324005688529453`*^9, 3.732400616153861*^9}, {
   3.732400920192856*^9, 3.73240092056038*^9}, {3.7324010312386007`*^9, 
   3.73240105067738*^9}, 3.732401247061887*^9, {3.7324013999330378`*^9, 
   3.7324014074489403`*^9}, {3.732401513867844*^9, 3.732401516123019*^9}, {
   3.73240169530547*^9, 3.7324016993824*^9}, {3.732401875034315*^9, 
   3.7324018839768753`*^9}, {3.732401934104825*^9, 3.732401934922728*^9}, {
   3.7324021373225727`*^9, 3.7324021455549088`*^9}, {3.732402308353957*^9, 
   3.732402332390952*^9}, {3.732402491067347*^9, 3.732402491831929*^9}, {
   3.735151886195064*^9, 3.735151948930167*^9}, {3.735151997593934*^9, 
   3.735152013426894*^9}, {3.7351520443615093`*^9, 3.735152096078773*^9}, {
   3.735152135521109*^9, 3.7351522294949408`*^9}, {3.735152346671906*^9, 
   3.735152347150243*^9}, 3.7351534725812397`*^9, {3.735155790719459*^9, 
   3.735155950889803*^9}, {3.735156141923098*^9, 3.735156171150934*^9}, {
   3.735156211032825*^9, 3.735156283758759*^9}, {3.7351563160705557`*^9, 
   3.735156393494046*^9}, {3.735156466537365*^9, 3.73515652078424*^9}, {
   3.735156552046887*^9, 3.7351565906914253`*^9}, {3.735157043192966*^9, 
   3.735157166194296*^9}, {3.735157228315424*^9, 3.735157252185543*^9}, {
   3.7351573537745256`*^9, 3.7351573608352633`*^9}, {3.735199811946425*^9, 
   3.7351998232250443`*^9}, {3.735199880011477*^9, 3.735199880192416*^9}, {
   3.735199945641967*^9, 3.735199949470378*^9}, {3.735199987306293*^9, 
   3.735200005967978*^9}, {3.7352000940916567`*^9, 3.735200099136683*^9}, 
   3.735200215572707*^9, {3.735200254866179*^9, 3.735200265664349*^9}, {
   3.735200344638871*^9, 3.735200378611691*^9}, 3.735200894091618*^9, {
   3.7352009374937267`*^9, 3.7352009753851624`*^9}, {3.7352011355928593`*^9, 
   3.735201149541634*^9}, {3.7352316744976263`*^9, 3.735231688499096*^9}, {
   3.7352317260037193`*^9, 3.735231759096321*^9}, {3.735231795301963*^9, 
   3.735231819564394*^9}, 3.7352319574200993`*^9, {3.735232248957859*^9, 
   3.735232300378283*^9}, {3.735232361288506*^9, 3.7352323614615583`*^9}, {
   3.73525201201575*^9, 3.735252090610137*^9}, {3.735252668857283*^9, 
   3.735252704880176*^9}, {3.7352528726755333`*^9, 3.735252875809238*^9}, {
   3.735286418391507*^9, 3.735286444478215*^9}, 3.735286679974226*^9, {
   3.735287309705509*^9, 3.735287322224452*^9}, {3.7353018397900267`*^9, 
   3.735301877625361*^9}, {3.735301978000839*^9, 3.735301985795951*^9}, {
   3.735302024201598*^9, 3.735302074832006*^9}, {3.73530211401764*^9, 
   3.735302116917947*^9}, {3.735302160166738*^9, 3.7353021709183493`*^9}, {
   3.735302638516354*^9, 3.735302671607609*^9}, {3.735302798360808*^9, 
   3.735302798660632*^9}, {3.7353028314341*^9, 3.735302831719645*^9}, {
   3.7353030182302923`*^9, 3.735303024781302*^9}, {3.7353031179366417`*^9, 
   3.735303118287011*^9}, {3.735303184720951*^9, 3.735303224030155*^9}, {
   3.735303418870944*^9, 3.7353034196355247`*^9}, {3.735303669596986*^9, 
   3.735303673906687*^9}, {3.735303787516962*^9, 3.7353037912257223`*^9}, {
   3.7353039721786203`*^9, 3.735304023421339*^9}, {3.735304081024536*^9, 
   3.735304107089891*^9}, {3.7353041997676353`*^9, 3.735304331668806*^9}, {
   3.735304617086594*^9, 3.735304626063149*^9}, {3.735304664407427*^9, 
   3.7353046847647753`*^9}, {3.735318864136848*^9, 3.735318868796288*^9}, {
   3.7353189275118303`*^9, 3.735318940493795*^9}, {3.7353190030098677`*^9, 
   3.7353190083571568`*^9}, {3.735319047718416*^9, 3.735319071434371*^9}, {
   3.735319169595831*^9, 3.735319172610652*^9}, 3.7353192554835587`*^9, {
   3.735319347363605*^9, 3.735319391703952*^9}, {3.735319422357616*^9, 
   3.735319527994053*^9}, {3.735319616557394*^9, 3.7353196352202883`*^9}, {
   3.735320103670064*^9, 3.7353201317399473`*^9}, {3.735320264465069*^9, 
   3.735320425488306*^9}, {3.735320545814582*^9, 3.735320550747683*^9}, {
   3.735320643943378*^9, 3.735320668308813*^9}, {3.735320702199771*^9, 
   3.7353207121011543`*^9}, {3.7353208162917337`*^9, 3.735320827915968*^9}, {
   3.735320889045105*^9, 3.735320920425868*^9}, {3.735321079334736*^9, 
   3.735321093295146*^9}, {3.7353211889780912`*^9, 3.735321193875607*^9}, {
   3.735321314782215*^9, 3.735321340956476*^9}, {3.735321411974704*^9, 
   3.735321414653754*^9}, {3.735321703130512*^9, 3.735321717543274*^9}, {
   3.7353217510778923`*^9, 3.73532176642319*^9}, {3.735321980097026*^9, 
   3.735321986504871*^9}, {3.7353312448441057`*^9, 3.735331251860478*^9}, {
   3.73533294451989*^9, 3.735332961141321*^9}, {3.735332997713808*^9, 
   3.7353331413211317`*^9}, {3.735333254160665*^9, 3.7353332639043837`*^9}, {
   3.735333540720544*^9, 3.735333552757634*^9}, {3.735333605933652*^9, 
   3.735333609826845*^9}, {3.735333650701724*^9, 3.735333654315205*^9}, {
   3.735333692492737*^9, 3.73533371093896*^9}, {3.735334435762171*^9, 
   3.7353344398317747`*^9}, {3.735334893235812*^9, 3.735334920118607*^9}, {
   3.735379797869072*^9, 3.735379877338726*^9}, {3.735379942269443*^9, 
   3.735380028638461*^9}, {3.735380098137721*^9, 3.735380109421548*^9}, 
   3.7353803254613323`*^9, {3.735380618417004*^9, 3.7353806533951178`*^9}, 
   3.7353807004782057`*^9, {3.735380756061873*^9, 3.735380768487171*^9}, {
   3.735380929305818*^9, 3.735380941981318*^9}, {3.735381270471713*^9, 
   3.735381275616499*^9}, {3.735381358297792*^9, 3.735381371454788*^9}, {
   3.735381473655114*^9, 3.735381482668517*^9}, {3.73538156764895*^9, 
   3.73538158407948*^9}, {3.7353816166197853`*^9, 3.735381736104597*^9}, {
   3.7353817738722687`*^9, 3.735381868364682*^9}, {3.735381937101376*^9, 
   3.735381952365588*^9}, {3.735382027134993*^9, 3.7353820294556713`*^9}, {
   3.735382077584992*^9, 3.735382098834557*^9}, {3.7353830575136957`*^9, 
   3.735383062954999*^9}, {3.735383124528561*^9, 3.7353831309823008`*^9}, {
   3.7353833264958057`*^9, 3.735383343854212*^9}, {3.735383399014551*^9, 
   3.735383516047103*^9}, {3.735383567760036*^9, 3.735383590686607*^9}, {
   3.735383621959025*^9, 3.73538367662433*^9}, {3.7353838378662243`*^9, 
   3.735383863178166*^9}, {3.735383913651352*^9, 3.7353839504340477`*^9}, {
   3.7353839810837927`*^9, 3.735383990980641*^9}, 3.735384068590713*^9, {
   3.735384420989957*^9, 3.735384566665325*^9}, {3.7353846094680567`*^9, 
   3.735384725279724*^9}, {3.73538477570671*^9, 3.7353847853153563`*^9}, 
   3.735384907027261*^9, {3.7353849610135803`*^9, 3.735384969727393*^9}, {
   3.735385034837678*^9, 3.7353850501957197`*^9}, {3.735385138885785*^9, 
   3.735385142168783*^9}, {3.735393908376552*^9, 3.735393923381262*^9}, {
   3.735394775755773*^9, 3.7353947826097393`*^9}, {3.735394825506873*^9, 
   3.7353948486996183`*^9}, {3.735394893189426*^9, 3.7353948984055223`*^9}, 
   3.735395087112401*^9, {3.735395158794302*^9, 3.735395167239794*^9}, 
   3.735395229229179*^9, {3.735395259849166*^9, 3.735395262049642*^9}, {
   3.735395370416587*^9, 3.735395377241303*^9}, {3.735395445323833*^9, 
   3.7353954743910913`*^9}, {3.735400709101923*^9, 3.735400754100305*^9}, {
   3.735400923166266*^9, 3.735400942481082*^9}, {3.7354010911951857`*^9, 
   3.735401151651915*^9}, 3.735401224853599*^9, {3.7354012822886133`*^9, 
   3.735401282732634*^9}, {3.73540133958724*^9, 3.735401358688643*^9}, {
   3.735401524711014*^9, 3.735401531858863*^9}, {3.7354015884424753`*^9, 
   3.735401592181665*^9}, {3.735401801299017*^9, 3.735401801680327*^9}, {
   3.735401833006177*^9, 3.735401878131599*^9}, {3.735402018332315*^9, 
   3.73540204060108*^9}, {3.73540210080802*^9, 3.7354021064430017`*^9}, {
   3.735402188243105*^9, 3.7354021979672737`*^9}, {3.735402406166258*^9, 
   3.735402431675331*^9}, {3.7354041840534286`*^9, 3.73540422543328*^9}, {
   3.735404285373362*^9, 3.735404386903644*^9}, {3.735404428300359*^9, 
   3.735404453883745*^9}, {3.735404518179903*^9, 3.735404547560596*^9}, {
   3.7354045818044786`*^9, 3.735404599923361*^9}, {3.735404676400576*^9, 
   3.735404697429908*^9}, {3.735404760896847*^9, 3.73540476573363*^9}, {
   3.7354048622957287`*^9, 3.7354048656958103`*^9}, {3.735404984331813*^9, 
   3.735404997250699*^9}, {3.735405062575873*^9, 3.7354050766739073`*^9}, {
   3.7354051404948473`*^9, 3.735405141857935*^9}, {3.735405391841434*^9, 
   3.7354053945983753`*^9}, {3.7354054261603737`*^9, 3.735405686112588*^9}, {
   3.735405722201866*^9, 3.735405779448648*^9}, {3.7354059346543427`*^9, 
   3.735405971048017*^9}, {3.735406023224943*^9, 3.7354060275377493`*^9}, {
   3.735406067973359*^9, 3.735406071964251*^9}, {3.735406143852209*^9, 
   3.735406204435604*^9}, {3.735406300094511*^9, 3.735406301952813*^9}, {
   3.73540637041073*^9, 3.7354064113254766`*^9}, {3.735406485204486*^9, 
   3.7354064876534367`*^9}, {3.735406567724113*^9, 3.7354065784597883`*^9}, {
   3.735406654117469*^9, 3.7354067106101933`*^9}, {3.735406817198534*^9, 
   3.735406875726136*^9}, {3.7354069281131363`*^9, 3.735406973319886*^9}, {
   3.735407157487288*^9, 3.735407179510404*^9}, {3.735407241750901*^9, 
   3.735407268881691*^9}, {3.73540731548169*^9, 3.7354073163468924`*^9}, {
   3.735407542487638*^9, 3.7354075633394947`*^9}, {3.735407610509302*^9, 
   3.735407626919064*^9}, {3.735407687284206*^9, 3.735407834028936*^9}, {
   3.7354078688598423`*^9, 3.735407872465097*^9}, {3.735408090451016*^9, 
   3.735408097862719*^9}, {3.735408186688951*^9, 3.7354081874007483`*^9}, {
   3.735408226350198*^9, 3.735408298037133*^9}, {3.735471110591382*^9, 
   3.735471181391005*^9}, {3.735474084625988*^9, 3.735474157326644*^9}, {
   3.735474341135276*^9, 3.735474355049426*^9}, {3.735474456650445*^9, 
   3.7354744665493183`*^9}, {3.735474499475995*^9, 3.735474512547914*^9}, {
   3.735474604036042*^9, 3.735474642687345*^9}, {3.7354747620002403`*^9, 
   3.735474968015114*^9}, {3.735475018399047*^9, 3.735475047210165*^9}, {
   3.735475106535159*^9, 3.735475108756097*^9}, {3.735475161026043*^9, 
   3.7354752144400063`*^9}, {3.7354752515142*^9, 3.7354752725841846`*^9}, {
   3.73547545456631*^9, 3.735475455296872*^9}, {3.7354754942075043`*^9, 
   3.735475504982225*^9}, 3.735475535165781*^9, {3.735475617856523*^9, 
   3.7354756980458927`*^9}, {3.735475786571321*^9, 3.735475795159781*^9}, 
   3.7354759809161386`*^9, {3.735476204118655*^9, 3.735476217046845*^9}, {
   3.735477171589816*^9, 3.7354771980064497`*^9}, {3.735477234988421*^9, 
   3.7354772501935987`*^9}, {3.735477293444642*^9, 3.735477295985523*^9}, {
   3.735477353208866*^9, 3.735477359582921*^9}, {3.735477442317231*^9, 
   3.735477494202656*^9}, {3.735477575406487*^9, 3.735477582702512*^9}, {
   3.735496210294972*^9, 3.73549623284942*^9}, {3.735496267152584*^9, 
   3.7354965166590853`*^9}, {3.735496550540474*^9, 3.73549674543471*^9}, {
   3.735496776481846*^9, 3.735496874196555*^9}, {3.735496910092925*^9, 
   3.73549696187344*^9}, {3.7354973396414022`*^9, 3.7354973585029593`*^9}, {
   3.7354973920144*^9, 3.7354974224948*^9}, {3.735497478943983*^9, 
   3.735497526384783*^9}, 3.73549761046703*^9, 3.735497645342082*^9, {
   3.735497698035137*^9, 3.735497716927575*^9}, 3.735498387278373*^9, {
   3.735498430185607*^9, 3.735498458185169*^9}, {3.735498527889277*^9, 
   3.735498536256837*^9}, {3.735498595146904*^9, 3.735498621901205*^9}, {
   3.735498762561233*^9, 3.735498766912108*^9}, {3.735498861183267*^9, 
   3.735498863894312*^9}, {3.735499056373892*^9, 3.735499096101857*^9}, {
   3.7355033643978558`*^9, 3.735503511934258*^9}, {3.7355035514744787`*^9, 
   3.7355036418267612`*^9}, {3.73550370008499*^9, 3.735503702771618*^9}, {
   3.73550378979277*^9, 3.73550381774265*^9}, 3.7355038784516983`*^9, {
   3.735503972940139*^9, 3.735503983548934*^9}, {3.7355040377932*^9, 
   3.735504039642112*^9}, {3.7355040706340103`*^9, 3.735504074665612*^9}, {
   3.7355042405758543`*^9, 3.735504276419508*^9}, {3.735504313179813*^9, 
   3.735504316954129*^9}, 3.735504358437313*^9, {3.735504458044907*^9, 
   3.7355044636980886`*^9}, {3.735504521129505*^9, 3.735504553174472*^9}, {
   3.735504620509293*^9, 3.735504651938676*^9}, {3.735504720115665*^9, 
   3.735504723656839*^9}, {3.735505524819751*^9, 3.735505527977211*^9}, {
   3.735505595214757*^9, 3.735505617140876*^9}, {3.735505775444734*^9, 
   3.735505800742625*^9}, {3.735505904589904*^9, 3.7355059086298447`*^9}, {
   3.7355060354906197`*^9, 3.7355060478190107`*^9}, {3.7355062588546963`*^9, 
   3.735506264366023*^9}, {3.735506373043638*^9, 3.7355063755782433`*^9}, 
   3.735506563923761*^9, {3.735506604498391*^9, 3.7355066060090303`*^9}, {
   3.735506645825119*^9, 3.735506667351646*^9}, {3.735506800644445*^9, 
   3.7355068046967087`*^9}, {3.735516228381282*^9, 3.735516247781864*^9}, 
   3.73551627992181*^9, {3.735516352168194*^9, 3.735516361214419*^9}, {
   3.735516425455681*^9, 3.735516437758363*^9}, {3.735516627592087*^9, 
   3.73551663231767*^9}, {3.7355166844754763`*^9, 3.735516706137726*^9}, {
   3.735516794369294*^9, 3.735516829636517*^9}, {3.7355169003934603`*^9, 
   3.735516918386139*^9}, {3.7355169618894243`*^9, 3.735516973606257*^9}, {
   3.735517122669524*^9, 3.735517166568694*^9}, {3.7355171994178877`*^9, 
   3.7355171999127274`*^9}, {3.735517275086543*^9, 3.735517330945243*^9}, {
   3.735517374657405*^9, 3.735517419953034*^9}, {3.735517455425095*^9, 
   3.7355174564854527`*^9}, {3.7355430215543327`*^9, 3.735543085420127*^9}, {
   3.735543132044485*^9, 3.7355432483315067`*^9}, {3.7355432826811943`*^9, 
   3.7355433334955473`*^9}, {3.735543460702259*^9, 3.73554347799608*^9}, {
   3.7355436056119547`*^9, 3.735543627049613*^9}, {3.7355436990568743`*^9, 
   3.7355437279672613`*^9}, {3.735543810218278*^9, 3.735543875270688*^9}, {
   3.7355439255007877`*^9, 3.735544127650916*^9}, {3.735544163989929*^9, 
   3.7355442244177847`*^9}, {3.735544763734428*^9, 3.7355448688717833`*^9}, {
   3.7355449422527027`*^9, 3.735544945212079*^9}, 3.735551788934483*^9, {
   3.735551844391973*^9, 3.735551983210436*^9}, {3.735552034511587*^9, 
   3.7355520506671143`*^9}, {3.735552089509666*^9, 3.7355521762047453`*^9}, {
   3.7355522065808764`*^9, 3.735552206691812*^9}, {3.73555223865976*^9, 
   3.735552359423841*^9}, {3.735552795997594*^9, 3.735552803591074*^9}, {
   3.735552966292094*^9, 3.73555298267701*^9}, {3.7355530250552692`*^9, 
   3.735553117316554*^9}, 3.735553395824575*^9, {3.735553933447048*^9, 
   3.7355539440426493`*^9}, {3.73555406070219*^9, 3.735554061168702*^9}, {
   3.73555491915738*^9, 3.735554919747553*^9}, 3.7355554044195232`*^9, {
   3.735556068819016*^9, 3.735556076161563*^9}, {3.735556113203816*^9, 
   3.735556181483177*^9}, {3.735556217699807*^9, 3.735556271746058*^9}, {
   3.73555649993469*^9, 3.7355565135817204`*^9}, {3.7355565516971188`*^9, 
   3.7355565910307007`*^9}, {3.735556627843622*^9, 3.735556683575706*^9}, {
   3.735556715048649*^9, 3.735556816582408*^9}, {3.735556857443684*^9, 
   3.735556884032391*^9}, {3.73555691875031*^9, 3.735556935987953*^9}, {
   3.735556966876663*^9, 3.735556971910404*^9}, 3.7355572222255907`*^9, {
   3.7355572546638727`*^9, 3.7355572602117043`*^9}, {3.735557327421914*^9, 
   3.735557379899377*^9}, {3.7355574668554077`*^9, 3.73555746838517*^9}, {
   3.73555796658422*^9, 3.735557977200161*^9}, {3.735558139170991*^9, 
   3.735558141164023*^9}, 3.735558176983965*^9, {3.735558214353855*^9, 
   3.735558215050879*^9}, 3.735558250947103*^9, {3.7355582853792973`*^9, 
   3.735558314968664*^9}, {3.735558393589218*^9, 3.735558443167386*^9}, {
   3.735558509596716*^9, 3.735558551843234*^9}, {3.735558618384015*^9, 
   3.735558765712867*^9}, {3.735558801467061*^9, 3.73555885973177*^9}, {
   3.7355588949100733`*^9, 3.735558897479144*^9}, {3.735559013084383*^9, 
   3.735559016312058*^9}, {3.735559213430909*^9, 3.73555922418902*^9}, {
   3.73555926975951*^9, 3.735559294417466*^9}, {3.7355594714175367`*^9, 
   3.735559514936038*^9}, {3.735559619172976*^9, 3.73555967341042*^9}, {
   3.735559863851859*^9, 3.735559864552046*^9}, {3.7355601299836187`*^9, 
   3.7355601917328653`*^9}, {3.735560258118712*^9, 3.73556031605474*^9}, {
   3.7355604037391777`*^9, 3.7355604806788197`*^9}, {3.7355608737166157`*^9, 
   3.735560892404907*^9}, {3.735560962049074*^9, 3.735560963102207*^9}, {
   3.735561067389525*^9, 3.735561137316825*^9}, {3.73556117723273*^9, 
   3.73556118094615*^9}, {3.735561217211418*^9, 3.735561217700292*^9}, {
   3.735561582778469*^9, 3.7355616014959803`*^9}, {3.7355616320740128`*^9, 
   3.735561633791292*^9}, {3.7355616642850027`*^9, 3.735561667778123*^9}, {
   3.735561826968094*^9, 3.735561833053377*^9}, {3.73556189703309*^9, 
   3.7355618974827757`*^9}, {3.73556230100692*^9, 3.735562301453113*^9}, {
   3.73556261056988*^9, 3.7355626273820066`*^9}, {3.735562771650923*^9, 
   3.7355628597129393`*^9}, {3.735563186487978*^9, 3.7355632331388187`*^9}, {
   3.735563266247745*^9, 3.7355632825669327`*^9}, 3.735563319378097*^9, {
   3.7355633800158367`*^9, 3.735563384485425*^9}, {3.735563548362776*^9, 
   3.735563568101533*^9}, {3.7355639191362867`*^9, 3.7355639237863293`*^9}, {
   3.735571072556902*^9, 3.7355710786084347`*^9}, {3.735571134937521*^9, 
   3.7355711857542686`*^9}, {3.7355714611338987`*^9, 
   3.7355715161343327`*^9}, {3.735571577428249*^9, 3.7355715912700567`*^9}, {
   3.735571624702132*^9, 3.735571681566367*^9}, {3.735571849705845*^9, 
   3.735571928089737*^9}, {3.735571995337118*^9, 3.7355720314504843`*^9}, {
   3.735572114455308*^9, 3.735572114846833*^9}, {3.735572304198018*^9, 
   3.7355723117109327`*^9}, {3.735572510945869*^9, 3.735572520747148*^9}, {
   3.735573009752391*^9, 3.735573048256852*^9}, {3.735573266355488*^9, 
   3.7355733098335943`*^9}, {3.735573405094442*^9, 3.735573542861835*^9}, {
   3.735573592900589*^9, 3.735573644838428*^9}, {3.735576442640867*^9, 
   3.7355767440114317`*^9}, {3.735577085526835*^9, 3.735577090031445*^9}, {
   3.735577153467051*^9, 3.735577170857893*^9}, {3.7355772468093853`*^9, 
   3.735577255436418*^9}, {3.735577391364217*^9, 3.735577398369809*^9}, {
   3.735577727164753*^9, 3.735577742240088*^9}, {3.7355793270645533`*^9, 
   3.735579357885614*^9}, {3.735579404276534*^9, 3.7355794140087147`*^9}, {
   3.735579987460412*^9, 3.735580048921904*^9}, {3.735580084075418*^9, 
   3.735580113764051*^9}, {3.7355801987438173`*^9, 3.7355802548935127`*^9}, {
   3.7355804501990547`*^9, 3.735580491071867*^9}, {3.735580593267838*^9, 
   3.7355806826967688`*^9}, {3.735580720299069*^9, 3.735580737331278*^9}, 
   3.735580823857108*^9, {3.735581039822895*^9, 3.735581070389113*^9}, {
   3.73558121536623*^9, 3.735581224356277*^9}, {3.735581444230425*^9, 
   3.7355814579219522`*^9}, {3.735581642035157*^9, 3.7355816514431467`*^9}, {
   3.735582241203517*^9, 3.735582250164444*^9}, {3.73558228761693*^9, 
   3.735582297108914*^9}, {3.735582363854742*^9, 3.735582379652186*^9}, {
   3.735594782716897*^9, 3.735594786344816*^9}, {3.735595007001461*^9, 
   3.735595013869557*^9}, {3.7355950468291883`*^9, 3.735595046988225*^9}, {
   3.735595157240985*^9, 3.73559517099984*^9}, {3.735595243781933*^9, 
   3.7355952712177134`*^9}, 3.7355954909617243`*^9, {3.7355955749042063`*^9, 
   3.7355955834570312`*^9}, {3.735595718198288*^9, 3.7355957236337957`*^9}, {
   3.735595756452153*^9, 3.735595756741529*^9}, {3.7355959793187*^9, 
   3.735596024800785*^9}, {3.735596059574312*^9, 3.735596075107295*^9}, {
   3.73559615678295*^9, 3.735596157181963*^9}, {3.7355965502526617`*^9, 
   3.7355965955317802`*^9}, {3.7355966959410954`*^9, 
   3.7355967045467863`*^9}, {3.735596775945682*^9, 3.735596784414155*^9}, {
   3.735648398420517*^9, 3.735648416253292*^9}, {3.735648488221479*^9, 
   3.7356484998086967`*^9}, {3.7356485612843637`*^9, 3.735648561501923*^9}, {
   3.735648675719701*^9, 3.7356487200115433`*^9}, 3.7356490797131977`*^9, {
   3.735661739747036*^9, 3.7356619095811768`*^9}, {3.735679649814999*^9, 
   3.735679654654317*^9}, {3.735679757063201*^9, 3.735679794246056*^9}, {
   3.735681438541918*^9, 3.735681576049301*^9}, {3.735681683144145*^9, 
   3.73568173365794*^9}, {3.735681780096445*^9, 3.735681823505847*^9}, {
   3.73568197776797*^9, 3.73568200259907*^9}, {3.7356820570186443`*^9, 
   3.7356820737940598`*^9}, {3.735682151784083*^9, 3.7356821570942593`*^9}, {
   3.735685971246766*^9, 3.735685975559078*^9}, {3.7356860102501373`*^9, 
   3.735686010952882*^9}, {3.7356860917444487`*^9, 3.735686110382316*^9}, {
   3.735686206958349*^9, 3.735686212603098*^9}, {3.735686323492292*^9, 
   3.7356863278277483`*^9}, {3.735686419954256*^9, 3.735686439274712*^9}, {
   3.735686613372813*^9, 3.735686637229754*^9}, {3.7356872274807987`*^9, 
   3.7356873608310204`*^9}, {3.73568739532512*^9, 3.735687513750268*^9}, {
   3.735687559326827*^9, 3.735687565333197*^9}, {3.735687686039382*^9, 
   3.735687699805303*^9}, {3.73568775507159*^9, 3.735687762367043*^9}, {
   3.7357174064921618`*^9, 3.735717427461508*^9}, {3.735717626713763*^9, 
   3.735717664982613*^9}, {3.7357177023278503`*^9, 3.735717729125741*^9}, 
   3.735718021444891*^9, {3.735718148959641*^9, 3.735718151285696*^9}, {
   3.7357182041197147`*^9, 3.735718208597815*^9}, {3.735718369012023*^9, 
   3.73571837096062*^9}, {3.7357184532934647`*^9, 3.7357184561318417`*^9}, {
   3.735718662267887*^9, 3.7357186658664*^9}, {3.7357187360735607`*^9, 
   3.7357188350465927`*^9}, {3.735719158079624*^9, 3.735719161459601*^9}, {
   3.735719231139409*^9, 3.735719353548642*^9}, {3.735719392298894*^9, 
   3.735719416511054*^9}, {3.735719497555133*^9, 3.735719537273676*^9}, {
   3.735719592769779*^9, 3.735719625304943*^9}, {3.7357196780277557`*^9, 
   3.735719686326309*^9}, {3.7357197947843113`*^9, 3.735719822298067*^9}, {
   3.735719884127285*^9, 3.7357199247853107`*^9}, {3.735721132581128*^9, 
   3.735721133081615*^9}, {3.735721363915739*^9, 3.735721364179134*^9}, {
   3.735726695402763*^9, 3.735726698498869*^9}, {3.735726747697275*^9, 
   3.735726753059869*^9}, {3.735726794462708*^9, 3.7357268690737877`*^9}, {
   3.735727125030479*^9, 3.7357271289400797`*^9}, 3.735727240090486*^9, {
   3.735727322024644*^9, 3.735727439204248*^9}, {3.735727531488043*^9, 
   3.735727533234445*^9}, {3.735727876203895*^9, 3.735727896687929*^9}, {
   3.735727935321433*^9, 3.735727935556568*^9}, {3.735728068248897*^9, 
   3.735728074221109*^9}, {3.735728158383741*^9, 3.735728188000258*^9}, {
   3.735728295639715*^9, 3.735728301355998*^9}, {3.735728520564519*^9, 
   3.735728565917007*^9}, {3.735732685883733*^9, 3.7357327199553137`*^9}, {
   3.735732927220196*^9, 3.735732933460103*^9}, {3.735733033406774*^9, 
   3.735733036811964*^9}, {3.735733073033697*^9, 3.735733083024085*^9}, {
   3.735733175144911*^9, 3.7357331783427267`*^9}, {3.7357333398658447`*^9, 
   3.735733344660844*^9}, {3.735733522820366*^9, 3.735733523368164*^9}, {
   3.7357336310291767`*^9, 3.735733640690185*^9}, {3.735733678805628*^9, 
   3.7357337180720177`*^9}, {3.7357338983841343`*^9, 3.735733903218956*^9}, {
   3.735734109801528*^9, 3.7357341365034113`*^9}, {3.735741890005826*^9, 
   3.735741909972117*^9}, {3.735741946231902*^9, 3.735741949884213*^9}, {
   3.735742029498406*^9, 3.735742081102229*^9}, {3.735742269769206*^9, 
   3.735742271063014*^9}, {3.735743464136899*^9, 3.735743464679233*^9}, {
   3.735743522386486*^9, 3.735743526703562*^9}, {3.735743581296644*^9, 
   3.735743585309366*^9}, {3.73580458883092*^9, 3.7358046435252457`*^9}, 
   3.735804691623199*^9, {3.735804831378655*^9, 3.7358048982425623`*^9}, {
   3.73580512087237*^9, 3.735805121445997*^9}, {3.735805159888372*^9, 
   3.73580519970903*^9}, {3.7358053811180058`*^9, 3.735805383158399*^9}, {
   3.735805768274838*^9, 3.73580577737649*^9}, {3.735805929315239*^9, 
   3.735805933355411*^9}, {3.735806281100123*^9, 3.735806368049004*^9}, {
   3.735806471244989*^9, 3.735806472746894*^9}, {3.73581247358628*^9, 
   3.735812476294729*^9}, {3.7358125487462254`*^9, 3.7358125497767*^9}, {
   3.735812979773386*^9, 3.735812992056946*^9}, {3.735813347300907*^9, 
   3.735813350457121*^9}, {3.73581340025764*^9, 3.73581341281347*^9}, {
   3.735814016089065*^9, 3.735814019811479*^9}, 3.7358142615075274`*^9, {
   3.735814367402109*^9, 3.73581437794496*^9}, {3.7358145642320633`*^9, 
   3.735814624907217*^9}, {3.735814679357678*^9, 3.735814684844995*^9}, {
   3.735815062710162*^9, 3.735815064364306*^9}, {3.735815171145624*^9, 
   3.7358151797098093`*^9}, {3.7358153932365017`*^9, 3.735815435162826*^9}, {
   3.735815523441153*^9, 3.735815524599227*^9}, {3.735815562232718*^9, 
   3.735815569190711*^9}, {3.735815627180587*^9, 3.7358156874104156`*^9}, 
   3.735815786798278*^9, {3.7358158390316553`*^9, 3.735815843862722*^9}, {
   3.735816121670751*^9, 3.735816126629168*^9}, {3.735816192481039*^9, 
   3.735816200247161*^9}, {3.735816356565494*^9, 3.7358163597313957`*^9}, {
   3.73581667293859*^9, 3.7358166782660418`*^9}, {3.7358167111300497`*^9, 
   3.7358167214636602`*^9}, {3.735816761488537*^9, 3.735816766415841*^9}, {
   3.735816816418783*^9, 3.7358169527942753`*^9}, {3.735817008154174*^9, 
   3.735817060432766*^9}, 3.73581720831743*^9, {3.735817263950378*^9, 
   3.735817330366252*^9}, {3.7358174111485*^9, 3.735817428882599*^9}, {
   3.7358174773052187`*^9, 3.7358174833812523`*^9}, {3.735817526663658*^9, 
   3.7358175325494213`*^9}, {3.735817597495611*^9, 3.735817701898464*^9}, {
   3.7358177964536448`*^9, 3.7358178370200872`*^9}, 3.735817871995126*^9, 
   3.7358179188658247`*^9, {3.735817966509768*^9, 3.735818004794694*^9}, {
   3.735818098078329*^9, 3.7358181416271467`*^9}, {3.735818223429832*^9, 
   3.735818244260207*^9}, {3.7358183563965683`*^9, 3.7358183909516*^9}, {
   3.735818456316058*^9, 3.735818513220664*^9}, 3.735818800335082*^9, {
   3.735859738383894*^9, 3.735859744665496*^9}, {3.7358599371269827`*^9, 
   3.73585996319131*^9}, {3.73586010388054*^9, 3.735860134344687*^9}, {
   3.7358603569024343`*^9, 3.73586038682241*^9}, {3.735910662138764*^9, 
   3.735910664829471*^9}, {3.735910968419992*^9, 3.735910975851788*^9}, {
   3.735911975769166*^9, 3.735911987809411*^9}, {3.73591201975207*^9, 
   3.73591202603618*^9}, {3.7359121451322947`*^9, 3.735912175089562*^9}, {
   3.7359122145848722`*^9, 3.735912216348415*^9}, {3.735912259858735*^9, 
   3.735912260002742*^9}, {3.735912298809732*^9, 3.735912333283143*^9}, {
   3.735937832442389*^9, 3.735937839265937*^9}, 3.735939309201009*^9, {
   3.735940178944549*^9, 3.73594019385548*^9}, {3.735940230725795*^9, 
   3.7359402358073072`*^9}, {3.7359403782352962`*^9, 3.735940380946807*^9}, {
   3.736005437469408*^9, 3.736005449448138*^9}, {3.736005570657346*^9, 
   3.7360055892574*^9}, {3.736010122972484*^9, 3.736010152515066*^9}, {
   3.736010233371513*^9, 3.736010241061075*^9}, {3.736010665677745*^9, 
   3.736010668296997*^9}, {3.736011325544752*^9, 3.736011345252757*^9}, {
   3.73601138633212*^9, 3.7360113926497803`*^9}, {3.7360114341462927`*^9, 
   3.736011439334531*^9}, {3.7360115496577177`*^9, 3.736011568888481*^9}, {
   3.7360116578768673`*^9, 3.736011680170022*^9}, {3.736011715652236*^9, 
   3.7360117293286467`*^9}, {3.736013169296871*^9, 3.736013188073351*^9}, {
   3.736013671451499*^9, 3.736013675143322*^9}, 3.736014050016932*^9, {
   3.7360141085367393`*^9, 3.736014113510562*^9}, {3.736014512263171*^9, 
   3.7360145175522337`*^9}, {3.736014653988864*^9, 3.736014757830244*^9}, {
   3.736014959166634*^9, 3.736014964794971*^9}, {3.736015250548635*^9, 
   3.736015257131742*^9}, {3.736018915644649*^9, 3.7360189167997017`*^9}, {
   3.736025823053631*^9, 3.7360258450240793`*^9}, {3.736060853173761*^9, 
   3.736060885809679*^9}, {3.736060928747531*^9, 3.736060954402708*^9}, 
   3.7360624576368237`*^9, 3.736062651519918*^9, {3.7360634332663393`*^9, 
   3.736063444784256*^9}, 3.736063502540098*^9, {3.736063551678973*^9, 
   3.736063556947356*^9}, 3.7360702400718403`*^9, {3.736070768051195*^9, 
   3.736070873221291*^9}, {3.736071085862277*^9, 3.736071135330772*^9}, {
   3.736071185979178*^9, 3.736071190359941*^9}, {3.736071259779582*^9, 
   3.7360713303843117`*^9}, {3.736071415690696*^9, 3.736071424880039*^9}, {
   3.7360715318347073`*^9, 3.736071546084262*^9}, {3.736072470865555*^9, 
   3.736072475481205*^9}, {3.736072658709848*^9, 3.736072693352949*^9}, {
   3.736073022829536*^9, 3.7360730596863337`*^9}, {3.736073441842863*^9, 
   3.7360734469333982`*^9}, {3.736073619638742*^9, 3.736073620418756*^9}, {
   3.736073699674665*^9, 3.7360737160485067`*^9}, {3.7360738297365103`*^9, 
   3.7360738374666567`*^9}, 3.736074089372416*^9, {3.7360741324162693`*^9, 
   3.736074134322857*^9}, {3.736074196529546*^9, 3.736074209498136*^9}, {
   3.7360747093005857`*^9, 3.736074722081999*^9}, {3.736075568606811*^9, 
   3.736075578537171*^9}, {3.736161217233898*^9, 3.736161219415326*^9}, {
   3.736161278142199*^9, 3.736161286567848*^9}, 3.7361613839157457`*^9, 
   3.738338255977549*^9, 3.738338299649315*^9, {3.7389501841151667`*^9, 
   3.738950194219404*^9}, 
   3.754143113809683*^9},ExpressionUUID->"67dbbb11-4224-404d-b1c5-\
34c09749612a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"drawToy", "[", 
    RowBox[{"m_", ",", "a_", ",", "b_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"edges", ",", "last"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"last", " ", "=", " ", 
       RowBox[{"1", "+", "b", "+", 
        RowBox[{"m", " ", "a"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"edges", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{"0", "\[Rule]", "1"}], "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"1", "\[Rule]", 
           RowBox[{
            RowBox[{"k", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "2"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{"a", "-", "1"}], ")"}]}], "+", "2", "+", "i"}], 
             "\[Rule]", 
             RowBox[{
              RowBox[{"k", 
               RowBox[{"(", 
                RowBox[{"a", "-", "1"}], ")"}]}], "+", "3", "+", "i"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "0", ",", 
              RowBox[{"a", "-", "4"}]}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"k", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "a", "-", "1"}], 
           "\[Rule]", "last"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"m", "-", "1"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", 
        RowBox[{"{", 
         RowBox[{"0", "->", 
          RowBox[{
           RowBox[{"m", 
            RowBox[{"(", 
             RowBox[{"a", "-", "1"}], ")"}]}], "+", "2"}]}], "}"}]}], "]"}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"edges", ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"m", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "2", "+", "k"}], 
           "\[Rule]", 
           RowBox[{
            RowBox[{"m", 
             RowBox[{"(", 
              RowBox[{"a", "-", "1"}], ")"}]}], "+", "3", "+", "k"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "0", ",", 
            RowBox[{"b", "-", "3"}]}], "}"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"b", ">", "1"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"edges", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"m", 
              RowBox[{"(", 
               RowBox[{"a", "-", "1"}], ")"}]}], "+", "b"}], "\[Rule]", 
            "last"}], "}"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"edges", " ", "=", 
       RowBox[{"Flatten", "[", "edges", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rotate", "[", 
       RowBox[{
        RowBox[{"Graph", "[", 
         RowBox[{"edges", ",", 
          RowBox[{"VertexLabels", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"0", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"\"\<S\>\"", ",", 
                  RowBox[{
                   RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", 
                "Above"}], "]"}]}], ",", 
             RowBox[{"last", "\[Rule]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"Rotate", "[", 
                 RowBox[{"\"\<T\>\"", ",", 
                  RowBox[{
                   RowBox[{"-", "90"}], " ", "Degree"}]}], "]"}], ",", 
                "Below"}], "]"}]}]}], "}"}]}], ",", 
          RowBox[{"EdgeStyle", "\[Rule]", 
           RowBox[{"Arrowheads", "[", "0.071", "]"}]}]}], "]"}], ",", 
        RowBox[{"90", " ", "Degree"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.736150733396758*^9, 3.73615086958261*^9}, {
   3.736150901515905*^9, 3.736151333753436*^9}, {3.736151403219352*^9, 
   3.736151447686452*^9}, {3.73615862286281*^9, 3.7361587077552767`*^9}, {
   3.736158743203849*^9, 3.736158780245133*^9}, {3.7361589963634987`*^9, 
   3.736158996791546*^9}, {3.736159115116067*^9, 3.7361591232155247`*^9}, 
   3.736159165482774*^9, {3.736159299455698*^9, 3.7361593090363007`*^9}, {
   3.736159372886153*^9, 3.736159373734783*^9}, {3.7361595724511003`*^9, 
   3.736159774327341*^9}, {3.736159836390109*^9, 3.736159847899737*^9}, {
   3.7361600128802633`*^9, 3.736160015393713*^9}, 3.736160167105945*^9, 
   3.73616036004422*^9, 3.736161198826997*^9, {3.7361612781424723`*^9, 
   3.736161286568121*^9}, {3.736164091907095*^9, 3.736164179827381*^9}, {
   3.736236523154957*^9, 3.736236536771563*^9}, 3.738338255979813*^9, 
   3.738338299651761*^9, {3.739088275721196*^9, 3.7390883196159983`*^9}, {
   3.7390883732647552`*^9, 3.739088387366384*^9}, {3.739088459247458*^9, 
   3.739088535968131*^9}, {3.752754166225984*^9, 3.7527542917244577`*^9}, {
   3.752754399762089*^9, 3.7527544932311573`*^9}, {3.752754818187324*^9, 
   3.7527548928554697`*^9}, 3.754143113810025*^9, {3.7559740837199802`*^9, 
   3.755974087030645*^9}, {3.755974121192182*^9, 3.7559741385561457`*^9}, {
   3.755974178653069*^9, 3.755974179679907*^9}, {3.7559742297682037`*^9, 
   3.7559742300681458`*^9}, {3.755974414828931*^9, 3.7559744728444843`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"c621ef94-98d9-45d6-b7a3-7b7b74d02def"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.755974115638117*^9, 
  3.755974116595592*^9}},ExpressionUUID->"a231694b-a6eb-4848-a822-\
82587e85148d"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "buildPlot1", ",", "buildPlot2", ",", " ", "buildBezierCoefs", ",", 
   "selectPlots"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colors", "=", 
   RowBox[{"ColorData", "[", 
    RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colors", "[", 
    RowBox[{"[", "3", "]"}], "]"}], "=", 
   RowBox[{"colors", "[", 
    RowBox[{"[", "6", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectionNames", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "\"\<lowest-order\>\"", ",", "\"\<uniform\>\"", ",", "\"\<bimodal\>\"", 
     ",", "\"\<threshold\>\"", ",", "\"\<bounds\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selections", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"selectionNames", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"FontColor", "->", 
        RowBox[{"colors", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ttips", "[", "name_", "]"}], ":=", 
   RowBox[{"Switch", "[", 
    RowBox[{
    "name", ",", "\[IndentingNewLine]", "\"\<binomial\>\"", ",", 
     "\"\<a binomial distribution with parameters N and p. Illustrates \
fitting an inherently discrete function.\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "\"\<ensemble\>\"", ",", 
       "\"\<the sum of N Bernoulli distributions (representing an ensemble of \
classifiers) with uniformly distributed p parameters in the specified range\>\
\"", ","}], "*)"}], "\[IndentingNewLine]", "\"\<pole\>\"", ",", 
     "\"\<N uniformly-sampled values from a function with a pole in the \
complex plane. Illustrates fitting samples from a non-polynomial \
function.\>\"", ",", "\[IndentingNewLine]", "\"\<network reliability\>\"", 
     ",", "\"\<the two terminal Moore-Shannon network reliability for the toy \
network illustrated. \\nI.e., the probability of getting a message from \
Source to Terminus when the probability of transmitting over each edge is x\>\
\"", ",", "\[IndentingNewLine]", "\"\<Ising\>\"", ",", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<the partition function of a two-dimensional Ising model with N \
sites on a square in an external field:\\n ``(T) =`` n(s,f) exp{`` [s+``f]}\>\
\"", ",", 
       StyleBox[
        RowBox[{"Subscript", "[", 
         RowBox[{"Z", ",", "\"\<N,H/J\>\""}], "]"}], "InlineFormula"], 
       StyleBox[",", "InlineFormula"], 
       "\"\<\!\(\*UnderoverscriptBox[\(\[Sum]\), \(s, f = 0\), \(N\)]\)\>\"", 
       ",", 
       StyleBox[
        RowBox[{"2", 
         RowBox[{"J", "/", 
          RowBox[{"(", "kT", ")"}]}]}], "InlineFormula"], 
       StyleBox[",", "InlineFormula"], 
       StyleBox[
        RowBox[{"H", "/", "J"}], "InlineFormula"]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"condNumber", "[", "m_", "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"First", "@", "#"}], "/", 
      RowBox[{"Last", "@", "#"}]}], "&"}], "@", 
    RowBox[{"SingularValueList", "[", "m", "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"const", "[", "x_", "]"}], " ", ":=", " ", "x"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildPlot1", "[", 
     RowBox[{
      RowBox[{"leftm_Integer", "?", "NonNegative"}], ",", 
      RowBox[{"rightm_Integer", "?", "NonNegative"}], ",", "vals_List", ",", 
      "func_", ",", "alpha_", ",", "alphabar_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "numPts", ",", "maxDegree", ",", "leftTaylor", ",", "rightTaylor", ",",
         "p1", ",", "curves"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"numPts", "=", 
        RowBox[{"Length", "[", "vals", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"maxDegree", "=", 
        RowBox[{"numPts", "-", "1"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"leftTaylor", " ", "=", 
        RowBox[{"getTaylor", "[", 
         RowBox[{"alpha", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"rightTaylor", " ", "=", 
        RowBox[{"getTaylor", "[", 
         RowBox[{"alphabar", "[", 
          RowBox[{"[", 
           RowBox[{"1", ";;", "rightm"}], "]"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"curves", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"curves", ",", 
         RowBox[{"Plot", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"func", "[", "x", "]"}], ",", 
             RowBox[{"leftTaylor", "[", "x", "]"}], ",", 
             RowBox[{"rightTaylor", "[", 
              RowBox[{"1", "-", "x"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Purple", ",", "Blue", ",", "Red", ",", "Thick"}], 
             "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"LineLegend", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"Purple", ",", "Blue", ",", "Red"}], "}"}], ",", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"\"\<function to approximate and \>\"", "<>", 
                   RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                   "\"\< sampled values\>\""}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                   "\"\< term Taylor series at 0\>\""}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                   "\"\< term Taylor series at 1\>\""}]}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
               "]"}], ",", "Above"}], "]"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1.0"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"leftm", "+", "rightm"}], "\[GreaterEqual]", 
          RowBox[{"maxDegree", "+", "1"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"ListPlot", "[", 
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"k", "/", 
                  RowBox[{"(", "maxDegree", ")"}]}], ",", 
                 RowBox[{"vals", "[", 
                  RowBox[{"[", 
                   RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", "0", ",", "maxDegree"}], "}"}]}], "]"}], 
             ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"Purple", ",", 
                RowBox[{"PointSize", "[", 
                 RowBox[{"1", "/", 
                  RowBox[{"(", 
                   RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
            "]"}]}], "]"}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "0", ",", 
                  RowBox[{"Min", "[", 
                   RowBox[{
                    RowBox[{"leftm", "-", "1"}], ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}]}], "}"}]}], 
               "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Max", "[", 
                   RowBox[{"leftm", ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], ",", 
                  "maxDegree"}], "}"}]}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Red", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"curves", ",", 
            RowBox[{"ListPlot", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"k", "/", 
                   RowBox[{"(", "maxDegree", ")"}]}], ",", 
                  RowBox[{"vals", "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], " ", "]"}], "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"leftm", "-", "1"}], ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "+", "1"}], 
                  ",", 
                  RowBox[{
                   RowBox[{"Max", "[", 
                    RowBox[{"leftm", ",", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "-", "1"}]}], 
                 "}"}]}], "]"}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"Purple", ",", 
                 RowBox[{"PointSize", "[", 
                  RowBox[{"1", "/", 
                   RowBox[{"(", 
                    RowBox[{"4", "maxDegree"}], ")"}]}], "]"}]}], "}"}]}]}], 
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "curves"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"returns", " ", "a", " ", 
     RowBox[{"matrix", ".", " ", "Each"}], " ", "row", " ", "contains", " ", 
     "a", " ", "possible", " ", "set", " ", "of", " ", "Bernstein", " ", 
     RowBox[{"coefficients", ":", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"dof", "\[LessEqual]", "0"}], ")"}], " ", "Row", " ", "1"}], 
      ":", " ", 
      RowBox[{"all", " ", "the", " ", "known", " ", "coefficients"}]}]}], ",",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"or", " ", "their", " ", "mean", " ", "if", " ", "dof"}], " ", 
      "\[LessEqual]", " ", 
      RowBox[{"0", "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{"dof", ">", "0"}], ")"}], " ", "Row", " ", "2"}]}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "uniformly", " ", "distributed", 
      " ", "across", " ", "unknown", " ", "coefficients", 
      "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "2"}], ")"}], " ", "Row", " ", "3"}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "uniformly", " ", "distributed", 
      " ", "to", " ", "first", " ", "and", " ", "last", " ", "unknown", " ", 
      "coefficients", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "1"}], ")"}], " ", "Row", " ", "4"}], ":", " ", 
     RowBox[{
     "unknown", " ", "mass", " ", "is", " ", "all", " ", "placed", " ", "in", 
      " ", "unknown", " ", "coefficient", " ", "near", " ", "center", " ", 
      "of", " ", "unknown", " ", "range", "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{"dof", ">", "0"}], ")"}], " ", "Row", " ", "5"}], ":", " ", 
     RowBox[{"exact", " ", "coefficients"}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"buildBezierCoefs", "[", 
     RowBox[{
     "leftm_", ",", "rightm_", ",", "numPts_", ",", " ", "t2b_", ",", 
      "alpha_", ",", "alphabar_", ",", "d2b_", ",", "vals_", ",", 
      "matchData_", ",", "isMonotonic_", ",", "isDiscrete_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "dof", ",", " ", "leftCoefs", ",", "rightCoefs", ",", "allCoefs", ",", 
        "loBound", ",", "upBound", ",", "sumKnownCoefs"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dof", " ", "=", " ", 
        RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{"matchData", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"leftCoefs", " ", "=", 
           RowBox[{
            RowBox[{"d2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "leftm"}], ",", 
               RowBox[{"1", ";;", "leftm"}]}], "]"}], "]"}], ".", 
            RowBox[{"vals", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "leftm"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rightCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"d2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "rightm"}], ",", 
               RowBox[{"1", ";;", "rightm"}]}], "]"}], "]"}], ".", 
            RowBox[{"vals", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"-", "1"}], ";;", 
               RowBox[{"-", "rightm"}], ";;", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"leftCoefs", " ", "=", 
           RowBox[{
            RowBox[{"t2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "leftm"}], ",", 
               RowBox[{"1", ";;", "leftm"}]}], "]"}], "]"}], ".", 
            RowBox[{"alpha", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "leftm"}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"rightCoefs", " ", "=", " ", 
           RowBox[{
            RowBox[{"t2b", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"1", ";;", "rightm"}], ",", 
               RowBox[{"1", ";;", "rightm"}]}], "]"}], "]"}], ".", 
            RowBox[{"alphabar", "[", 
             RowBox[{"[", 
              RowBox[{"1", ";;", "rightm"}], "]"}], "]"}]}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"sumKnownCoefs", " ", "=", " ", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"leftCoefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{"rightCoefs", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"dof", "<=", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"allCoefs", "=", 
           RowBox[{"Switch", "[", 
            RowBox[{"leftm", ",", "\[IndentingNewLine]", "0", ",", " ", 
             RowBox[{"{", 
              RowBox[{"Reverse", "[", "rightCoefs", "]"}], "}"}], ",", 
             "\[IndentingNewLine]", "numPts", ",", 
             RowBox[{"{", "leftCoefs", "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"numPts", "-", "rightm"}], ",", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{"leftCoefs", ",", 
                 RowBox[{"Reverse", "[", "rightCoefs", "]"}]}], "}"}], "]"}], 
              "}"}], ",", "\[IndentingNewLine]", "_", ",", 
             "\[IndentingNewLine]", 
             RowBox[{"{", 
              RowBox[{"Flatten", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"leftCoefs", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ";;", 
                    RowBox[{"numPts", "-", "rightm"}]}], "]"}], "]"}], ",", 
                 RowBox[{"0.5", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"leftCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"numPts", "-", "rightm", "+", "1"}], ";;", 
                    "leftm"}], "]"}], "]"}], "+", 
                    RowBox[{"rightCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{"rightm", ";;", 
                    RowBox[{"numPts", "-", "leftm", "+", "1"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], ")"}]}], ",", 
                 RowBox[{"rightCoefs", "[", 
                  RowBox[{"[", " ", 
                   RowBox[{
                    RowBox[{"numPts", "-", "leftm"}], ";;", "1", ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], 
              "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"allCoefs", " ", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "default", " ", "interpolation", " ", "is", " ", "linear", " ", 
              "across", " ", "missing", " ", "coefs"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"loBound", " ", "=", " ", 
              RowBox[{"leftCoefs", "[", 
               RowBox[{"[", "leftm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"rightCoefs", "[", 
               RowBox[{"[", "rightm", "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"loBound", " ", "+", " ", 
                  RowBox[{"k", " ", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"upBound", " ", "-", " ", "loBound"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"dof", "+", "1"}], ")"}]}]}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", " ", 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"0.5", " ", 
                    RowBox[{"(", 
                    RowBox[{"upBound", "+", "loBound"}], ")"}]}], ",", 
                    "dof"}], "]"}], "}"}], "]"}]}], "]"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"loBound", ",", " ", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}], "]"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"upBound", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", ",",
             "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"upBound", " ", "=", " ", 
              RowBox[{"1", "-", 
               RowBox[{"sumKnownCoefs", "/", "numPts"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"allCoefs", ",", " ", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"upBound", "/", "dof"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", "dof"}], "}"}]}], "]"}]}], "]"}], ";", 
             RowBox[{"(*", 
              RowBox[{"uniformly", " ", "distributed"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "2"}], ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"0.5", " ", "upBound"}], ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", 
                    RowBox[{"dof", "-", "2"}]}], "]"}], ",", " ", 
                    RowBox[{"0.5", " ", "upBound"}]}], "}"}], "]"}]}], "]"}], 
               RowBox[{"(*", 
                RowBox[{"bimodal", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"allCoefs", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], " ", 
              RowBox[{"(*", 
               RowBox[{
               "users", " ", "of", " ", "allCoefs", " ", "expect", " ", "it", 
                " ", "to", " ", "have", " ", "entries", " ", "for", " ", 
                "the", " ", "bimodal", " ", "and", " ", "spike", " ", 
                "densities"}], "*)"}], "\[IndentingNewLine]", "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"dof", ">", "1"}], ",", 
               RowBox[{"(*", 
                RowBox[{"spike", " ", "density"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"allCoefs", ",", " ", 
                 RowBox[{"Flatten", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}], "-", "1"}]}], "]"}], ",", 
                    "upBound", ",", 
                    RowBox[{"Table", "[", 
                    RowBox[{"0", ",", " ", 
                    RowBox[{"dof", "-", 
                    RowBox[{"Floor", "[", 
                    RowBox[{"0.5", "dof"}], "]"}]}]}], "]"}]}], "}"}], 
                  "]"}]}], "]"}], "\[IndentingNewLine]", ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"allCoefs", ",", " ", 
                  RowBox[{"allCoefs", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"allCoefs", " ", "=", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"leftCoefs", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                RowBox[{"allCoefs", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ",", 
                RowBox[{"rightCoefs", "[", 
                 RowBox[{"[", 
                  RowBox[{"rightm", ";;", "1", ";;", 
                   RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", 
               RowBox[{"Length", "[", "allCoefs", "]"}]}], "}"}]}], "]"}]}], 
          ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"allCoefs", ",", 
         RowBox[{"d2b", " ", ".", " ", "vals"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"isDiscrete", "||", " ", "matchData"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"allCoefs", ",", 
            RowBox[{"d2b", " ", ".", " ", "vals"}]}], "]"}], ";"}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"allCoefs", ",", 
            RowBox[{"t2b", " ", ".", " ", "alpha"}]}], "]"}], ";"}]}], "  ", 
        RowBox[{"(*", " ", 
         RowBox[{
         "alpha", " ", "is", " ", "only", " ", "correct", " ", "if", " ", 
          "function", " ", "is", " ", "continuous"}], " ", "*)"}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "allCoefs"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"buildPlot2", "[", 
    RowBox[{
    "leftm_", ",", "rightm_", ",", "vals_", ",", "func_", ",", "allCoefs_", 
     ",", "show_", ",", "matchData_", ",", "isMonotonic_", ",", "range_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "maxDegree", ",", "numPts", ",", "curves", ",", "dof", ",", "includes", 
       ",", "numChoices", ",", "bezier", ",", "colors", ",", "bounds", ",", 
       "minCoef", ",", " ", "maxCoef", ",", "markerSize", ",", "numCurves", 
       ",", "sumKnownCoefs"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"curves", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numPts", "=", 
       RowBox[{"Length", "[", "vals", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"maxDegree", "=", 
       RowBox[{"numPts", "-", "1"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"markerSize", " ", "=", " ", 
       RowBox[{"200", "/", "maxDegree"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"numChoices", " ", "=", " ", 
       RowBox[{"Length", "[", "selectionNames", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"numCurves", "=", 
       RowBox[{"Length", "[", "allCoefs", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"includes", " ", "=", " ", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"StringCount", "[", 
           RowBox[{
            RowBox[{"ToString", "[", "show", "]"}], ",", 
            RowBox[{"selectionNames", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ">", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"colors", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", 
          RowBox[{
           RowBox[{"Options", "[", 
            RowBox[{"selections", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", "FontColor"}], "]"}],
          ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"dof", " ", "=", " ", 
       RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{"matchData", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"func", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Purple", "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"PointLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Purple", ",", "Blue", ",", "Red", ",", "Purple"}],
                    "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\[FilledSquare]\>\"", ",", "\"\<\[FilledSquare]\>\"",
                     ",", "\"\<\[FilledSquare]\>\"", ",", 
                    "\"\<\[FilledSquare]\>\""}], "}"}]}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<function to approximate and its \>\"", "<>", 
                    RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                    "\"\< Bezier control points\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                    "\"\< Bezier control points from data on left\>\""}], ",",
                     "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                    "\"\< Bezier control points from data on right\>\""}]}], 
                   RowBox[{"(*", 
                    RowBox[{",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"leftm", "+", "rightm"}], "]"}], " ", "<>", 
                    "\"\< degree Bezier curve from estimated control points\>\
\""}]}], "*)"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
                 "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"func", "[", "x", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", " ", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"{", "Purple", "}"}]}], ",", 
             RowBox[{"PlotLegends", "\[Rule]", "\[IndentingNewLine]", 
              RowBox[{"Placed", "[", 
               RowBox[{
                RowBox[{"PointLegend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Purple", ",", "Blue", ",", "Red", ",", "Purple"}],
                    "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\[FilledSquare]\>\"", ",", "\"\<\[FilledSquare]\>\"",
                     ",", "\"\<\[FilledSquare]\>\"", ",", 
                    "\"\<\[FilledSquare]\>\""}], "}"}]}], ",", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"\"\<function to approximate and its \>\"", "<>", 
                    RowBox[{"ToString", "[", "numPts", "]"}], "<>", 
                    "\"\< Bezier control points\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "leftm", "]"}], "<>", 
                    "\"\< Bezier control points from Taylor series at \
0\>\""}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", "rightm", "]"}], " ", "<>", 
                    "\"\< Bezier control points from Taylor series at \
1\>\""}]}], 
                   RowBox[{"(*", 
                    RowBox[{",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"leftm", "+", "rightm"}], "]"}], " ", "<>", 
                    "\"\< degree Bezier curve from known control \
points\>\""}]}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"\<Column\>\""}]}], 
                 "]"}], ",", "Above"}], "]"}]}]}], "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", "k", ")"}], "/", "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"numCurves", ",", 
                 RowBox[{"k", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", "maxDegree"}], "}"}]}], "]"}], ",", 
          " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], "}"}]}], 
          ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Purple", "}"}]}]}], 
         RowBox[{"(*", 
          RowBox[{",", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", "range"}], "}"}]}]}], 
          "*)"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"k", "-", "1"}], ")"}], "/", "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "k"}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "leftm"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], "}"}]}], 
          ",", " ", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Blue", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"curves", ",", 
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"maxDegree", "-", "k", "+", "1"}], ")"}], "/", 
               "maxDegree"}], ",", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "k"}]}], "]"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "1", ",", "rightm"}], "}"}]}], "]"}], ",", " ", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<\[FilledSquare]\>\"", ",", " ", "markerSize"}], 
            "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", "Red", "}"}]}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"dof", "<=", "0"}], " ", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bezier", "=", " ", 
          RowBox[{"BezierFunction", "[", 
           RowBox[{"vec2pts", "[", 
            RowBox[{"allCoefs", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"bezier", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Blend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
                  RowBox[{"ramp", "[", 
                   RowBox[{"#1", ",", "1", ",", "1", ",", "numPts"}], "]"}]}],
                  "]"}], "&"}], ")"}]}]}], "]"}]}], "]"}], ";"}], 
        "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bezier", "=", " ", 
          RowBox[{"BezierFunction", "[", 
           RowBox[{"vec2pts2", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"-", "rightm"}], ";;", 
                RowBox[{"-", "1"}]}], "]"}], "]"}], ",", "numPts"}], "]"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"ParametricPlot", "[", 
            RowBox[{
             RowBox[{"bezier", "[", "t", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"ColorFunction", "\[Rule]", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Blend", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"Blue", ",", "Red"}], "}"}], ",", 
                  RowBox[{"ramp", "[", 
                   RowBox[{"#1", ",", "leftm", ",", "rightm", ",", "numPts"}],
                    "]"}]}], "]"}], "&"}], ")"}]}]}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Table", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"bezier", "  ", "=", " ", 
             RowBox[{"getBezier", "[", 
              RowBox[{"allCoefs", "[", 
               RowBox[{"[", 
                RowBox[{"i", "-", "1"}], "]"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"curves", ",", 
              RowBox[{"ParametricPlot", "[", 
               RowBox[{
                RowBox[{"bezier", "[", "t", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "1"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"curves", ",", 
              RowBox[{"ListPlot", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", "k", ")"}], "/", "maxDegree"}], ",", 
                    RowBox[{"allCoefs", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", 
                    RowBox[{"k", "+", "1"}]}], "]"}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"k", ",", "leftm", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "1"}]}], "}"}]}], "]"}],
                 ",", " ", 
                RowBox[{"PlotMarkers", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[FilledSquare]\>\"", ",", "markerSize"}], 
                  "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"colors", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], "}"}]}]}], "]"}]}], "]"}], 
            ";"}], "\[IndentingNewLine]", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "2", ",", 
             RowBox[{"numChoices", "-", "1"}]}], "}"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"compute", " ", "bounds"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"sumKnownCoefs", " ", "=", " ", 
          RowBox[{
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", "i"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "leftm"}], "}"}]}], "]"}], "+", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", 
                RowBox[{"-", "i"}]}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "rightm"}], "}"}]}], "]"}]}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"isMonotonic", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"minCoef", " ", "=", 
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", "leftm"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"maxCoef", " ", "=", 
             RowBox[{"allCoefs", "[", 
              RowBox[{"[", 
               RowBox[{"numCurves", ",", 
                RowBox[{"-", "rightm"}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bounds", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"maxCoef", ",", 
                    RowBox[{"leftm", "+", "1", "+", "dof", "-", "k"}]}], 
                   "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"leftm", "+", "1"}], ",", 
                 RowBox[{"leftm", "+", "dof", "+", "1"}]}], "}"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"minCoef", " ", "=", " ", "0"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"maxCoef", " ", "=", " ", 
             RowBox[{"1", "-", " ", 
              RowBox[{"sumKnownCoefs", "/", "numPts"}]}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"bounds", " ", "=", " ", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ";;", "leftm"}], "]"}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"k", "-", "leftm", "-", "1"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", "maxCoef", ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"Table", "[", 
                   RowBox[{"minCoef", ",", 
                    RowBox[{"leftm", "+", "dof", "-", "k"}]}], "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"allCoefs", "[", 
                    RowBox[{"[", "numCurves", "]"}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{
                    RowBox[{"-", "rightm"}], ";;", 
                    RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"k", ",", 
                 RowBox[{"leftm", "+", "1"}], ",", 
                 RowBox[{"leftm", "+", "dof"}]}], "}"}]}], "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"bezier", "=", " ", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"getBezier", "[", 
             RowBox[{"bounds", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", 
              RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}]}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"AppendTo", "[", 
            RowBox[{"curves", ",", 
             RowBox[{"Plot", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{"bezier", "[", 
                    RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"k", ",", 
                   RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
               ",", 
               RowBox[{"{", 
                RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
               RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
               RowBox[{"Mesh", "\[Rule]", "All"}], ",", 
               RowBox[{"MeshStyle", "\[Rule]", "Red"}], ",", 
               RowBox[{
               "PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}], 
              "]"}]}], "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", 
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"bezier", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
             RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
             RowBox[{"PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}],
             "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"curves", ",", 
           RowBox[{"Plot", "[", " ", 
            RowBox[{
             RowBox[{"Min", "[", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"bezier", "[", 
                   RowBox[{"[", "k", "]"}], "]"}], "[", "x", "]"}], "[", 
                 RowBox[{"[", "2", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", 
                  RowBox[{"Length", "[", "bounds", "]"}]}], "}"}]}], "]"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"colors", "[", 
               RowBox[{"[", "numChoices", "]"}], "]"}]}], ",", 
             RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
             RowBox[{"PlotPoints", "\[Rule]", "1000"}], ",", 
             RowBox[{"PerformanceGoal", " ", "->", " ", "\"\<Quality\>\""}]}],
             "]"}]}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "curves", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "curves"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectPlots", "[", 
   RowBox[{
   "curves_", ",", "show_", ",", "numPts_", ",", "leftm_", ",", "rightm_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"includes", ",", "dof", ",", "selectedCurves"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dof", " ", "=", " ", 
      RowBox[{"numPts", "-", "leftm", "-", "rightm"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"includes", " ", "=", " ", "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"StringCount", "[", 
          RowBox[{
           RowBox[{"ToString", "[", "show", "]"}], ",", 
           RowBox[{"selectionNames", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ">", "0"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"selectedCurves", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"selectedCurves", ",", 
       RowBox[{"curves", "[", 
        RowBox[{"[", 
         RowBox[{"1", ";;", "4"}], "]"}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"dof", "\[LessEqual]", "0"}], " ", "||", 
        RowBox[{"includes", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"selectedCurves", ",", 
          RowBox[{"curves", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "]"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"dof", ">", "0"}], " ", ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"includes", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"selectedCurves", ",", 
              RowBox[{"curves", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"6", "+", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "2"}], ")"}]}]}], ";;", 
                 RowBox[{"7", "+", 
                  RowBox[{"2", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "2"}], ")"}]}]}]}], "]"}], "]"}]}], 
             "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "2", ",", 
            RowBox[{"Length", "[", "selectionNames", "]"}]}], "}"}]}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Flatten", "[", "selectedCurves", "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.738393920518058*^9, 3.738393948210528*^9}, 
   3.738394007897456*^9, {3.738394075270763*^9, 3.738394099902006*^9}, {
   3.738394144209393*^9, 3.7383942353855553`*^9}, 3.738394737004208*^9, {
   3.738394849602111*^9, 3.738394933669758*^9}, {3.738394969518997*^9, 
   3.738394995790154*^9}, {3.738395135102264*^9, 3.7383951965184507`*^9}, {
   3.738395274180026*^9, 3.7383953227225657`*^9}, {3.738395365048705*^9, 
   3.73839539423917*^9}, {3.738395430365643*^9, 3.738395442479225*^9}, {
   3.738402479138516*^9, 3.7384025141349287`*^9}, {3.738402573698937*^9, 
   3.7384026484459667`*^9}, {3.738402678869507*^9, 3.7384027892998543`*^9}, {
   3.738402819536195*^9, 3.7384032555788918`*^9}, {3.738403299780388*^9, 
   3.7384033167795057`*^9}, {3.738403350392351*^9, 3.7384035059370537`*^9}, {
   3.73840354792566*^9, 3.738403605488063*^9}, {3.738403664916753*^9, 
   3.738403677222744*^9}, {3.738403721419393*^9, 3.738403846138195*^9}, {
   3.7384038837838163`*^9, 3.738403886018195*^9}, {3.738403954075437*^9, 
   3.7384039542203827`*^9}, {3.738404135600189*^9, 3.7384042338901377`*^9}, {
   3.73840426860417*^9, 3.738404268997485*^9}, {3.738404413702075*^9, 
   3.7384044243547792`*^9}, {3.738404476811944*^9, 3.738404478161545*^9}, {
   3.73840453593426*^9, 3.73840455822473*^9}, {3.738404592114633*^9, 
   3.73840460272012*^9}, {3.738404639656123*^9, 3.738404648380766*^9}, {
   3.738404777786894*^9, 3.738404796668247*^9}, {3.7384048493393373`*^9, 
   3.7384048555400667`*^9}, {3.7384049632258377`*^9, 
   3.7384050020870743`*^9}, {3.738405042346532*^9, 3.738405050227776*^9}, {
   3.738405091150793*^9, 3.738405105025086*^9}, {3.738405139137663*^9, 
   3.738405139620138*^9}, {3.7384051849480267`*^9, 3.7384051900679398`*^9}, {
   3.738405311392645*^9, 3.738405312093958*^9}, 3.738405369756156*^9, {
   3.7384054073321123`*^9, 3.7384054136213503`*^9}, {3.738405451509445*^9, 
   3.738405461394862*^9}, {3.738405514115324*^9, 3.738405523117524*^9}, {
   3.738405650805464*^9, 3.7384057295565243`*^9}, 3.738405841126998*^9, {
   3.738405946796929*^9, 3.738405954257945*^9}, {3.738406027462982*^9, 
   3.738406084483848*^9}, {3.73840612380186*^9, 3.7384061417964363`*^9}, {
   3.738406178429982*^9, 3.7384062062805*^9}, {3.738406247794858*^9, 
   3.7384063470722847`*^9}, {3.7384063965767527`*^9, 3.738406424207717*^9}, {
   3.738406512698633*^9, 3.73840660290737*^9}, {3.738406633301406*^9, 
   3.73840666337291*^9}, 3.7384068295667133`*^9, {3.738407222623528*^9, 
   3.7384073401693087`*^9}, 3.738407370241708*^9, {3.7384074471177053`*^9, 
   3.738407451610314*^9}, {3.738407525766396*^9, 3.73840754429991*^9}, {
   3.738407655767576*^9, 3.738407778982389*^9}, {3.738407809739491*^9, 
   3.738407810456977*^9}, {3.738407865794011*^9, 3.7384078891206217`*^9}, {
   3.738408633269781*^9, 3.738408675424871*^9}, {3.738408752015463*^9, 
   3.738408818679058*^9}, {3.738408852625046*^9, 3.738408926650309*^9}, {
   3.738409069314024*^9, 3.7384091294899693`*^9}, {3.738409163083316*^9, 
   3.738409259263289*^9}, {3.738409393077001*^9, 3.738409396039784*^9}, {
   3.738409537196699*^9, 3.73840957598693*^9}, {3.738409652942072*^9, 
   3.7384097458094063`*^9}, {3.738409785249728*^9, 3.738409843606824*^9}, {
   3.7384098787739563`*^9, 3.738409879608303*^9}, {3.738409932129282*^9, 
   3.738409997698493*^9}, {3.738410062615913*^9, 3.738410104628665*^9}, {
   3.738410217516584*^9, 3.738410226334524*^9}, 3.738410278663039*^9, {
   3.738410368329689*^9, 3.7384104102040052`*^9}, {3.738410468116069*^9, 
   3.738410491478509*^9}, {3.7384105486601057`*^9, 3.738410601292083*^9}, {
   3.7384106372300797`*^9, 3.738410681985692*^9}, {3.738410749802992*^9, 
   3.7384108128645372`*^9}, {3.738410958116321*^9, 3.7384109853327713`*^9}, {
   3.738411037161559*^9, 3.738411042222527*^9}, {3.738411162460593*^9, 
   3.738411226883543*^9}, {3.738411322231944*^9, 3.7384113362662163`*^9}, {
   3.738411385477351*^9, 3.738411410535849*^9}, {3.738411456455303*^9, 
   3.7384114576385307`*^9}, 3.738411554690963*^9, {3.738411682823183*^9, 
   3.738411706708893*^9}, {3.738412642560034*^9, 3.73841265430777*^9}, {
   3.738412810716589*^9, 3.738412912876191*^9}, {3.738412943733728*^9, 
   3.7384129633914413`*^9}, {3.738413003314558*^9, 3.7384130475243673`*^9}, 
   3.738413173065028*^9, {3.738413278866436*^9, 3.738413310572729*^9}, {
   3.738413374377047*^9, 3.7384134448622932`*^9}, {3.738413491851619*^9, 
   3.738413492429778*^9}, {3.738413535700869*^9, 3.738413561629837*^9}, {
   3.738413600029949*^9, 3.7384136948629417`*^9}, {3.738413735579855*^9, 
   3.738413765467114*^9}, {3.738413804306488*^9, 3.738413821259377*^9}, {
   3.738413853745181*^9, 3.7384139154747887`*^9}, 3.738413945645226*^9, {
   3.73841406636329*^9, 3.738414067794088*^9}, {3.7384141334609747`*^9, 
   3.73841413456973*^9}, {3.7384142247406473`*^9, 3.738414224889114*^9}, {
   3.738414356164442*^9, 3.738414379870479*^9}, {3.738414414289407*^9, 
   3.7384144774106216`*^9}, 3.738414534441214*^9, {3.738414591826014*^9, 
   3.738414607285438*^9}, {3.738414665952416*^9, 3.7384146934944353`*^9}, {
   3.73841560977759*^9, 3.7384157191440907`*^9}, {3.73841583692409*^9, 
   3.738415856591886*^9}, {3.738415951508398*^9, 3.738416139463077*^9}, {
   3.738416186296935*^9, 3.738416188069662*^9}, 3.738416231095037*^9, {
   3.7384162638699408`*^9, 3.73841640847849*^9}, 3.7384164631579847`*^9, 
   3.7384165039578753`*^9, {3.7384165721579514`*^9, 3.738416583195717*^9}, {
   3.7384166987492332`*^9, 3.738416704895255*^9}, {3.738416739927155*^9, 
   3.738416829357044*^9}, {3.738416871808425*^9, 3.738417034932252*^9}, {
   3.738417100883584*^9, 3.7384171798604116`*^9}, {3.738417263036433*^9, 
   3.738417263275158*^9}, {3.7384173424139433`*^9, 3.738417342567102*^9}, {
   3.738417546085198*^9, 3.738417548355446*^9}, {3.7384176078115597`*^9, 
   3.738417609836141*^9}, 3.738417697071864*^9, {3.738422180351613*^9, 
   3.738422183585075*^9}, {3.738422214170108*^9, 3.7384223592694798`*^9}, {
   3.7384224205528307`*^9, 3.73842243529918*^9}, {3.7384238742096148`*^9, 
   3.738423911337962*^9}, {3.738425879230006*^9, 3.7384259804896727`*^9}, {
   3.738426024883731*^9, 3.738426069314196*^9}, {3.7384261274152*^9, 
   3.738426132026361*^9}, {3.738426223045022*^9, 3.7384262870579033`*^9}, {
   3.7384264442756567`*^9, 3.738426459461586*^9}, {3.738426492339243*^9, 
   3.738426535901862*^9}, {3.738426574522691*^9, 3.738426607710289*^9}, {
   3.738426657865937*^9, 3.73842666542645*^9}, {3.738426782198936*^9, 
   3.738426783344432*^9}, {3.738426839567546*^9, 3.738426880396579*^9}, {
   3.738426946368696*^9, 3.738426948405961*^9}, {3.7384269948626947`*^9, 
   3.738426997015975*^9}, {3.7384271613925123`*^9, 3.738427199744048*^9}, {
   3.738427239233193*^9, 3.738427254715766*^9}, 3.738427335609646*^9, {
   3.738427527117495*^9, 3.73842752827258*^9}, {3.738427606284389*^9, 
   3.7384276123122253`*^9}, {3.738427759222746*^9, 3.7384277639303837`*^9}, {
   3.738427812828279*^9, 3.738427813944092*^9}, {3.7384313320590553`*^9, 
   3.738431369396173*^9}, {3.738431416462831*^9, 3.738431421277596*^9}, {
   3.738431478962708*^9, 3.7384314812789288`*^9}, {3.73843154551921*^9, 
   3.738431567809299*^9}, {3.738431943474498*^9, 3.7384323226245823`*^9}, {
   3.7384323788254957`*^9, 3.7384323952120323`*^9}, 3.7384324362928877`*^9, {
   3.738432484879917*^9, 3.738432526896204*^9}, {3.738432565376668*^9, 
   3.738432667669455*^9}, {3.738432733527947*^9, 3.738432734393485*^9}, {
   3.738432840042963*^9, 3.738432840374942*^9}, {3.738432878814886*^9, 
   3.7384328863399477`*^9}, {3.738432941229113*^9, 3.738432957300559*^9}, {
   3.738451797880897*^9, 3.738451908549374*^9}, {3.7384519635484056`*^9, 
   3.7384520030615463`*^9}, {3.738452199227064*^9, 3.738452309466371*^9}, 
   3.7384523713270073`*^9, {3.73845245388698*^9, 3.738452467410321*^9}, {
   3.738452511023596*^9, 3.73845261608918*^9}, {3.738452697023785*^9, 
   3.738452738614799*^9}, {3.73845282270149*^9, 3.738452868591297*^9}, {
   3.738452912107636*^9, 3.738452913107452*^9}, {3.738453011228602*^9, 
   3.738453021916107*^9}, {3.738453120002236*^9, 3.7384531575426817`*^9}, 
   3.738453212084485*^9, {3.738453249754706*^9, 3.738453250752853*^9}, {
   3.738453293554914*^9, 3.738453311395249*^9}, {3.738453370789806*^9, 
   3.738453371293312*^9}, {3.738453418208577*^9, 3.738453418942794*^9}, {
   3.738453484600039*^9, 3.738453583256612*^9}, {3.738453642919828*^9, 
   3.738453659063342*^9}, {3.738453690534418*^9, 3.738453709028612*^9}, {
   3.7384537466803703`*^9, 3.738453819157939*^9}, {3.738453901710284*^9, 
   3.7384539171889133`*^9}, {3.738453992444309*^9, 3.7384539954780397`*^9}, {
   3.738454198804967*^9, 3.738454206698786*^9}, {3.7384543448525763`*^9, 
   3.7384543734710617`*^9}, {3.738454510788723*^9, 3.73845452744112*^9}, {
   3.738454688347486*^9, 3.738454692607045*^9}, 3.738454941188923*^9, {
   3.738455089125272*^9, 3.738455096312545*^9}, {3.7384551463487577`*^9, 
   3.7384551507307253`*^9}, {3.738455229040916*^9, 3.738455269202651*^9}, {
   3.7384776754494953`*^9, 3.738477688497273*^9}, {3.738477796922585*^9, 
   3.738477797173972*^9}, {3.738477845132038*^9, 3.738477845346788*^9}, {
   3.7384782504848337`*^9, 3.7384782531535597`*^9}, {3.738478426062964*^9, 
   3.738478426226398*^9}, {3.738478469947493*^9, 3.738478550206373*^9}, {
   3.738478595638919*^9, 3.738478598351486*^9}, {3.7384786446012707`*^9, 
   3.738478663139735*^9}, {3.738478725538097*^9, 3.738478725644021*^9}, {
   3.7384788358460712`*^9, 3.738478839152225*^9}, {3.738478871370516*^9, 
   3.738478874268433*^9}, {3.7384789288625097`*^9, 3.7384789411369057`*^9}, {
   3.738478992025208*^9, 3.738478995960455*^9}, {3.738479035950376*^9, 
   3.738479039046558*^9}, {3.738479112206423*^9, 3.738479116539459*^9}, {
   3.738479302054319*^9, 3.7384793023455067`*^9}, {3.738479406126381*^9, 
   3.7384795013024178`*^9}, {3.738479549617778*^9, 3.7384795661458883`*^9}, {
   3.738479611813922*^9, 3.738479632904668*^9}, {3.738479805261047*^9, 
   3.738479850501856*^9}, {3.738479882189168*^9, 3.738479895817441*^9}, {
   3.738480932896592*^9, 3.73848095818834*^9}, {3.73848099473905*^9, 
   3.738481012531817*^9}, {3.7384810756867857`*^9, 3.738481084651853*^9}, {
   3.7384840263795*^9, 3.738484070158834*^9}, {3.7384841013899937`*^9, 
   3.738484275357253*^9}, {3.738484461585033*^9, 3.738484500481049*^9}, {
   3.738484595096655*^9, 3.73848460097431*^9}, {3.738486652134901*^9, 
   3.738486703979101*^9}, {3.738486834863269*^9, 3.738486911416848*^9}, {
   3.7384869581288033`*^9, 3.7384869930759363`*^9}, {3.738487025239409*^9, 
   3.738487129857512*^9}, {3.738487174981251*^9, 3.7384873204700937`*^9}, {
   3.7384873552418747`*^9, 3.738487364843025*^9}, {3.7384875175872917`*^9, 
   3.7384875248909597`*^9}, 3.7384875670394163`*^9, {3.7384876105474987`*^9, 
   3.73848762113701*^9}, {3.738487666620626*^9, 3.738487706097748*^9}, {
   3.738487737978443*^9, 3.738487830137911*^9}, {3.738487913070405*^9, 
   3.738487932225005*^9}, {3.738488664180875*^9, 3.7384886656087418`*^9}, {
   3.738488802749132*^9, 3.738488803885852*^9}, {3.738489472480747*^9, 
   3.738489478849229*^9}, {3.738489965296183*^9, 3.738490007068256*^9}, {
   3.7384900393739233`*^9, 3.738490054567491*^9}, {3.738519327290003*^9, 
   3.7385193617490053`*^9}, {3.73853214336554*^9, 3.7385321438547792`*^9}, {
   3.738532176156818*^9, 3.7385321801485453`*^9}, {3.7385339523082857`*^9, 
   3.738533975312323*^9}, {3.738607277354204*^9, 3.738607280726183*^9}, {
   3.738607405638122*^9, 3.738607413925082*^9}, {3.738607444319923*^9, 
   3.738607515166926*^9}, 3.738607752567379*^9, {3.7386078634390297`*^9, 
   3.738607869677635*^9}, 3.73860808167908*^9, {3.738608194452281*^9, 
   3.738608200375949*^9}, {3.738608389257429*^9, 3.738608391870439*^9}, {
   3.738608480027628*^9, 3.738608484456995*^9}, {3.738608621679859*^9, 
   3.7386086622911587`*^9}, {3.738608716708396*^9, 3.7386087719532337`*^9}, {
   3.738608842934346*^9, 3.738608857174502*^9}, {3.7386088938665648`*^9, 
   3.7386088958789043`*^9}, {3.738610235847197*^9, 3.7386102391803703`*^9}, {
   3.738611386261561*^9, 3.738611439233672*^9}, {3.738611561305614*^9, 
   3.7386116289918747`*^9}, 3.738615151900031*^9, 3.738615186104361*^9, {
   3.7386153136241827`*^9, 3.7386153562298107`*^9}, {3.738615424633582*^9, 
   3.73861543458499*^9}, 3.738615604361781*^9, {3.738615729730483*^9, 
   3.738615739147355*^9}, {3.7386158639404697`*^9, 3.7386158676049137`*^9}, {
   3.738615925224798*^9, 3.7386159362728863`*^9}, {3.738616005461708*^9, 
   3.7386160293700237`*^9}, {3.7386160782879047`*^9, 
   3.7386160814481153`*^9}, {3.738616195925934*^9, 3.738616289013256*^9}, {
   3.738616372870098*^9, 3.7386166146967163`*^9}, {3.738616670325205*^9, 
   3.738616737060443*^9}, {3.738616768336899*^9, 3.738616937907*^9}, {
   3.738616970980505*^9, 3.73861702381604*^9}, {3.7386170771493473`*^9, 
   3.73861716643423*^9}, {3.7386173700695887`*^9, 3.738617372485165*^9}, {
   3.738617479119038*^9, 3.738617554732418*^9}, 3.73861762733141*^9, {
   3.7386176664264793`*^9, 3.7386177664255457`*^9}, {3.738617814760077*^9, 
   3.73861801970765*^9}, {3.738618075018063*^9, 3.738618256386119*^9}, {
   3.738618322691862*^9, 3.738618353191609*^9}, {3.738618429131723*^9, 
   3.738618462736312*^9}, {3.738618523388382*^9, 3.7386185733806877`*^9}, {
   3.738618605263248*^9, 3.7386186298886757`*^9}, {3.738741638993992*^9, 
   3.738741647959371*^9}, {3.738741807353346*^9, 3.738741840171764*^9}, {
   3.738741880351491*^9, 3.738741898699026*^9}, {3.738741941127293*^9, 
   3.738741943664093*^9}, 3.738742040590733*^9, 3.7387421070973682`*^9, {
   3.7387421470248127`*^9, 3.7387421474285994`*^9}, {3.738742257581174*^9, 
   3.738742263946693*^9}, {3.738742328025968*^9, 3.7387423284971952`*^9}, {
   3.738742498354747*^9, 3.738742516523333*^9}, {3.738742643916554*^9, 
   3.738742644566064*^9}, {3.7387426902928953`*^9, 3.738742712488504*^9}, {
   3.738742995522382*^9, 3.7387430985147743`*^9}, {3.738743194855735*^9, 
   3.7387431954780827`*^9}, {3.7387432312681293`*^9, 3.738743259632053*^9}, {
   3.738743307216187*^9, 3.7387433222541237`*^9}, {3.7387433688930817`*^9, 
   3.738743374365366*^9}, {3.7387434080260973`*^9, 3.7387434209134417`*^9}, {
   3.738743488214871*^9, 3.738743492325246*^9}, {3.738743540561079*^9, 
   3.7387435991020737`*^9}, {3.738743639096537*^9, 3.738743643141548*^9}, {
   3.738749093491644*^9, 3.738749108437558*^9}, {3.7387491586354933`*^9, 
   3.73874917189925*^9}, {3.738749384036838*^9, 3.7387494222280617`*^9}, {
   3.73874950856066*^9, 3.7387495232089663`*^9}, {3.738749588990992*^9, 
   3.738749657776081*^9}, {3.738749724163274*^9, 3.7387497356906652`*^9}, 
   3.738749821549478*^9, {3.738749919910469*^9, 3.738749922923296*^9}, {
   3.738749955933284*^9, 3.738749959292552*^9}, {3.7387501451355257`*^9, 
   3.73875017124677*^9}, {3.738750680996821*^9, 3.7387506901238194`*^9}, 
   3.738750733779086*^9, {3.738750789844202*^9, 3.738750823174122*^9}, {
   3.7387508601660633`*^9, 3.738750862187642*^9}, 3.7387509815233183`*^9, {
   3.73875102334813*^9, 3.738751023739702*^9}, {3.73875107206986*^9, 
   3.738751073232809*^9}, {3.738751242106234*^9, 3.73875125178156*^9}, {
   3.738751327598448*^9, 3.738751328241392*^9}, {3.738751375158022*^9, 
   3.73875137627941*^9}, {3.738751511532819*^9, 3.738751511685553*^9}, {
   3.738751545565668*^9, 3.738751572509263*^9}, 3.73875168558799*^9, {
   3.738751716175538*^9, 3.738751799313065*^9}, {3.7387623504129744`*^9, 
   3.738762359458847*^9}, {3.7387624030408087`*^9, 3.738762404613221*^9}, {
   3.738762442701817*^9, 3.738762473387034*^9}, {3.738764422497333*^9, 
   3.7387645528559437`*^9}, {3.738764590429123*^9, 3.7387646382923193`*^9}, {
   3.7387647615165443`*^9, 3.7387648104819117`*^9}, {3.738764855076174*^9, 
   3.7387648776311502`*^9}, {3.738764952882194*^9, 3.738764975644174*^9}, {
   3.738765023565857*^9, 3.738765066008937*^9}, {3.738765119199271*^9, 
   3.738765175825122*^9}, 3.738765219585937*^9, {3.7387652756749287`*^9, 
   3.738765512311966*^9}, {3.738765568825347*^9, 3.738765591960919*^9}, {
   3.738765678994137*^9, 3.73876568641302*^9}, {3.7387657570523*^9, 
   3.738765768278811*^9}, {3.738765911282323*^9, 3.7387659230981493`*^9}, {
   3.738765995659019*^9, 3.738766002155998*^9}, {3.7387660482431793`*^9, 
   3.738766078480517*^9}, {3.738766134882597*^9, 3.738766182621971*^9}, {
   3.738766214958363*^9, 3.738766224289041*^9}, 3.738766403421681*^9, {
   3.738766474688467*^9, 3.738766483195841*^9}, {3.738766522286285*^9, 
   3.738766535937895*^9}, {3.7387665959969883`*^9, 3.738766610870261*^9}, {
   3.738766926792172*^9, 3.738766985774934*^9}, 3.738767175772821*^9, 
   3.738767385672844*^9, {3.7387674785572443`*^9, 3.738767503525914*^9}, 
   3.7387675340325127`*^9, {3.7387675914324408`*^9, 3.73876759233594*^9}, {
   3.738767633504578*^9, 3.738767675265744*^9}, 3.738767708244155*^9, {
   3.738767745595388*^9, 3.738767783236541*^9}, 3.7387678419456472`*^9, {
   3.738767929037356*^9, 3.738767955651713*^9}, {3.738768078628813*^9, 
   3.738768085948893*^9}, {3.738768154422385*^9, 3.738768174162594*^9}, {
   3.73876829022138*^9, 3.738768297065364*^9}, {3.738768372585956*^9, 
   3.7387683921186323`*^9}, 3.738768431335752*^9, {3.738768507975168*^9, 
   3.738768511463605*^9}, {3.738768651090515*^9, 3.7387686545866747`*^9}, 
   3.7387687860917683`*^9, 3.7387688195877657`*^9, {3.738768897162836*^9, 
   3.7387689003116503`*^9}, {3.7387689367429237`*^9, 3.73876895383813*^9}, {
   3.738769215263215*^9, 3.738769218797434*^9}, {3.738769360195347*^9, 
   3.738769416638832*^9}, {3.7387694749197817`*^9, 3.738769475363442*^9}, {
   3.738769636132937*^9, 3.73876963773948*^9}, {3.738769831544426*^9, 
   3.7387698326388893`*^9}, {3.738770063768667*^9, 3.738770121241465*^9}, {
   3.738770156538609*^9, 3.738770183452572*^9}, {3.738770359577539*^9, 
   3.738770359734214*^9}, {3.7387706554573097`*^9, 3.738770686862585*^9}, {
   3.7387707275441513`*^9, 3.738770739478737*^9}, {3.7387708108315*^9, 
   3.7387708257255917`*^9}, {3.738770937477149*^9, 3.7387709448489923`*^9}, {
   3.7387713654504766`*^9, 3.738771370226837*^9}, {3.738771578680173*^9, 
   3.738771608258882*^9}, {3.738771752280249*^9, 3.738771828908629*^9}, {
   3.7387721430295*^9, 3.738772175031931*^9}, {3.738772300920906*^9, 
   3.7387723187704067`*^9}, 3.73877244256551*^9, {3.7387724836813383`*^9, 
   3.738772508709833*^9}, 3.738772583813628*^9, {3.738791954362837*^9, 
   3.738792032736804*^9}, {3.738792396971574*^9, 3.73879239884625*^9}, {
   3.738792454710219*^9, 3.738792543065591*^9}, {3.738792577891651*^9, 
   3.738792588712141*^9}, {3.738792643106104*^9, 3.738792649158922*^9}, {
   3.7387927441970263`*^9, 3.738792748732596*^9}, {3.738793283662642*^9, 
   3.7387932960769587`*^9}, {3.738793723590908*^9, 3.738793724227602*^9}, {
   3.738793877631813*^9, 3.738793889731263*^9}, {3.7387946289618807`*^9, 
   3.738794647775107*^9}, {3.738795065415328*^9, 3.738795071830431*^9}, 
   3.738795205296348*^9, {3.738829485497353*^9, 3.738829503246881*^9}, {
   3.73882978762918*^9, 3.738829821400423*^9}, 3.738829982821677*^9, {
   3.738830039038262*^9, 3.738830039202095*^9}, {3.738830236234009*^9, 
   3.738830242455716*^9}, 3.738830309701069*^9, {3.7388305473973217`*^9, 
   3.738830643822131*^9}, {3.738830741332889*^9, 3.738830746341839*^9}, {
   3.738830831452565*^9, 3.738830831970916*^9}, {3.7388309425993643`*^9, 
   3.738830958047255*^9}, {3.738831033602034*^9, 3.73883107235741*^9}, {
   3.738831137721637*^9, 3.738831141317719*^9}, {3.7388312075806723`*^9, 
   3.738831212762022*^9}, {3.738831256837509*^9, 3.738831346972026*^9}, {
   3.738831491160335*^9, 3.738831509729311*^9}, {3.7388315521910954`*^9, 
   3.73883156026248*^9}, {3.7388317016924257`*^9, 3.73883172584159*^9}, {
   3.7388319197176523`*^9, 3.738831922156641*^9}, {3.738846441228586*^9, 
   3.738846480705472*^9}, {3.738846553619742*^9, 3.738846558273345*^9}, {
   3.738846597580432*^9, 3.738846611445265*^9}, {3.7388466480726433`*^9, 
   3.738846660204591*^9}, {3.738875290537776*^9, 3.7388754135684137`*^9}, {
   3.738875445807912*^9, 3.738875485111691*^9}, {3.738875651506669*^9, 
   3.73887569146876*^9}, {3.7388757791878*^9, 3.738875799969309*^9}, {
   3.738876063897723*^9, 3.738876064678912*^9}, {3.73887617225807*^9, 
   3.73887618234341*^9}, {3.738876222085025*^9, 3.738876225922727*^9}, {
   3.738876262510729*^9, 3.738876274588832*^9}, {3.73887682547302*^9, 
   3.738876957159829*^9}, {3.738877002384069*^9, 3.738877049594859*^9}, {
   3.73891346801973*^9, 3.738913536942829*^9}, {3.738913600724674*^9, 
   3.738913612522814*^9}, {3.738913684763611*^9, 3.738913699074482*^9}, {
   3.7389138628921003`*^9, 3.738913871601902*^9}, {3.738914064945086*^9, 
   3.738914070906419*^9}, {3.7389143646887217`*^9, 3.738914367637288*^9}, {
   3.738914406511488*^9, 3.7389144067109756`*^9}, {3.7389144401314783`*^9, 
   3.738914445088682*^9}, {3.738914477370779*^9, 3.7389145737311773`*^9}, {
   3.7389146648203173`*^9, 3.738914666528111*^9}, {3.73891473083814*^9, 
   3.7389147318444147`*^9}, {3.738914778459511*^9, 3.738914793820608*^9}, {
   3.73891483558344*^9, 3.738914867524173*^9}, {3.738915071096382*^9, 
   3.738915095705462*^9}, {3.73891538692457*^9, 3.7389154341274567`*^9}, {
   3.738915503411091*^9, 3.73891564261982*^9}, {3.738915796397036*^9, 
   3.738915827489193*^9}, {3.7389160113065987`*^9, 3.738916090063417*^9}, {
   3.738916136558572*^9, 3.738916154687324*^9}, {3.738916209597468*^9, 
   3.738916319390355*^9}, {3.738916422560835*^9, 3.738916485569109*^9}, 
   3.7389166201167593`*^9, {3.738916919640758*^9, 3.738916964294869*^9}, {
   3.7389170067454557`*^9, 3.738917025904704*^9}, {3.738917119709693*^9, 
   3.738917158749345*^9}, {3.7389264425585337`*^9, 3.738926449606715*^9}, {
   3.738926504333744*^9, 3.738926516256175*^9}, {3.738926718547559*^9, 
   3.738926739384549*^9}, {3.738926781697081*^9, 3.7389267854311857`*^9}, {
   3.738927127155895*^9, 3.7389272208430023`*^9}, {3.738927286629673*^9, 
   3.7389272950485697`*^9}, {3.7389273362960978`*^9, 3.738927395236786*^9}, {
   3.73893233871408*^9, 3.738932404215469*^9}, {3.738932469699033*^9, 
   3.73893253896218*^9}, {3.7389325964091578`*^9, 3.7389326177737494`*^9}, {
   3.738932658587242*^9, 3.7389326613650227`*^9}, {3.738932742250753*^9, 
   3.7389328343841743`*^9}, {3.738932916905102*^9, 3.73893292167378*^9}, {
   3.73893316912691*^9, 3.738933173142583*^9}, 3.73893324949617*^9, {
   3.7389332894620113`*^9, 3.738933302504477*^9}, {3.738933373644425*^9, 
   3.7389333908079033`*^9}, {3.738933841670547*^9, 3.738933842091681*^9}, {
   3.7389339198744926`*^9, 3.738934009109042*^9}, {3.738934416697815*^9, 
   3.738934452105788*^9}, {3.738934552694956*^9, 3.738934558679364*^9}, {
   3.738934759087006*^9, 3.738934759674239*^9}, {3.738934888035878*^9, 
   3.738934896264423*^9}, {3.738935077860718*^9, 3.738935081676704*^9}, {
   3.738935225627809*^9, 3.7389353766796827`*^9}, {3.7389356056459084`*^9, 
   3.738935626592306*^9}, {3.738935911176392*^9, 3.7389359234759083`*^9}, {
   3.738940694086644*^9, 3.7389407502304296`*^9}, {3.738940788838798*^9, 
   3.738940789059342*^9}, 3.7389408882777243`*^9, {3.738942167441038*^9, 
   3.738942328514233*^9}, {3.738942401918082*^9, 3.7389424578990088`*^9}, {
   3.7389426059911613`*^9, 3.738942634238789*^9}, {3.7389431608557053`*^9, 
   3.7389431894039087`*^9}, {3.7389432574995604`*^9, 
   3.7389432876220837`*^9}, {3.738944114788392*^9, 3.738944125212673*^9}, 
   3.73894439419943*^9, 3.738944434189828*^9, {3.7389447784677277`*^9, 
   3.738944970193748*^9}, {3.738945000817965*^9, 3.738945016367292*^9}, {
   3.738951464565645*^9, 3.738951512504287*^9}, {3.7389515442543173`*^9, 
   3.7389515465392513`*^9}, 3.738951593128862*^9, {3.738951646374352*^9, 
   3.738951715546365*^9}, {3.7389517742885237`*^9, 3.738951787099111*^9}, {
   3.7389518592902822`*^9, 3.738951859859028*^9}, 3.7389519122355537`*^9, {
   3.738964445535211*^9, 3.738964468661585*^9}, {3.738964636257964*^9, 
   3.738964645569668*^9}, {3.738964702881341*^9, 3.7389647110002317`*^9}, {
   3.7389647874017763`*^9, 3.7389647905783253`*^9}, {3.738964919600309*^9, 
   3.738964929592999*^9}, 3.7390100883332243`*^9, {3.7390102195793333`*^9, 
   3.739010315453779*^9}, {3.739010605828866*^9, 3.739010612369484*^9}, {
   3.7390107039778957`*^9, 3.739010726188929*^9}, {3.739010914881133*^9, 
   3.739010918965355*^9}, {3.739011002984357*^9, 3.739011173734325*^9}, {
   3.739011242459186*^9, 3.739011287236137*^9}, {3.739011324308804*^9, 
   3.7390113765110483`*^9}, {3.739011418534902*^9, 3.739011465647213*^9}, 
   3.7390115015018377`*^9, {3.7390115599096203`*^9, 3.739011560063078*^9}, {
   3.73901165190128*^9, 3.739011725121222*^9}, {3.7390123183150177`*^9, 
   3.7390123212240973`*^9}, {3.739012425501706*^9, 3.7390124399255543`*^9}, {
   3.739012552373519*^9, 3.7390125922427197`*^9}, {3.739012918643611*^9, 
   3.7390129234715014`*^9}, {3.739013594952523*^9, 3.739013617225202*^9}, {
   3.739013655693543*^9, 3.739013663833468*^9}, {3.73901370615388*^9, 
   3.7390138092902937`*^9}, 3.739013874287963*^9, {3.7390139050630627`*^9, 
   3.7390139351520233`*^9}, {3.73901396890913*^9, 3.7390139950601254`*^9}, {
   3.7390141125823402`*^9, 3.7390141165341454`*^9}, 3.739014146791276*^9, {
   3.7390141824507093`*^9, 3.73901426573427*^9}, {3.7390143956498957`*^9, 
   3.739014397787265*^9}, {3.7390144979302483`*^9, 3.739014508506432*^9}, {
   3.7390145671320868`*^9, 3.739014588251582*^9}, {3.7390146276846*^9, 
   3.7390146473049088`*^9}, {3.7390146983944693`*^9, 3.739014705178899*^9}, {
   3.7390147737358932`*^9, 3.7390147756164083`*^9}, {3.739014850635016*^9, 
   3.739014876956098*^9}, {3.739014911902268*^9, 3.739014913000922*^9}, {
   3.739015048975528*^9, 3.7390150777807293`*^9}, {3.739015108061167*^9, 
   3.7390151357071247`*^9}, {3.739015209887045*^9, 3.7390152178634243`*^9}, {
   3.739015269296988*^9, 3.7390152752259693`*^9}, {3.73901533317313*^9, 
   3.7390153358183537`*^9}, {3.7390153918690023`*^9, 3.739015393665852*^9}, {
   3.7390155237927237`*^9, 3.739015551207609*^9}, {3.739015669454276*^9, 
   3.739015672189035*^9}, {3.739015801499723*^9, 3.7390158145341873`*^9}, {
   3.739015883119729*^9, 3.73901591635712*^9}, {3.739016257044525*^9, 
   3.739016266192946*^9}, {3.739016426324554*^9, 3.7390164326358843`*^9}, {
   3.739016861020165*^9, 3.739016915495673*^9}, {3.739016979912292*^9, 
   3.739017001655908*^9}, {3.739017031992682*^9, 3.739017070196719*^9}, {
   3.739017195126009*^9, 3.739017212903184*^9}, 3.739017256181616*^9, {
   3.739017595567521*^9, 3.7390176939551163`*^9}, {3.7390177896238737`*^9, 
   3.739017909571185*^9}, {3.739018077605842*^9, 3.739018140024836*^9}, 
   3.739018196510363*^9, {3.739018440031788*^9, 3.73901846780295*^9}, {
   3.7390185617807007`*^9, 3.7390185669497766`*^9}, {3.739018657234611*^9, 
   3.739018724864151*^9}, {3.739018767855431*^9, 3.739018876660943*^9}, {
   3.7390191268724117`*^9, 3.7390191771129923`*^9}, {3.739019287494424*^9, 
   3.739019311225587*^9}, {3.7390193413908854`*^9, 3.739019543301077*^9}, {
   3.739019575349414*^9, 3.739019578576642*^9}, {3.739019764531152*^9, 
   3.739019846689345*^9}, {3.7390198867360287`*^9, 3.739019895726553*^9}, {
   3.739019976596237*^9, 3.739020014282103*^9}, {3.739020236143532*^9, 
   3.7390202384173613`*^9}, {3.7390203140904493`*^9, 3.739020319823039*^9}, {
   3.739020358387492*^9, 3.739020360315668*^9}, {3.7390203927150307`*^9, 
   3.739020517352191*^9}, {3.739020575860731*^9, 3.739020582573951*^9}, {
   3.73902061324279*^9, 3.739020649212779*^9}, {3.739020692782099*^9, 
   3.7390206929141197`*^9}, {3.7390279622673683`*^9, 3.739027968997335*^9}, {
   3.739027999579784*^9, 3.739028105121891*^9}, 3.739028193021044*^9, {
   3.739028508925735*^9, 3.739028544350507*^9}, {3.739028620580504*^9, 
   3.73902863375674*^9}, {3.739028713615055*^9, 3.739028718300826*^9}, {
   3.739028778185607*^9, 3.739028779601461*^9}, {3.739030005047434*^9, 
   3.739030032654132*^9}, 3.7390303952051086`*^9, {3.739030647781528*^9, 
   3.739030769934762*^9}, 3.739030891599688*^9, {3.739030940719483*^9, 
   3.739030976159534*^9}, {3.739031119167739*^9, 3.739031129781196*^9}, {
   3.7390312037282343`*^9, 3.7390312338938713`*^9}, {3.739033292489483*^9, 
   3.739033299529632*^9}, 3.739033342525674*^9, {3.739035222757647*^9, 
   3.7390352806031923`*^9}, {3.739035417558358*^9, 3.7390354451325407`*^9}, 
   3.739035524921191*^9, {3.739035562555933*^9, 3.739035583939142*^9}, {
   3.739035620637682*^9, 3.739035626354547*^9}, {3.739035678965138*^9, 
   3.7390357974123077`*^9}, {3.739035828798193*^9, 3.739036438475807*^9}, {
   3.7390364695854263`*^9, 3.739036522455679*^9}, {3.739036553148346*^9, 
   3.7390366153157387`*^9}, {3.7390366714547577`*^9, 3.739036683261985*^9}, {
   3.739036903927476*^9, 3.7390369256178923`*^9}, 3.739036961487069*^9, {
   3.7390370471009293`*^9, 3.73903707487463*^9}, {3.739037229951442*^9, 
   3.73903729870457*^9}, {3.739038835046083*^9, 3.739038846891121*^9}, {
   3.739038896502606*^9, 3.739038904354954*^9}, {3.73903901949612*^9, 
   3.739039026373211*^9}, {3.739039176668326*^9, 3.73903921085743*^9}, {
   3.73903943553202*^9, 3.7390394593380003`*^9}, {3.73903955107915*^9, 
   3.73903955179216*^9}, {3.739040348734168*^9, 3.739040359795599*^9}, 
   3.7390406212120247`*^9, {3.739040725552843*^9, 3.739040737083726*^9}, {
   3.739041498153167*^9, 3.739041498807497*^9}, {3.739041685876266*^9, 
   3.739041701919012*^9}, {3.739045894534479*^9, 3.739045962253859*^9}, 
   3.739045999387032*^9, {3.739046034431408*^9, 3.739046244846181*^9}, {
   3.739046278614946*^9, 3.739046437644539*^9}, {3.739046506724431*^9, 
   3.739046558485209*^9}, {3.739046596866886*^9, 3.739046638718356*^9}, 
   3.739046735737852*^9, {3.7390474624388237`*^9, 3.739047466869055*^9}, {
   3.739048104570017*^9, 3.739048121918244*^9}, {3.739048162134223*^9, 
   3.73904816502942*^9}, 3.739048224973968*^9, {3.7390482558062687`*^9, 
   3.739048291433638*^9}, {3.739048947397984*^9, 3.739048947924858*^9}, {
   3.7390503404287043`*^9, 3.739050344132244*^9}, {3.739050600664276*^9, 
   3.739050601249222*^9}, {3.7390509058280087`*^9, 3.739050910951334*^9}, 
   3.7390510985864773`*^9, {3.739051341182249*^9, 3.739051348353581*^9}, {
   3.739051724196074*^9, 3.7390517306708403`*^9}, {3.739051824518565*^9, 
   3.739051838659799*^9}, {3.739051871962593*^9, 3.739051898774981*^9}, {
   3.7390519422879457`*^9, 3.739052019267392*^9}, {3.739052070919921*^9, 
   3.7390520942171*^9}, {3.7390522511053467`*^9, 3.739052330148369*^9}, {
   3.7390524151015387`*^9, 3.739052451858288*^9}, {3.739052933224842*^9, 
   3.7390529444174*^9}, {3.73905305186092*^9, 3.739053067906042*^9}, {
   3.739085008201819*^9, 3.739085010517314*^9}, {3.739085129636087*^9, 
   3.739085186084778*^9}, {3.739085332031357*^9, 3.739085332693699*^9}, {
   3.739085522501267*^9, 3.739085524399645*^9}, 3.7390856736990347`*^9, {
   3.7390857721983128`*^9, 3.739085777191897*^9}, {3.739086127013054*^9, 
   3.739086166004031*^9}, 3.739086253375333*^9, {3.7390863238524923`*^9, 
   3.739086386690476*^9}, {3.739086454111898*^9, 3.739086460452889*^9}, 
   3.739086596869796*^9, {3.739087111882266*^9, 3.739087112039941*^9}, {
   3.7390875221496353`*^9, 3.739087559993679*^9}, {3.7390877344077578`*^9, 
   3.739087734804324*^9}, 3.7391358039637203`*^9, 3.739135847809017*^9, 
   3.739135889307331*^9, {3.739135921381974*^9, 3.7391359282524014`*^9}, {
   3.739214263230934*^9, 3.739214269174357*^9}, {3.7392143569194508`*^9, 
   3.7392143638902693`*^9}, {3.739214445250383*^9, 3.739214465055648*^9}, {
   3.739214552758834*^9, 3.7392145792111464`*^9}, {3.739214626003598*^9, 
   3.739214637451302*^9}, 3.739214712100068*^9, {3.7392147435327463`*^9, 
   3.739214767721382*^9}, 3.7392148134144497`*^9, {3.739214880546496*^9, 
   3.739214882856058*^9}, {3.739214927682723*^9, 3.7392149464799633`*^9}, {
   3.7392150852474947`*^9, 3.739215174721861*^9}, {3.739215207331341*^9, 
   3.73921524957036*^9}, {3.7392160057559547`*^9, 3.739216006144835*^9}, {
   3.7392590971293163`*^9, 3.7392590996564713`*^9}, {3.739268236682404*^9, 
   3.739268253848873*^9}, {3.739470014132491*^9, 3.739470021308166*^9}, {
   3.739470075953615*^9, 3.739470143012032*^9}, {3.739470395369616*^9, 
   3.739470435068953*^9}, 3.739471018879945*^9, {3.739473375068121*^9, 
   3.7394733809766397`*^9}, {3.739560527745734*^9, 3.739560528046287*^9}, {
   3.739606450404261*^9, 3.7396064557298613`*^9}, {3.739606488659178*^9, 
   3.739606532814624*^9}, {3.73960659876758*^9, 3.7396066013567953`*^9}, {
   3.7396066623677607`*^9, 3.739606700699339*^9}, {3.739606761532653*^9, 
   3.739606761858238*^9}, {3.739606920125567*^9, 3.739606952342587*^9}, {
   3.7396196856712627`*^9, 3.739619721284419*^9}, {3.739620005898308*^9, 
   3.73962000671961*^9}, {3.739620272393593*^9, 3.739620272558811*^9}, {
   3.739620697322562*^9, 3.739620702047905*^9}, {3.739620816747347*^9, 
   3.7396208194397993`*^9}, {3.7396212399785633`*^9, 3.739621302962455*^9}, {
   3.7396215116806507`*^9, 3.739621552440597*^9}, {3.7396215878006372`*^9, 
   3.7396215922290916`*^9}, {3.739621644606913*^9, 3.739621654784301*^9}, {
   3.7396217582315702`*^9, 3.7396218081006203`*^9}, {3.739622170476016*^9, 
   3.739622178216864*^9}, 3.73962225334699*^9, {3.7396224392479343`*^9, 
   3.739622456179638*^9}, {3.7396930953168097`*^9, 3.739693107224712*^9}, {
   3.739693145429582*^9, 3.7396931542866087`*^9}, {3.739693294886077*^9, 
   3.739693317693726*^9}, {3.7396942106637793`*^9, 3.739694295980548*^9}, {
   3.739694329784478*^9, 3.739694344544252*^9}, {3.739694501033115*^9, 
   3.7396945014457397`*^9}, {3.7396947489108047`*^9, 3.739694754044071*^9}, {
   3.739695199391753*^9, 3.739695295559486*^9}, {3.739695339011273*^9, 
   3.739695364238521*^9}, {3.739695402230175*^9, 3.739695439523381*^9}, {
   3.739701887622344*^9, 3.739701896403831*^9}, {3.739702363527053*^9, 
   3.7397025105528717`*^9}, {3.739745708703252*^9, 3.739745733223795*^9}, {
   3.739745800681175*^9, 3.7397458050330133`*^9}, {3.739746130264373*^9, 
   3.7397462134763517`*^9}, {3.739746250796771*^9, 3.739746446467936*^9}, {
   3.739746535620932*^9, 3.7397466008929253`*^9}, 3.739747584281933*^9, {
   3.739747664678854*^9, 3.739747677615698*^9}, 3.73974777635205*^9, 
   3.739748095229022*^9, {3.739748151031417*^9, 3.739748158247484*^9}, 
   3.739748323088366*^9, {3.73974851545199*^9, 3.7397485630260487`*^9}, {
   3.739748619815119*^9, 3.739748674380546*^9}, {3.739748772808052*^9, 
   3.739748777540653*^9}, 3.739777895776479*^9, {3.7397779759374113`*^9, 
   3.7397779983262253`*^9}, {3.7397780884872093`*^9, 3.739778307596489*^9}, {
   3.7397790525823183`*^9, 3.739779081990509*^9}, {3.73977948197997*^9, 
   3.739779485642398*^9}, {3.739779922893742*^9, 3.739779970184585*^9}, {
   3.739780146433045*^9, 3.739780214041243*^9}, {3.739780469010458*^9, 
   3.739780501510158*^9}, {3.7397805786128407`*^9, 3.739780664793088*^9}, {
   3.740061424822105*^9, 3.7400614826430693`*^9}, {3.7400615538331823`*^9, 
   3.7400616844597263`*^9}, {3.740063720276019*^9, 3.740063968978107*^9}, 
   3.740064064604292*^9, {3.74006437221751*^9, 3.7400643802734613`*^9}, {
   3.740123549045442*^9, 3.7401235952619*^9}, {3.7401236406827374`*^9, 
   3.740123659498645*^9}, {3.740178611699353*^9, 3.74017862403668*^9}, {
   3.7401788207040167`*^9, 3.740178830274123*^9}, {3.7402600599247713`*^9, 
   3.7402600667633743`*^9}, {3.740260133184928*^9, 3.740260156088291*^9}, 
   3.7402602057964077`*^9, {3.740260250236155*^9, 3.740260307551277*^9}, {
   3.74026037193589*^9, 3.740260480210343*^9}, {3.7402611862534513`*^9, 
   3.740261242367097*^9}, {3.740261450058853*^9, 3.740261455608571*^9}, {
   3.740391501943543*^9, 3.740391513405266*^9}, {3.7403922541564302`*^9, 
   3.740392268625791*^9}, {3.7479303562309103`*^9, 3.747930429037199*^9}, {
   3.747930614452818*^9, 3.747930635284437*^9}, {3.747997495887204*^9, 
   3.74799749642423*^9}, {3.749582560197873*^9, 3.7495825890689898`*^9}, {
   3.749582693339843*^9, 3.749582736229867*^9}, {3.7495829207023163`*^9, 
   3.749582923935667*^9}, {3.7495829569961452`*^9, 3.7495829719029503`*^9}, {
   3.749583014678893*^9, 3.749583044325963*^9}, 3.749583326087932*^9, {
   3.749583357656014*^9, 3.749583359555374*^9}, {3.749583477545404*^9, 
   3.749583494942459*^9}, {3.7496434349163837`*^9, 3.74964344194909*^9}, {
   3.7496434841843853`*^9, 3.749643509210387*^9}, {3.749643621494939*^9, 
   3.7496437928777742`*^9}, {3.749643886695696*^9, 3.749643897479113*^9}, {
   3.749643945339604*^9, 3.749643961157154*^9}, {3.749725979772355*^9, 
   3.749725986349573*^9}, {3.749731071996437*^9, 3.749731093853652*^9}, 
   3.749731131499707*^9, {3.7497461102854023`*^9, 3.749746162649041*^9}, {
   3.7497473960247517`*^9, 3.749747465802988*^9}, {3.7497490216496*^9, 
   3.7497490257255993`*^9}, {3.749749134773098*^9, 3.749749144341249*^9}, 
   3.749753734108162*^9, {3.749852516675681*^9, 3.749852577306177*^9}, {
   3.749852931858469*^9, 3.749852943031373*^9}, {3.7498541074364*^9, 
   3.7498541803041983`*^9}, {3.749854301887249*^9, 3.749854305786175*^9}, {
   3.74985440736946*^9, 3.749854532080657*^9}, {3.749854575122518*^9, 
   3.7498546087219143`*^9}, {3.749854890792081*^9, 3.749854928197403*^9}, {
   3.749854967838706*^9, 3.749855061354979*^9}, {3.749855099478649*^9, 
   3.749855121748996*^9}, {3.749855156580743*^9, 3.749855157103279*^9}, {
   3.7498552368215*^9, 3.749855302583099*^9}, {3.749855334491688*^9, 
   3.7498553447858067`*^9}, 3.7498554601348143`*^9, {3.749855496264985*^9, 
   3.7498555528841143`*^9}, {3.749855599193367*^9, 3.749855618278864*^9}, {
   3.749855677045478*^9, 3.749855830304659*^9}, {3.749855897619066*^9, 
   3.749856068353663*^9}, {3.7498562123313503`*^9, 3.749856233640532*^9}, {
   3.749856534775455*^9, 3.749856565650827*^9}, {3.749856713119672*^9, 
   3.749856729225309*^9}, {3.749856821823647*^9, 3.749856854018983*^9}, {
   3.7498569150720177`*^9, 3.749856967013633*^9}, {3.749857251423834*^9, 
   3.749857309688552*^9}, {3.749857381427964*^9, 3.749857386619381*^9}, {
   3.749857691005378*^9, 3.7498576939121*^9}, {3.750340407428341*^9, 
   3.750340581277602*^9}, {3.75034061616124*^9, 3.750341175075595*^9}, {
   3.750341205247813*^9, 3.7503412093712997`*^9}, {3.7503412454084044`*^9, 
   3.7503413568275347`*^9}, {3.7503414305223*^9, 3.750341444785556*^9}, {
   3.7503414862117043`*^9, 3.7503416976683702`*^9}, {3.7503417452981443`*^9, 
   3.750341846791624*^9}, {3.750341887497489*^9, 3.7503421304966097`*^9}, 
   3.750342527978755*^9, {3.75034264908506*^9, 3.750342653925737*^9}, 
   3.75034280255478*^9, {3.7503430004065638`*^9, 3.750343008727709*^9}, {
   3.750354617002966*^9, 3.750354617527933*^9}, {3.750355302756898*^9, 
   3.750355352196828*^9}, {3.750355486963677*^9, 3.750355570155427*^9}, {
   3.750356041864772*^9, 3.750356054430718*^9}, {3.750356287547737*^9, 
   3.7503562915836077`*^9}, {3.750356331875802*^9, 3.750356357942192*^9}, {
   3.750356448660529*^9, 3.750356452735085*^9}, {3.750356500567402*^9, 
   3.750356540309114*^9}, {3.750358501389545*^9, 3.750358555523737*^9}, {
   3.750359419172048*^9, 3.750359507097209*^9}, {3.750360876000022*^9, 
   3.750360885821746*^9}, {3.750360938209502*^9, 3.75036094935499*^9}, {
   3.7503611211970387`*^9, 3.75036114393112*^9}, {3.750364732427146*^9, 
   3.7503647953841553`*^9}, {3.7503649300374327`*^9, 3.750364944428418*^9}, {
   3.750365015406686*^9, 3.7503651542509108`*^9}, {3.750365261066121*^9, 
   3.7503652743241997`*^9}, {3.750365531075739*^9, 3.750365560837726*^9}, {
   3.75036564432513*^9, 3.750365646337002*^9}, {3.750365728966009*^9, 
   3.750365732803638*^9}, {3.750366187665132*^9, 3.750366246867943*^9}, {
   3.7503663670331497`*^9, 3.750366370926434*^9}, {3.750366402802795*^9, 
   3.7503664421853848`*^9}, {3.750366731051217*^9, 3.7503667377557287`*^9}, {
   3.750366769374371*^9, 3.7503668093756323`*^9}, {3.750366896704771*^9, 
   3.7503668993349447`*^9}, {3.750366957807788*^9, 3.75036696403658*^9}, {
   3.751231515024201*^9, 3.751231824375305*^9}, {3.751231873218196*^9, 
   3.751232017637101*^9}, {3.751232062582542*^9, 3.751232161534123*^9}, {
   3.751232208760261*^9, 3.751232342406003*^9}, {3.751232912385221*^9, 
   3.7512329248488493`*^9}, {3.7512342642857323`*^9, 
   3.7512342655254993`*^9}, {3.751235860383644*^9, 3.7512358635277243`*^9}, 
   3.7512359202426767`*^9, {3.7512359561821404`*^9, 3.751235984367289*^9}, {
   3.751236036564156*^9, 3.7512361527637453`*^9}, {3.751236215512021*^9, 
   3.751236238974263*^9}, 3.751236456110141*^9, {3.751236597918083*^9, 
   3.751236614811955*^9}, {3.751236699515877*^9, 3.751236720027707*^9}, {
   3.751236751102455*^9, 3.751236754493449*^9}, {3.751236862101678*^9, 
   3.751236868136018*^9}, {3.751239454203775*^9, 3.751239488890787*^9}, {
   3.7512399157276487`*^9, 3.751239925978183*^9}, {3.7512401008343143`*^9, 
   3.7512401828106937`*^9}, {3.751279211725786*^9, 3.751279259480237*^9}, {
   3.7512796000885277`*^9, 3.75127979650462*^9}, {3.75129032810503*^9, 
   3.7512903463465347`*^9}, {3.7512907391136627`*^9, 3.751290748402528*^9}, {
   3.751302831130157*^9, 3.7513028437102203`*^9}, {3.75130289790551*^9, 
   3.7513029601809597`*^9}, {3.751303018088114*^9, 3.7513030374298353`*^9}, {
   3.7513035056714687`*^9, 3.751303513564206*^9}, {3.751303834219907*^9, 
   3.7513038423346033`*^9}, {3.751303913204586*^9, 3.751303935264039*^9}, {
   3.751304201111967*^9, 3.7513042311529007`*^9}, {3.751304438632119*^9, 
   3.751304475544438*^9}, {3.751304595170041*^9, 3.7513046096078243`*^9}, {
   3.751305496479273*^9, 3.7513055082687798`*^9}, {3.7513062939689293`*^9, 
   3.75130630812427*^9}, {3.7513063959847383`*^9, 3.751306478693458*^9}, {
   3.751413083107315*^9, 3.7514130879654016`*^9}, {3.751495866462874*^9, 
   3.751495900615265*^9}, {3.751495989305697*^9, 3.7514961032967873`*^9}, 
   3.751496633970166*^9, {3.7514967725797863`*^9, 3.751496777040188*^9}, {
   3.7515024381144733`*^9, 3.751502438654847*^9}, {3.751537818285037*^9, 
   3.751537823379384*^9}, {3.751537921852923*^9, 3.751537948240361*^9}, {
   3.751537994060628*^9, 3.75153804489296*^9}, {3.751538084361602*^9, 
   3.751538095210515*^9}, {3.751538446384419*^9, 3.751538453481875*^9}, {
   3.7515385051213512`*^9, 3.751538611073222*^9}, {3.751544296105434*^9, 
   3.751544296448882*^9}, {3.7515445130611753`*^9, 3.751544513307205*^9}, {
   3.751545283468165*^9, 3.7515453557442417`*^9}, {3.751545393357276*^9, 
   3.751545413017947*^9}, 3.751549356775401*^9, {3.7515494686515512`*^9, 
   3.7515494762998867`*^9}, {3.751549541204248*^9, 3.751549553585186*^9}, {
   3.7515496056127872`*^9, 3.75154960830787*^9}, {3.7515586060588083`*^9, 
   3.751558763848439*^9}, {3.75156148167162*^9, 3.7515615359062033`*^9}, {
   3.7515615883033333`*^9, 3.751561674294763*^9}, {3.751561712131209*^9, 
   3.751561760593401*^9}, {3.751561808824093*^9, 3.751561867349786*^9}, {
   3.751561937136552*^9, 3.751562042403425*^9}, {3.751562109439796*^9, 
   3.75156211346091*^9}, {3.751562165406714*^9, 3.751562169881166*^9}, {
   3.751562210364498*^9, 3.751562215055176*^9}, {3.7515622692096252`*^9, 
   3.751562356040544*^9}, {3.7515624226909513`*^9, 3.7515625194963923`*^9}, {
   3.751562553680674*^9, 3.7515626257301903`*^9}, {3.751562682090818*^9, 
   3.751562725575674*^9}, {3.7515627860173798`*^9, 3.751562807083415*^9}, {
   3.751563025072036*^9, 3.751563044085355*^9}, {3.751563302579486*^9, 
   3.751563338641426*^9}, {3.751564656900585*^9, 3.7515646575698338`*^9}, {
   3.75156472573591*^9, 3.7515647283481493`*^9}, {3.7515648972775717`*^9, 
   3.751564961463015*^9}, {3.751565095770521*^9, 3.751565161305469*^9}, {
   3.751565212278171*^9, 3.751565253233955*^9}, {3.751565498835065*^9, 
   3.751565515032814*^9}, 3.751566834625976*^9, {3.7515710729392977`*^9, 
   3.751571093934725*^9}, {3.751576993232592*^9, 3.751577016492985*^9}, {
   3.751577075979475*^9, 3.751577153491897*^9}, {3.751577276900434*^9, 
   3.751577279995295*^9}, {3.751577716320366*^9, 3.751577750702815*^9}, {
   3.75157787174164*^9, 3.7515778770914*^9}, {3.7516288724827337`*^9, 
   3.75162888320919*^9}, {3.751629049509807*^9, 3.751629050057425*^9}, {
   3.751629168799286*^9, 3.751629187819458*^9}, {3.7516292189142933`*^9, 
   3.7516292190337343`*^9}, {3.751629265345389*^9, 3.7516292732158546`*^9}, 
   3.7516294222812777`*^9, {3.751629533987393*^9, 3.751629534133215*^9}, {
   3.7516296499196444`*^9, 3.751629651326404*^9}, {3.751629760765243*^9, 
   3.7516300755772743`*^9}, {3.751637290168449*^9, 3.7516373360669947`*^9}, {
   3.7516374010967817`*^9, 3.751637444495826*^9}, {3.7516374782995253`*^9, 
   3.751637546966172*^9}, 3.751637603801092*^9, {3.7516376664196663`*^9, 
   3.7516377201999273`*^9}, {3.751637823352298*^9, 3.751637829900673*^9}, {
   3.751645594769347*^9, 3.751645595250983*^9}, {3.7516459987209063`*^9, 
   3.7516460531244164`*^9}, 3.7516469469398108`*^9, 3.751647005851668*^9, {
   3.75164720689297*^9, 3.751647208209799*^9}, {3.751647481659872*^9, 
   3.751647492006464*^9}, {3.7516485747065372`*^9, 3.7516485781423283`*^9}, {
   3.751649474263177*^9, 3.751649487350234*^9}, {3.7516496352785892`*^9, 
   3.751649645423724*^9}, {3.751649735450672*^9, 3.751649773153988*^9}, 
   3.751649837713822*^9, {3.751652101771695*^9, 3.7516521021151752`*^9}, {
   3.751652133890439*^9, 3.7516521341966867`*^9}, {3.751652169634611*^9, 
   3.751652170133919*^9}, {3.751652211417499*^9, 3.751652267267707*^9}, {
   3.751652415972871*^9, 3.751652419323004*^9}, {3.751652456619438*^9, 
   3.751652471421349*^9}, {3.7516525036422462`*^9, 3.751652507215217*^9}, {
   3.751652689349036*^9, 3.7516526902515373`*^9}, {3.751652726683701*^9, 
   3.7516527866522913`*^9}, {3.751653014738415*^9, 3.751653046670014*^9}, {
   3.751653127565333*^9, 3.7516531339716167`*^9}, 3.751653267443864*^9, 
   3.751653345408745*^9, {3.751653511093302*^9, 3.751653511635913*^9}, 
   3.7516535431600037`*^9, {3.751653838557932*^9, 3.751653843961684*^9}, {
   3.751653962406951*^9, 3.751653962538517*^9}, {3.7516545795730352`*^9, 
   3.7516545999330273`*^9}, {3.751715926611313*^9, 3.751715942182036*^9}, {
   3.751716035513422*^9, 3.7517160464843063`*^9}, {3.751716146299018*^9, 
   3.751716156228015*^9}, {3.751716482410522*^9, 3.751716486076694*^9}, {
   3.751716558032143*^9, 3.7517165833864202`*^9}, {3.751716669238173*^9, 
   3.751716717748485*^9}, {3.751716791446598*^9, 3.751716813497707*^9}, {
   3.751716914726776*^9, 3.7517169316452703`*^9}, {3.751717050767728*^9, 
   3.751717054568385*^9}, {3.751717268077907*^9, 3.751717275935107*^9}, {
   3.75171733386516*^9, 3.7517173377785997`*^9}, {3.751717370589518*^9, 
   3.751717417875321*^9}, {3.7517180833138437`*^9, 3.7517180878551197`*^9}, {
   3.7517183889689713`*^9, 3.751718407492717*^9}, {3.751718457747369*^9, 
   3.751718476401888*^9}, {3.7517189806430893`*^9, 3.75171901190724*^9}, {
   3.751719101169832*^9, 3.751719139749963*^9}, {3.751719327337944*^9, 
   3.751719328827232*^9}, {3.751720401957924*^9, 3.751720458041404*^9}, {
   3.75172072542136*^9, 3.75172074468608*^9}, {3.751720911417285*^9, 
   3.7517209205994997`*^9}, {3.751720957122806*^9, 3.751721026148793*^9}, {
   3.751721089598776*^9, 3.751721102125545*^9}, {3.751721144723473*^9, 
   3.751721158568522*^9}, {3.751733039881497*^9, 3.75173306050749*^9}, {
   3.751733094888483*^9, 3.751733130128273*^9}, 3.751735165010952*^9, {
   3.751735922048814*^9, 3.751735924632613*^9}, {3.751736113446814*^9, 
   3.751736118439741*^9}, {3.751736206401352*^9, 3.751736217306389*^9}, {
   3.751798417659898*^9, 3.751798429367803*^9}, {3.7517986494732227`*^9, 
   3.7517986525278263`*^9}, {3.7517986912293262`*^9, 3.751798770342992*^9}, {
   3.751798823839013*^9, 3.75179884550105*^9}, {3.751798885931096*^9, 
   3.751798929582193*^9}, {3.751798979707712*^9, 3.75179915882579*^9}, {
   3.751799193597516*^9, 3.7517992780047894`*^9}, {3.751799309970454*^9, 
   3.751799405110573*^9}, {3.751799482687084*^9, 3.75179958182675*^9}, 
   3.7518001227415257`*^9, {3.7518001925370407`*^9, 3.751800251458807*^9}, {
   3.751800303861652*^9, 3.7518003956405582`*^9}, {3.7518004272471657`*^9, 
   3.75180043983603*^9}, {3.75180048296913*^9, 3.751800494327083*^9}, {
   3.7518005372163363`*^9, 3.751800579223317*^9}, {3.7518006119581203`*^9, 
   3.7518006628536673`*^9}, 3.751800695716783*^9, {3.751800763628375*^9, 
   3.7518008304330883`*^9}, {3.751800876348398*^9, 3.751800927947172*^9}, {
   3.751801839638151*^9, 3.7518018463838053`*^9}, {3.751802126918486*^9, 
   3.751802131557201*^9}, {3.751802260774788*^9, 3.7518022609512663`*^9}, {
   3.7518023776895638`*^9, 3.751802378289467*^9}, {3.751802426490089*^9, 
   3.751802475933446*^9}, {3.7518031508784647`*^9, 3.751803157509877*^9}, 
   3.7518061404754963`*^9, {3.7518062625937634`*^9, 3.7518062631108913`*^9}, {
   3.7518070846834583`*^9, 3.7518071377535753`*^9}, {3.751807177573794*^9, 
   3.751807291920554*^9}, {3.751807323339164*^9, 3.751807328728582*^9}, {
   3.7518075376393414`*^9, 3.7518075837025137`*^9}, {3.751807668973563*^9, 
   3.751807830288034*^9}, {3.751807958619115*^9, 3.751807971924474*^9}, {
   3.7518080290092382`*^9, 3.751808069575149*^9}, {3.751808252079794*^9, 
   3.751808377741488*^9}, {3.751808570772999*^9, 3.751808574260172*^9}, {
   3.751808704141993*^9, 3.751808739224606*^9}, {3.7518093690816383`*^9, 
   3.75180937572128*^9}, {3.751809686168675*^9, 3.751809760554845*^9}, {
   3.751809917637191*^9, 3.751809928259366*^9}, {3.751810228648875*^9, 
   3.75181028324914*^9}, {3.751824616853136*^9, 3.75182472716533*^9}, {
   3.7518249280280323`*^9, 3.751824928183599*^9}, {3.751825151434713*^9, 
   3.751825222966187*^9}, {3.751839748675558*^9, 3.7518397501173487`*^9}, 
   3.7518401836277237`*^9, {3.751840792881866*^9, 3.751840797702263*^9}, {
   3.7518410679511337`*^9, 3.751841069211073*^9}, 3.7518415370510273`*^9, {
   3.751895487876444*^9, 3.7518954930611362`*^9}, {3.7518955580577173`*^9, 
   3.751895604224069*^9}, {3.751895654310853*^9, 3.7518956680298023`*^9}, {
   3.751896278129829*^9, 3.7518963364186573`*^9}, {3.751896627099759*^9, 
   3.751896627414134*^9}, {3.7520763299396*^9, 3.752076338638386*^9}, 
   3.752077011131209*^9, {3.752077140332273*^9, 3.752077276395726*^9}, {
   3.752077943788394*^9, 3.752077964578499*^9}, {3.7520781936295633`*^9, 
   3.752078208452619*^9}, 3.752078456877599*^9, 3.75207862699662*^9, {
   3.752078731399474*^9, 3.752078752600417*^9}, {3.75209184854316*^9, 
   3.752091882960454*^9}, {3.7520920634820023`*^9, 3.752092110012907*^9}, {
   3.752092773098748*^9, 3.752092857895316*^9}, {3.752092899623858*^9, 
   3.75209291924622*^9}, {3.7520935761298532`*^9, 3.75209365272859*^9}, {
   3.752093931883293*^9, 3.752094086147716*^9}, {3.752094140909066*^9, 
   3.7520941988478603`*^9}, {3.7520946095735207`*^9, 3.752094612960443*^9}, {
   3.7520951182367773`*^9, 3.7520951514429483`*^9}, {3.752095282160482*^9, 
   3.75209530126021*^9}, {3.752095335688068*^9, 3.752095458228656*^9}, {
   3.752098904416341*^9, 3.7520989391011744`*^9}, {3.752145925689399*^9, 
   3.752145954696745*^9}, {3.7521464365413647`*^9, 3.7521464839556637`*^9}, {
   3.752146613749238*^9, 3.7521469611268473`*^9}, {3.752147003218556*^9, 
   3.752147081933769*^9}, {3.752147183334186*^9, 3.7521471856604843`*^9}, {
   3.7521473173076477`*^9, 3.752147323731083*^9}, {3.7521481407061653`*^9, 
   3.752148149605111*^9}, {3.752148359644085*^9, 3.7521483883184443`*^9}, {
   3.752148849884918*^9, 3.7521489816184683`*^9}, {3.752149255017062*^9, 
   3.752149255581373*^9}, {3.7521494791149473`*^9, 3.752149522284981*^9}, {
   3.752149643584491*^9, 3.7521496463537083`*^9}, {3.752149776181638*^9, 
   3.75214978659002*^9}, {3.752149946107175*^9, 3.752150032072791*^9}, {
   3.7521502542989197`*^9, 3.75215032635882*^9}, {3.752150474827382*^9, 
   3.7521504838886633`*^9}, {3.752150660235119*^9, 3.752150676583785*^9}, {
   3.752151060804699*^9, 3.7521510648490057`*^9}, {3.752151333988583*^9, 
   3.7521513443492613`*^9}, {3.7521515595161753`*^9, 3.752151571569998*^9}, {
   3.752173023418043*^9, 3.752173041389248*^9}, {3.752183890510558*^9, 
   3.7521839157637367`*^9}, {3.7521839516855097`*^9, 3.752183954796417*^9}, 
   3.7522740628916817`*^9, {3.7522766257949553`*^9, 3.752276642932055*^9}, {
   3.7540600366067543`*^9, 3.754060064065524*^9}, {3.75406413609597*^9, 
   3.754064137850526*^9}, {3.7540685596919823`*^9, 3.754068714299493*^9}, {
   3.7540687554301653`*^9, 3.754068820935916*^9}, {3.754070261826288*^9, 
   3.754070265858246*^9}, {3.754071095535481*^9, 3.7540712296380463`*^9}, {
   3.754071296696229*^9, 3.7540713133310966`*^9}, {3.7540717234752607`*^9, 
   3.7540717426247263`*^9}, {3.754071811627493*^9, 3.7540718272590847`*^9}, {
   3.754071973007613*^9, 3.754072029520756*^9}, {3.7540720600488234`*^9, 
   3.754072123683313*^9}, {3.754072270193646*^9, 3.754072350764205*^9}, {
   3.754072387505513*^9, 3.7540724024058123`*^9}, {3.7540726555796337`*^9, 
   3.7540726902084*^9}, 3.754124863716507*^9, {3.754125045016964*^9, 
   3.754125078222209*^9}, {3.754125201074399*^9, 3.754125201844459*^9}, {
   3.754135337680895*^9, 3.7541353387164993`*^9}, {3.754136989807629*^9, 
   3.754136997137992*^9}, {3.754137032943564*^9, 3.754137105997875*^9}, {
   3.7541373082634087`*^9, 3.7541373455656643`*^9}, {3.754137453136874*^9, 
   3.754137490345498*^9}, {3.754141797551085*^9, 3.7541418007452917`*^9}, {
   3.754142020743325*^9, 3.7541421176707773`*^9}, {3.754142277352551*^9, 
   3.754142298283483*^9}, {3.754142376544476*^9, 3.754142455529378*^9}, {
   3.754142573429875*^9, 3.754142577698892*^9}, {3.7541426484902554`*^9, 
   3.754142733055215*^9}, 3.754143113812148*^9, {3.754143192783051*^9, 
   3.754143239654769*^9}, {3.7541433416137047`*^9, 3.75414344205836*^9}, {
   3.754143510110219*^9, 3.7541437502403517`*^9}, {3.7541437914362707`*^9, 
   3.754143792137704*^9}, {3.754143884194683*^9, 3.754143904421767*^9}, {
   3.754148675317902*^9, 3.7541487467788363`*^9}, {3.754149590195074*^9, 
   3.7541496025926237`*^9}, 3.754150060270068*^9, {3.7541502232345448`*^9, 
   3.7541503350456743`*^9}, 3.7541507754206944`*^9, {3.754150949172139*^9, 
   3.754150980118537*^9}, {3.754152308796789*^9, 3.7541523358813477`*^9}, {
   3.754152423481935*^9, 3.7541524427830763`*^9}, 3.75415277776615*^9, {
   3.754152904330847*^9, 3.754152933159709*^9}, {3.754153381876502*^9, 
   3.754153424878832*^9}, {3.754154301664117*^9, 3.7541543104932213`*^9}, {
   3.754155002506782*^9, 3.754155009940427*^9}, 3.754155450928688*^9, {
   3.754155623143117*^9, 3.7541556890425034`*^9}, 3.75415580894442*^9, {
   3.754158124589423*^9, 3.754158165441802*^9}, {3.754221678167041*^9, 
   3.754221691996869*^9}, {3.754331394731304*^9, 3.754331400847047*^9}, {
   3.754332374641901*^9, 3.754332378082255*^9}, {3.75448620816931*^9, 
   3.754486212734262*^9}, {3.754487092898325*^9, 3.75448709696136*^9}, {
   3.754487631371769*^9, 3.754487632627947*^9}, {3.754498938990245*^9, 
   3.7544989434472723`*^9}, {3.754499318533059*^9, 3.754499319435788*^9}, {
   3.754499515294112*^9, 3.75449955571801*^9}, {3.754499974383054*^9, 
   3.754500000620544*^9}, {3.754610326474647*^9, 3.7546103451255608`*^9}, 
   3.7546104713570347`*^9, 3.754611058721663*^9, {3.754611287655113*^9, 
   3.754611359478609*^9}, {3.7546114198371677`*^9, 3.754611423616193*^9}, {
   3.754847304097584*^9, 3.754847335194729*^9}, {3.754847423957529*^9, 
   3.754847444892487*^9}, 3.7548599500228777`*^9, {3.754866577320202*^9, 
   3.7548665852139997`*^9}, {3.754866646884166*^9, 3.754866654807461*^9}, {
   3.754867029235722*^9, 3.754867052407175*^9}, {3.7550383338132267`*^9, 
   3.755038362221529*^9}, 3.755038394431713*^9, 3.755038449246237*^9, 
   3.755038502769348*^9, 3.7550385636070538`*^9, {3.755038622036475*^9, 
   3.7550386509129877`*^9}, {3.7550387447025223`*^9, 3.755038798704493*^9}, {
   3.755038832054975*^9, 3.75503893219184*^9}, {3.7550391457328463`*^9, 
   3.755039151295034*^9}, {3.755039326093225*^9, 3.755039343571467*^9}, {
   3.7550426828143883`*^9, 3.7550426923367767`*^9}, {3.7550427751742496`*^9, 
   3.755042815741707*^9}, {3.755043092447254*^9, 3.755043094818572*^9}, {
   3.755043160627067*^9, 3.755043172457424*^9}, 3.755043244783074*^9, 
   3.755043565730195*^9, {3.7550436355354967`*^9, 3.755043668873497*^9}, {
   3.755044005281886*^9, 3.755044018982979*^9}, {3.75504413603023*^9, 
   3.755044144325768*^9}, {3.755091330094133*^9, 3.755091341094282*^9}, {
   3.7550916132037477`*^9, 3.755091677280504*^9}, {3.755248048668088*^9, 
   3.755248085211885*^9}, {3.755248158963763*^9, 3.7552482191518393`*^9}, {
   3.75524908608314*^9, 3.755249133342575*^9}, {3.755249291948694*^9, 
   3.755249292107854*^9}, {3.755249323920051*^9, 3.7552493459602537`*^9}, {
   3.755249458921034*^9, 3.7552494860425177`*^9}, {3.755249519900857*^9, 
   3.755249570431768*^9}, {3.755251140713818*^9, 3.755251305615366*^9}, {
   3.755251363697605*^9, 3.755251393726355*^9}, {3.755251465912447*^9, 
   3.755251467594413*^9}, {3.755251540798876*^9, 3.755251543552836*^9}, {
   3.755251719241967*^9, 3.75525202309391*^9}, {3.755252062682158*^9, 
   3.7552520675302896`*^9}, {3.755252141443934*^9, 3.755252149300518*^9}, {
   3.755252201674165*^9, 3.755252208796874*^9}, {3.7552522901316433`*^9, 
   3.755252344304134*^9}, {3.755253308003385*^9, 3.755253313365698*^9}, {
   3.75527983555612*^9, 3.755279849331195*^9}, {3.755279891894659*^9, 
   3.755279892893921*^9}, {3.755279928842754*^9, 3.755279945544742*^9}, {
   3.75528003064255*^9, 3.75528003348041*^9}, {3.755280352889839*^9, 
   3.7552803545653343`*^9}, {3.755280928872278*^9, 3.755280930270104*^9}, {
   3.755281325071101*^9, 3.7552813304491053`*^9}, {3.755282299107503*^9, 
   3.755282304925618*^9}, {3.755300965507504*^9, 3.755300966882903*^9}, {
   3.755301051716546*^9, 3.755301057214089*^9}, {3.755303131196149*^9, 
   3.755303153335169*^9}, 3.755304785347013*^9, {3.7553461505467176`*^9, 
   3.755346182918645*^9}, {3.7553464924506683`*^9, 3.755346504040049*^9}, {
   3.7553466223729362`*^9, 3.755346626221219*^9}, {3.7553467534532824`*^9, 
   3.7553468335414677`*^9}, {3.755347805947216*^9, 3.755347833083145*^9}, {
   3.755347877840963*^9, 3.755347981614768*^9}, {3.755348095689247*^9, 
   3.755348105479208*^9}, {3.755348149104968*^9, 3.755348174650983*^9}, {
   3.755348547904275*^9, 3.755348551669018*^9}, {3.7553486815290537`*^9, 
   3.7553487140070677`*^9}, {3.755349603182302*^9, 3.7553496323245077`*^9}, {
   3.755422261416854*^9, 3.7554222672999372`*^9}, {3.7554226715942593`*^9, 
   3.755422678512281*^9}, {3.755426961774531*^9, 3.755426963241269*^9}, {
   3.755427034636972*^9, 3.755427040207037*^9}, {3.755427100401968*^9, 
   3.755427130040387*^9}, {3.755427433092792*^9, 3.7554274348093443`*^9}, {
   3.75543322013325*^9, 3.755433250652923*^9}, {3.755433947101635*^9, 
   3.755434085916934*^9}, {3.755434872915963*^9, 3.755434974882758*^9}, {
   3.755435179237575*^9, 3.755435179426338*^9}, {3.755435449296164*^9, 
   3.755435484727274*^9}, {3.755435837436494*^9, 3.7554358485757427`*^9}, {
   3.755435985523542*^9, 3.755435987146476*^9}, {3.755465403016705*^9, 
   3.755465452259523*^9}, {3.755466211187352*^9, 3.755466213068471*^9}, {
   3.7554662831581583`*^9, 3.7554663685188828`*^9}, {3.7554664531899242`*^9, 
   3.7554664895790567`*^9}, {3.7554665325740213`*^9, 
   3.7554665944797173`*^9}, {3.755466660574009*^9, 3.755466698252858*^9}, {
   3.755466730660328*^9, 3.755466788873332*^9}, {3.755466845093766*^9, 
   3.755466845397154*^9}, {3.75546697687957*^9, 3.755467015632967*^9}, {
   3.75546711144893*^9, 3.755467112939146*^9}, {3.755467259531*^9, 
   3.7554672851981373`*^9}, {3.755467363069664*^9, 3.755467471390663*^9}, {
   3.755467501763892*^9, 3.7554675634623947`*^9}, {3.755467821712776*^9, 
   3.755467911644956*^9}, {3.7554680725048428`*^9, 3.755468173940151*^9}, {
   3.75546826621847*^9, 3.755468303597891*^9}, {3.755468441900177*^9, 
   3.755468492714786*^9}, {3.755468584702196*^9, 3.755468591143145*^9}, {
   3.75546867188352*^9, 3.755468672432798*^9}, 3.755468775841443*^9, {
   3.7554689054083147`*^9, 3.7554689461771317`*^9}, {3.7554702273167353`*^9, 
   3.755470300176528*^9}, {3.7554704710211287`*^9, 3.755470516732333*^9}, {
   3.755470648084305*^9, 3.7554706559322443`*^9}, {3.755471303028047*^9, 
   3.75547131171236*^9}, {3.755471375950007*^9, 3.755471472435717*^9}, {
   3.7554715412197437`*^9, 3.7554715708828297`*^9}, 3.755471795004229*^9, {
   3.7554719567033987`*^9, 3.755471963577717*^9}, {3.755472253079762*^9, 
   3.755472256739046*^9}, {3.755472288060709*^9, 3.755472340201665*^9}, {
   3.7554724540623827`*^9, 3.755472457610077*^9}, {3.755472764493659*^9, 
   3.7554727700264606`*^9}, 3.755472933620186*^9, {3.755473086901925*^9, 
   3.7554730895353947`*^9}, {3.755473446453323*^9, 3.7554734473113747`*^9}, {
   3.755473521965591*^9, 3.755473523901739*^9}, {3.755473562559918*^9, 
   3.755473572922802*^9}, {3.7554742280690002`*^9, 3.7554742290233994`*^9}, {
   3.7554749517074547`*^9, 3.7554749574835577`*^9}, {3.755683194044935*^9, 
   3.755683337962453*^9}, {3.755684786574656*^9, 3.755684808720909*^9}, {
   3.755684937901537*^9, 3.75568494493083*^9}, {3.75570494472488*^9, 
   3.7557049742445593`*^9}, 3.755705291734745*^9, {3.755705324456543*^9, 
   3.755705354615466*^9}, {3.755705475647489*^9, 3.7557054768755827`*^9}, {
   3.7557061778409443`*^9, 3.75570618266053*^9}, {3.756138929942781*^9, 
   3.756138944823853*^9}, {3.756139376351317*^9, 3.756139518637814*^9}, {
   3.756139662438712*^9, 3.756139668887361*^9}, 3.7561399319637136`*^9, {
   3.756140017881428*^9, 3.756140021991975*^9}, {3.756140085613619*^9, 
   3.7561400952779903`*^9}, {3.7561402246095333`*^9, 3.756140242520838*^9}, {
   3.7561403110583143`*^9, 3.756140314999977*^9}, {3.756140371588345*^9, 
   3.7561403754876137`*^9}, {3.756140468731234*^9, 3.7561404984337683`*^9}, {
   3.7561409838115587`*^9, 3.756140985423092*^9}, {3.7561416244839287`*^9, 
   3.756141635040811*^9}, 3.7561417099059067`*^9, 3.7561417663371696`*^9, {
   3.7561418623153257`*^9, 3.7561418667296247`*^9}, {3.756142008811397*^9, 
   3.7561420100010567`*^9}, {3.7561420779614983`*^9, 3.75614208453522*^9}, {
   3.756142311953557*^9, 3.756142334009741*^9}, {3.7561424559031277`*^9, 
   3.756142509703713*^9}, {3.7561426492067966`*^9, 3.756142663638414*^9}, {
   3.756143097322401*^9, 3.756143097495571*^9}, {3.756143140692525*^9, 
   3.7561431408893423`*^9}, {3.7561457448252907`*^9, 3.756145746065488*^9}, 
   3.7561458630340223`*^9, {3.756146141938093*^9, 3.7561461477695303`*^9}, {
   3.75614698404207*^9, 3.756146992695438*^9}, 3.756147222213015*^9, {
   3.7562200131007643`*^9, 3.756220050227367*^9}, {3.756220152310268*^9, 
   3.7562201921713676`*^9}, {3.756220225663075*^9, 3.756220378668243*^9}, {
   3.7562204104013357`*^9, 3.75622041068817*^9}, {3.7562204617290373`*^9, 
   3.7562207431352587`*^9}, {3.756220783797078*^9, 3.756220904564247*^9}, {
   3.7562209481083393`*^9, 3.756220948784628*^9}, {3.756220982739553*^9, 
   3.7562210199670067`*^9}, {3.756221067677279*^9, 3.756221313845091*^9}, {
   3.7562214614440823`*^9, 3.7562214637608833`*^9}, {3.756221496962482*^9, 
   3.756221503844017*^9}, {3.756221734051803*^9, 3.756221741368436*^9}, {
   3.756221782911639*^9, 3.756221788358405*^9}, {3.756221845204444*^9, 
   3.756221849761675*^9}, 3.756221933509963*^9, {3.756222238368146*^9, 
   3.756222244954134*^9}, {3.7562223015607147`*^9, 3.756222305114606*^9}, {
   3.756222434639605*^9, 3.756222474969943*^9}, {3.756222671946608*^9, 
   3.75622271049175*^9}, {3.756222753507698*^9, 3.7562227580489473`*^9}, {
   3.756223158510981*^9, 3.7562232669989567`*^9}, {3.756223302921027*^9, 
   3.756223316290752*^9}, {3.756223727683033*^9, 3.756223784929059*^9}, {
   3.756223823581317*^9, 3.756223856416828*^9}, {3.756224082904057*^9, 
   3.7562240833962708`*^9}, {3.7562244047134*^9, 3.756224410189335*^9}, {
   3.756226610080892*^9, 3.7562266215835342`*^9}, {3.756295078706974*^9, 
   3.756295107556464*^9}, 3.756295810719227*^9, {3.756305068934804*^9, 
   3.7563050953171177`*^9}, {3.756305730667582*^9, 3.7563057386303043`*^9}, {
   3.756309378456243*^9, 3.756309435267972*^9}, {3.7563099550944977`*^9, 
   3.756309959346018*^9}, {3.7563838770371523`*^9, 3.756383898421974*^9}, {
   3.756383933952104*^9, 3.756383935682241*^9}, {3.756384111420044*^9, 
   3.7563841300311737`*^9}, {3.756384190927565*^9, 3.756384193277317*^9}, {
   3.756466032522214*^9, 3.756466035316917*^9}, 3.7564660736578293`*^9, {
   3.756466166817708*^9, 3.7564661785835953`*^9}},
 CellLabel->"In[45]:=",ExpressionUUID->"5456c4c7-48db-4458-b1c2-407cff088579"]
},
WindowSize->{1308, 1001},
WindowMargins->{{158, Automatic}, {-7, Automatic}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 151282, 2860, 7591, "Input",ExpressionUUID->"e6ee71de-10b6-46de-bd08-b2d14f1f1b4f"],
Cell[151707, 2877, 210301, 3746, 901, "Output",ExpressionUUID->"6f9543ad-fde6-4d13-89be-103d082dad61"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362045, 6628, 538, 9, 67, "Section",ExpressionUUID->"912421aa-3894-415b-931e-bec10ff48e38",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[362586, 6639, 1972, 32, 89, "Input",ExpressionUUID->"523b4af4-68a5-4b28-a172-fc0561c750b2",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[364561, 6673, 916, 17, 81, "Subsection",ExpressionUUID->"802e4f4c-f1ae-4198-88cf-12d0b7b4e8a9",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[365480, 6692, 4351, 96, 110, "Input",ExpressionUUID->"2eb0914a-b7bd-4a4a-80fa-ac69b2ebd63e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[369834, 6790, 1866, 28, 169, "Subsection",ExpressionUUID->"33188028-e5c7-4f01-8c46-f6e5ee9beff8",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[371703, 6820, 6425, 132, 272, "Input",ExpressionUUID->"88cb083b-6412-4f74-9ce1-1880850bac1b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[378131, 6954, 1015, 18, 81, "Subsection",ExpressionUUID->"faf73c06-db0a-4ef5-90cf-01af02531896",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[379149, 6974, 1083, 27, 68, "Input",ExpressionUUID->"ba259a72-d1e1-4d0c-8900-546301101a65",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[380235, 7003, 1053, 19, 81, "Subsection",ExpressionUUID->"3b0ad7fd-dd0d-445e-a2e3-b0c2cac4f854",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[381291, 7024, 1770, 33, 68, "Input",ExpressionUUID->"67abda04-21ef-4c91-9d41-85df673c975e",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[383064, 7059, 16476, 230, 39, "Input",ExpressionUUID->"367dfbb4-5237-404a-8971-7378dcb3f1f8",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[399543, 7291, 17022, 247, 46, "Input",ExpressionUUID->"c9af6d59-1c83-498c-aeed-5ff41c940aff",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[416568, 7540, 944, 18, 113, "Section",ExpressionUUID->"c4d61151-5cba-4628-aa24-a2c7d698803c",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[417515, 7560, 4796, 69, 39, "Input",ExpressionUUID->"1c34b377-656a-4cf7-87af-be565ee0a602",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[422314, 7631, 4805, 69, 82, "Input",ExpressionUUID->"260b623f-98e8-404a-b6d7-1085d44f21b5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[427122, 7702, 4818, 69, 39, "Input",ExpressionUUID->"48db0d1a-cecf-4c5d-8b09-df2604874f66",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[431943, 7773, 6316, 125, 110, "Input",ExpressionUUID->"6c9343cf-da94-4a8a-b757-78307e785f6b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[438262, 7900, 4812, 69, 39, "Input",ExpressionUUID->"ee747a6e-d5a0-45c8-ac85-c497c816176e",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[443077, 7971, 5930, 131, 278, "Input",ExpressionUUID->"c7b1519e-bd54-4653-aa54-7d8674e5c994",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[449010, 8104, 4798, 68, 39, "Input",ExpressionUUID->"d832c35e-4b33-40cc-a956-b4961faa2cc6",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[453811, 8174, 13245, 226, 133, "Input",ExpressionUUID->"41f8ec12-f622-403f-9509-6c1044b40bb6",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[467059, 8402, 4787, 69, 39, "Input",ExpressionUUID->"af612f0b-ae36-4f80-9907-55ffccbbd50f",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[471849, 8473, 21429, 411, 1076, "Input",ExpressionUUID->"270cde5e-42f0-42be-a3ba-9affa07662ca",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[493281, 8886, 17738, 327, 635, "Input",ExpressionUUID->"6d6e2063-6715-4e8c-aa32-89fa7b4ba93b",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[511022, 9215, 6103, 86, 39, "Input",ExpressionUUID->"e677af55-14b1-4e6e-94ba-dba297de1e94",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[517128, 9303, 8323, 210, 236, "Input",ExpressionUUID->"07ea8395-fd8c-4819-9e00-4f77786192a5",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[525454, 9515, 50961, 697, 39, "Input",ExpressionUUID->"67dbbb11-4224-404d-b1c5-34c09749612a",
 Evaluatable->False,
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True],
Cell[576418, 10214, 6482, 156, 320, "Input",ExpressionUUID->"c621ef94-98d9-45d6-b7a3-7b7b74d02def",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}, Open  ]],
Cell[582915, 10373, 152, 3, 30, "Input",ExpressionUUID->"a231694b-a6eb-4848-a822-82587e85148d"],
Cell[583070, 10378, 119907, 2161, 4548, "Input",ExpressionUUID->"5456c4c7-48db-4458-b1c2-407cff088579",
 CellGroupingRules->{"GroupTogetherGrouping", 10000.},
 InitializationCell->True]
}
]
*)

